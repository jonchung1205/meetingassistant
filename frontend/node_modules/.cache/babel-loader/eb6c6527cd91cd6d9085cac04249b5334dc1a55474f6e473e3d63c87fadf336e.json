{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Meeting Assistant\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  var _getSilenceDisplay, _getSilenceDisplay2;\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [totalSpeakingTime, setTotalSpeakingTime] = useState(0);\n  const [silenceTime, setSilenceTime] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n\n  // Enhanced real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [activeSpeakers, setActiveSpeakers] = useState(new Set()); // Track multiple active speakers\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const [speakerActivity, setSpeakerActivity] = useState({});\n  const [realtimeStats, setRealtimeStats] = useState({\n    meeting_duration: 0,\n    total_speaking_time: 0,\n    silence_time: 0\n  });\n\n  // Enhanced conversation states\n  const [conversationMomentum, setConversationMomentum] = useState(0);\n  const [silenceState, setSilenceState] = useState({\n    active: false,\n    category: null,\n    duration: 0\n  });\n  const [speakerTransitions, setSpeakerTransitions] = useState(0);\n  const [dominantSpeaker, setDominantSpeaker] = useState(null);\n  const [conversationInsights, setConversationInsights] = useState({});\n  const [recentSpeakerSequence, setRecentSpeakerSequence] = useState([]);\n\n  // New multi-speaker overlap detection\n  const [speakerOverlaps, setSpeakerOverlaps] = useState([]);\n  const [conversationFlow, setConversationFlow] = useState({\n    transitions: {},\n    patterns: []\n  });\n  const [speakerProfiles, setSpeakerProfiles] = useState({});\n\n  // Connection and performance states\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const [lastMessageTime, setLastMessageTime] = useState(Date.now());\n  const [messageCount, setMessageCount] = useState(0);\n  const [backendVersion, setBackendVersion] = useState('2.0.0');\n  const [serverFeatures, setServerFeatures] = useState([]);\n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const performanceTimerRef = useRef(null);\n  const insightsTimerRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  // Enhanced performance monitoring\n  useEffect(() => {\n    performanceTimerRef.current = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastMessage = now - lastMessageTime;\n      if (isRecording && timeSinceLastMessage > 5000) {\n        setConnectionQuality('poor');\n      } else if (isRecording && timeSinceLastMessage > 2000) {\n        setConnectionQuality('fair');\n      } else if (isRecording) {\n        setConnectionQuality('good');\n      }\n    }, 1000);\n    return () => {\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n    };\n  }, [lastMessageTime, isRecording]);\n\n  // Enhanced conversation insights fetching\n  useEffect(() => {\n    if (isRecording) {\n      insightsTimerRef.current = setInterval(async () => {\n        try {\n          const response = await fetch(`${backendUrl}/api/meeting/conversation-insights`);\n          if (response.ok) {\n            const insights = await response.json();\n            setConversationInsights(insights);\n            if (insights.recent_speaker_sequence) {\n              setRecentSpeakerSequence(insights.recent_speaker_sequence);\n            }\n            if (insights.speaker_transitions) {\n              setConversationFlow({\n                transitions: insights.speaker_transitions,\n                patterns: insights.conversation_patterns || []\n              });\n            }\n\n            // Update speaker dominance visualization\n            if (insights.speaker_dominance) {\n              setSpeakerProfiles(prev => {\n                const updated = {\n                  ...prev\n                };\n                Object.entries(insights.speaker_dominance).forEach(([speakerId, dominance]) => {\n                  if (!updated[speakerId]) {\n                    updated[speakerId] = {};\n                  }\n                  updated[speakerId].dominance = dominance;\n                });\n                return updated;\n              });\n            }\n          }\n        } catch (error) {\n          console.warn('Failed to fetch conversation insights:', error);\n        }\n      }, 2000); // Every 2 seconds for more responsive updates\n    }\n    return () => {\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n    };\n  }, [isRecording, backendUrl]);\n  useEffect(() => {\n    connectToWebSocket();\n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n  const connectToWebSocket = useCallback(() => {\n    if (isConnectingRef.current || ws.current && ws.current.readyState === WebSocket.CONNECTING) {\n      return;\n    }\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    try {\n      console.log('Connecting to Enhanced WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      ws.current.onopen = () => {\n        console.log('Connected to Enhanced WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        setConnectionQuality('good');\n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({\n            type: 'ping'\n          }));\n        }\n      };\n      ws.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessageTime(Date.now());\n          setMessageCount(prev => prev + 1);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      ws.current.onclose = event => {\n        console.log('Enhanced WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      ws.current.onerror = error => {\n        console.error('Enhanced WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n      };\n    } catch (error) {\n      console.error('Failed to create Enhanced WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      setConnectionQuality('poor');\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  }, [backendUrl]);\n  const handleWebSocketMessage = useCallback(data => {\n    switch (data.type) {\n      case 'connection_established':\n        if (data.version) {\n          setBackendVersion(data.version);\n        }\n        if (data.features) {\n          setServerFeatures(data.features);\n        }\n        console.log('Enhanced connection established:', data.message);\n        break;\n      case 'speaker_activity':\n        handleEnhancedSpeakerActivity(data);\n        break;\n      case 'speaker_stats':\n        handleEnhancedSpeakerStats(data);\n        break;\n      case 'transcription':\n        handleEnhancedTranscription(data);\n        break;\n      case 'timer_update':\n        handleEnhancedTimerUpdate(data);\n        break;\n      case 'silence':\n        handleEnhancedSilenceEvent(data);\n        break;\n      case 'speaker_overlap':\n        handleSpeakerOverlap(data);\n        break;\n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  }, []);\n  const handleEnhancedSpeakerActivity = useCallback(data => {\n    const {\n      speaker_id,\n      action,\n      timestamp,\n      conversation_momentum,\n      overlap_detected\n    } = data;\n    setLastActivity({\n      speaker_id,\n      action,\n      timestamp\n    });\n\n    // Update conversation momentum\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n\n    // Handle multi-speaker scenarios\n    setActiveSpeakers(prev => {\n      const updated = new Set(prev);\n      if (action === 'started') {\n        updated.add(speaker_id);\n        setCurrentSpeaker(speaker_id); // Primary speaker\n      } else if (action === 'stopped') {\n        updated.delete(speaker_id);\n        if (speaker_id === currentSpeaker) {\n          // Set new primary speaker if available\n          const remaining = Array.from(updated);\n          setCurrentSpeaker(remaining.length > 0 ? remaining[0] : null);\n        }\n      }\n      return updated;\n    });\n\n    // Track speaker overlaps\n    if (overlap_detected) {\n      setSpeakerOverlaps(prev => {\n        const newOverlap = {\n          id: `overlap-${timestamp}`,\n          speakers: data.overlapping_speakers || [speaker_id],\n          timestamp,\n          duration: data.overlap_duration || 0\n        };\n        return [newOverlap, ...prev.slice(0, 19)]; // Keep last 20 overlaps\n      });\n    }\n\n    // Enhanced speaker activity tracking\n    setSpeakerActivity(prev => ({\n      ...prev,\n      [speaker_id]: {\n        ...prev[speaker_id],\n        last_action: action,\n        last_timestamp: timestamp,\n        is_active: action === 'started',\n        confidence: data.confidence || 1.0,\n        audio_quality: data.audio_quality || 'good'\n      }\n    }));\n  }, [currentSpeaker]);\n  const handleEnhancedSpeakerStats = useCallback(data => {\n    const {\n      speakers,\n      meeting_duration,\n      total_speaking_time,\n      silence_time,\n      conversation_momentum,\n      total_speaker_transitions,\n      dominant_speaker\n    } = data;\n\n    // Enhanced speaker data processing\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking,\n      speech_segments: speaker.speech_segments || 0,\n      confidence_score: speaker.confidence_score || 1.0,\n      avg_speaking_duration: speaker.avg_speaking_duration || 0,\n      avg_pitch: speaker.avg_pitch,\n      avg_energy: speaker.avg_energy,\n      speaking_pattern_score: speaker.speaking_pattern_score || 0.5,\n      // New enhanced metrics\n      voice_consistency: speaker.voice_consistency || 0.8,\n      interrupt_count: speaker.interrupt_count || 0,\n      interrupted_count: speaker.interrupted_count || 0\n    }));\n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n    setTotalSpeakingTime(total_speaking_time);\n    setSilenceTime(silence_time);\n\n    // Enhanced metrics\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    if (total_speaker_transitions !== undefined) {\n      setSpeakerTransitions(total_speaker_transitions);\n    }\n    if (dominant_speaker) {\n      setDominantSpeaker(dominant_speaker);\n    }\n\n    // Update speaker profiles\n    setSpeakerProfiles(prev => {\n      const updated = {\n        ...prev\n      };\n      formattedSpeakers.forEach(speaker => {\n        updated[speaker.speaker_id] = {\n          ...updated[speaker.speaker_id],\n          ...speaker,\n          last_updated: Date.now()\n        };\n      });\n      return updated;\n    });\n    setRealtimeStats({\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    });\n  }, []);\n  const handleEnhancedTranscription = useCallback(data => {\n    const {\n      speaker_id,\n      text,\n      timestamp,\n      confidence,\n      word_count,\n      conversation_momentum,\n      recent_speaker_sequence,\n      speaking_rate,\n      sentiment_score\n    } = data;\n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: `${timestamp}-${Math.random()}`,\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString(),\n        confidence: confidence || 1.0,\n        word_count: word_count || 0,\n        conversation_momentum: conversation_momentum || 0,\n        // Enhanced transcription features\n        speaking_rate: speaking_rate || null,\n        sentiment_score: sentiment_score || null,\n        is_question: text.trim().endsWith('?'),\n        text_length: text.length\n      };\n\n      // Keep only last 150 transcriptions for better performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-150);\n    });\n\n    // Update conversation momentum\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n\n    // Update recent speaker sequence\n    if (recent_speaker_sequence) {\n      setRecentSpeakerSequence(recent_speaker_sequence);\n    }\n  }, []);\n  const handleEnhancedTimerUpdate = useCallback(data => {\n    const {\n      meeting_duration,\n      active_speakers,\n      total_speakers,\n      conversation_momentum,\n      silence_ratio,\n      speaking_efficiency\n    } = data;\n    setMeetingDuration(meeting_duration);\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n  const handleEnhancedSilenceEvent = useCallback(data => {\n    const {\n      state,\n      timestamp,\n      duration,\n      silence_category,\n      conversation_momentum\n    } = data;\n    setSilenceState({\n      active: state === 'started',\n      category: silence_category || null,\n      duration: duration || 0,\n      timestamp: timestamp\n    });\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n  const handleSpeakerOverlap = useCallback(data => {\n    const {\n      speakers,\n      timestamp,\n      duration,\n      overlap_type\n    } = data;\n    setSpeakerOverlaps(prev => {\n      const newOverlap = {\n        id: `overlap-${timestamp}-${Math.random()}`,\n        speakers: speakers || [],\n        timestamp,\n        duration: duration || 0,\n        type: overlap_type || 'simultaneous',\n        time: new Date(timestamp * 1000).toLocaleTimeString()\n      };\n      return [newOverlap, ...prev.slice(0, 24)]; // Keep last 25 overlaps\n    });\n  }, []);\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(true);\n        // Reset all states\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTotalSpeakingTime(0);\n        setSilenceTime(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setActiveSpeakers(new Set());\n        setLastActivity(null);\n        setSpeakerActivity({});\n        setRealtimeStats({\n          meeting_duration: 0,\n          total_speaking_time: 0,\n          silence_time: 0\n        });\n        setMessageCount(0);\n\n        // Reset enhanced states\n        setConversationMomentum(0);\n        setSilenceState({\n          active: false,\n          category: null,\n          duration: 0\n        });\n        setSpeakerTransitions(0);\n        setDominantSpeaker(null);\n        setConversationInsights({});\n        setRecentSpeakerSequence([]);\n        setSpeakerOverlaps([]);\n        setConversationFlow({\n          transitions: {},\n          patterns: []\n        });\n        setSpeakerProfiles({});\n        console.log('Enhanced meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Failed to start enhanced meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting enhanced meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the enhanced backend server is running.');\n    }\n  };\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        setActiveSpeakers(new Set());\n        setSpeakerActivity({});\n        setSilenceState({\n          active: false,\n          category: null,\n          duration: 0\n        });\n        console.log('Enhanced meeting stopped successfully');\n      } else {\n        console.error('Failed to stop enhanced meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping enhanced meeting:', error);\n    }\n  };\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items\n        })\n      });\n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n  const dismissPrompt = index => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const formatTimeDetailed = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getConnectionStatusIcon = () => {\n    switch (connectionQuality) {\n      case 'good':\n        return '🟢';\n      case 'fair':\n        return '🟡';\n      case 'poor':\n        return '🔴';\n      default:\n        return '⚫';\n    }\n  };\n  const getConnectionStatusText = () => {\n    const base = isConnected ? 'Connected' : 'Disconnected';\n    if (isConnected && isRecording) {\n      return `${base} (${connectionQuality})`;\n    }\n    return base;\n  };\n  const getMomentumIndicator = () => {\n    if (conversationMomentum > 0.7) return {\n      text: 'High Energy',\n      icon: '⚡',\n      color: '#10B981'\n    };\n    if (conversationMomentum > 0.4) return {\n      text: 'Active',\n      icon: '🎯',\n      color: '#3B82F6'\n    };\n    if (conversationMomentum > 0.2) return {\n      text: 'Moderate',\n      icon: '💭',\n      color: '#F59E0B'\n    };\n    return {\n      text: 'Quiet',\n      icon: '😴',\n      color: '#6B7280'\n    };\n  };\n  const getSilenceDisplay = () => {\n    if (!silenceState.active) return null;\n    const categories = {\n      brief_pause: {\n        text: 'Brief Pause',\n        color: '#10B981'\n      },\n      natural_pause: {\n        text: 'Natural Break',\n        color: '#3B82F6'\n      },\n      long_pause: {\n        text: 'Long Pause',\n        color: '#F59E0B'\n      },\n      extended_silence: {\n        text: 'Extended Silence',\n        color: '#EF4444'\n      }\n    };\n    return categories[silenceState.category] || {\n      text: 'Silence',\n      color: '#6B7280'\n    };\n  };\n  const getSpeakerStatusColor = speakerId => {\n    if (activeSpeakers.has(speakerId)) {\n      return speakerId === currentSpeaker ? '#10B981' : '#3B82F6'; // Primary vs secondary\n    }\n    return '#6B7280';\n  };\n\n  // Enhanced chart data with multi-speaker support\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [{\n      label: 'Speaking Time (seconds)',\n      data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n      backgroundColor: speakerData.map((speaker, index) => {\n        const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];\n        const baseColor = colors[index % colors.length];\n\n        // Multi-level visual indicators\n        let opacity = Math.max(0.5, speaker.confidence_score || 1.0);\n        if (activeSpeakers.has(speaker.speaker_id)) {\n          opacity = 1.0; // Full opacity for active speakers\n        }\n        if (speaker.speaker_id === currentSpeaker) {\n          return baseColor; // Full color for primary speaker\n        }\n        return baseColor + Math.round(opacity * 255).toString(16).padStart(2, '0');\n      }),\n      borderColor: speakerData.map((speaker, index) => {\n        const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED', '#DB2777', '#0891B2'];\n        return colors[index % colors.length];\n      }),\n      borderWidth: speakerData.map(speaker => {\n        if (speaker.speaker_id === currentSpeaker) return 4;\n        if (activeSpeakers.has(speaker.speaker_id)) return 3;\n        return 1;\n      })\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Enhanced Multi-Speaker Real-Time Analysis',\n        font: {\n          size: 18\n        }\n      },\n      tooltip: {\n        callbacks: {\n          afterLabel: function (context) {\n            const speaker = speakerData[context.dataIndex];\n            const lines = [];\n            if (speaker.confidence_score) {\n              lines.push(`Voice ID Confidence: ${Math.round(speaker.confidence_score * 100)}%`);\n            }\n            if (speaker.voice_consistency) {\n              lines.push(`Voice Consistency: ${Math.round(speaker.voice_consistency * 100)}%`);\n            }\n            if (speaker.avg_speaking_duration) {\n              lines.push(`Avg Duration: ${speaker.avg_speaking_duration.toFixed(1)}s`);\n            }\n            if (speaker.speech_segments) {\n              lines.push(`Speech Segments: ${speaker.speech_segments}`);\n            }\n            if (speaker.interrupt_count > 0) {\n              lines.push(`Interruptions Made: ${speaker.interrupt_count}`);\n            }\n            if (speaker.interrupted_count > 0) {\n              lines.push(`Times Interrupted: ${speaker.interrupted_count}`);\n            }\n            return lines;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers'\n        }\n      }\n    },\n    animation: {\n      duration: 200 // Faster animations for real-time feel\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\uD83C\\uDFA4 Enhanced Multi-Speaker Meeting Assistant v\", backendVersion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'connected' : 'disconnected'} ${connectionQuality}`,\n            children: [getConnectionStatusIcon(), \" \", getConnectionStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-count\",\n            children: [\"Messages: \", messageCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"conversation-momentum\",\n            style: {\n              color: getMomentumIndicator().color\n            },\n            children: [getMomentumIndicator().icon, \" \", getMomentumIndicator().text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 15\n          }, this), activeSpeakers.size > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"multi-speaker-indicator\",\n            children: [\"\\uD83D\\uDC65 \", activeSpeakers.size, \" Active Speakers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meeting-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopMeeting : startMeeting,\n            className: `control-button ${isRecording ? 'stop' : 'start'}`,\n            disabled: !isConnected,\n            children: isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meeting-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(meetingDuration)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Speaking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(totalSpeakingTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Silence:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(silenceTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 15\n            }, this), speakerTransitions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Transitions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: speakerTransitions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-speaker-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDF99\\uFE0F Enhanced Multi-Speaker Live Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-speakers-panel\",\n            children: activeSpeakers.size > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"multi-speaker-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"speakers-grid\",\n                children: Array.from(activeSpeakers).map(speakerId => {\n                  const isPrimary = speakerId === currentSpeaker;\n                  const profile = speakerProfiles[speakerId] || {};\n                  const activity = speakerActivity[speakerId] || {};\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `speaker-card ${isPrimary ? 'primary' : 'secondary'}`,\n                    style: {\n                      borderColor: getSpeakerStatusColor(speakerId)\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-header\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-name\",\n                        children: speakerId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 864,\n                        columnNumber: 31\n                      }, this), isPrimary && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"primary-badge\",\n                        children: \"Primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 865,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"speaker-visual\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"audio-bars\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bar\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 868,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bar\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 869,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"bar\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 870,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 867,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 866,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 863,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-metrics\",\n                      children: [profile.confidence_score && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"confidence-metric\",\n                        children: [\"ID: \", Math.round(profile.confidence_score * 100), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 876,\n                        columnNumber: 33\n                      }, this), profile.voice_consistency && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"consistency-metric\",\n                        children: [\"Voice: \", Math.round(profile.voice_consistency * 100), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 881,\n                        columnNumber: 33\n                      }, this), activity.audio_quality && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `quality-metric ${activity.audio_quality}`,\n                        children: activity.audio_quality\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 886,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 874,\n                      columnNumber: 29\n                    }, this)]\n                  }, speakerId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 858,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 21\n              }, this), speakerOverlaps.length > 0 && speakerOverlaps[0].timestamp > Date.now() / 1000 - 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overlap-alert\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overlap-icon\",\n                  children: \"\\u26A0\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overlap-text\",\n                  children: [\"Speaker overlap detected: \", speakerOverlaps[0].speakers.join(' & ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overlap-duration\",\n                  children: [\"(\", speakerOverlaps[0].duration.toFixed(1), \"s)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 898,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"listening-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"listening-icon\",\n                children: \"\\uD83D\\uDC42\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inactive-text\",\n                children: silenceState.active ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: (_getSilenceDisplay = getSilenceDisplay()) === null || _getSilenceDisplay === void 0 ? void 0 : _getSilenceDisplay.color\n                  },\n                  children: [(_getSilenceDisplay2 = getSilenceDisplay()) === null || _getSilenceDisplay2 === void 0 ? void 0 : _getSilenceDisplay2.text, \" \", silenceState.duration > 0 && `(${silenceState.duration.toFixed(1)}s)`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 914,\n                  columnNumber: 25\n                }, this) : 'Enhanced multi-speaker detection active...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this), recentSpeakerSequence.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-flow\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Speaker Flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaker-sequence\",\n              children: recentSpeakerSequence.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `sequence-item ${activeSpeakers.has(speaker) ? 'active' : ''} ${speaker === currentSpeaker ? 'current' : ''}`,\n                children: [speaker, index < recentSpeakerSequence.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"arrow\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 70\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 19\n            }, this), conversationFlow.transitions && Object.keys(conversationFlow.transitions).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transition-patterns\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pattern-label\",\n                children: \"Common patterns:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 23\n              }, this), Object.entries(conversationFlow.transitions).slice(0, 3).map(([from, transitions], idx) => {\n                const mostCommon = Object.entries(transitions).sort((a, b) => b[1] - a[1])[0];\n                if (mostCommon) {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"pattern-item\",\n                    children: [from, \" \\u2192 \", mostCommon[0], \" (\", mostCommon[1], \"x)\"]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 944,\n                    columnNumber: 29\n                  }, this);\n                }\n                return null;\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 17\n          }, this), Object.keys(speakerActivity).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speaker-activity-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Activity & Quality\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-list\",\n              children: Object.entries(speakerActivity).sort(([, a], [, b]) => (b.last_timestamp || 0) - (a.last_timestamp || 0)).slice(0, 4).map(([speakerId, activity]) => {\n                const speakerInfo = speakerData.find(s => s.speaker_id === speakerId);\n                const profile = speakerProfiles[speakerId] || {};\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `activity-item ${activity.is_active ? 'active' : 'inactive'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"activity-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"speaker-name\",\n                      children: speakerId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 970,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `activity-status ${activity.is_active ? 'speaking' : 'silent'}`,\n                      children: activity.is_active ? 'Speaking' : 'Silent'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"activity-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"activity-time\",\n                      children: new Date((activity.last_timestamp || 0) * 1000).toLocaleTimeString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 976,\n                      columnNumber: 31\n                    }, this), activity.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"activity-confidence\",\n                      children: [Math.round(activity.confidence * 100), \"% conf\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 980,\n                      columnNumber: 33\n                    }, this), activity.audio_quality && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `audio-quality-badge ${activity.audio_quality}`,\n                      children: activity.audio_quality\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 985,\n                      columnNumber: 33\n                    }, this), profile.speaking_pattern_score && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"pattern-score\",\n                      children: [\"Pattern: \", Math.round(profile.speaking_pattern_score * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 29\n                  }, this)]\n                }, speakerId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 17\n          }, this), Object.keys(conversationInsights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-insights\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Advanced Conversation Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insights-grid\",\n              children: [conversationInsights.meeting_pace && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Pace:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `insight-value pace-${conversationInsights.meeting_pace}`,\n                  children: conversationInsights.meeting_pace\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 23\n              }, this), conversationInsights.most_active_speaker && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Most Active:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1017,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-value\",\n                  children: conversationInsights.most_active_speaker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1018,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 23\n              }, this), conversationInsights.total_transitions !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Transitions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-value\",\n                  children: conversationInsights.total_transitions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 23\n              }, this), conversationInsights.speaker_dominance && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight dominance\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Dominance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1029,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dominance-bars\",\n                  children: Object.entries(conversationInsights.speaker_dominance).sort((a, b) => b[1] - a[1]).slice(0, 3).map(([speaker, dominance]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dominance-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dominance-speaker\",\n                      children: speaker\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1036,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dominance-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"dominance-fill\",\n                        style: {\n                          width: `${dominance * 100}%`\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1038,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1037,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"dominance-percent\",\n                      children: [Math.round(dominance * 100), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1043,\n                      columnNumber: 33\n                    }, this)]\n                  }, speaker, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1030,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 17\n          }, this), speakerOverlaps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlap-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Speaker Overlaps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1056,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"overlap-list\",\n              children: speakerOverlaps.slice(0, 5).map(overlap => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overlap-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overlap-speakers\",\n                  children: overlap.speakers.join(' & ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overlap-duration\",\n                  children: [overlap.duration.toFixed(1), \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"overlap-time\",\n                  children: overlap.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `overlap-type ${overlap.type}`,\n                  children: overlap.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 25\n                }, this)]\n              }, overlap.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agenda-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Meeting Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: agenda,\n            onChange: e => setAgenda(e.target.value),\n            placeholder: \"Enter agenda items (one per line)\",\n            className: \"agenda-input\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setMeetingAgenda,\n            className: \"set-agenda-button\",\n            children: \"Set Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 13\n          }, this), agendaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agenda-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Agenda:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: agendaItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1095,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1080,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCDD Enhanced Multi-Speaker Live Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcription-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transcript-count\",\n              children: [transcriptions.length, \" messages\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"speakers-count\",\n              children: [new Set(transcriptions.map(t => t.speaker_id)).size, \" speakers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 17\n            }, this), conversationMomentum > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"momentum-indicator\",\n              style: {\n                color: getMomentumIndicator().color\n              },\n              children: [getMomentumIndicator().icon, \" \", getMomentumIndicator().text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 19\n            }, this), transcriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-transcripts\",\n              onClick: () => setTranscriptions([]),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-container\",\n          ref: transcriptionRef,\n          children: transcriptions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-transcription\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pulse-ring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Advanced multi-speaker transcription active...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1133,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1131,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 17\n          }, this) : transcriptions.map((transcription, index) => {\n            const isCurrentSpeaker = transcription.speaker_id === currentSpeaker;\n            const profile = speakerProfiles[transcription.speaker_id] || {};\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `transcription-item ${isCurrentSpeaker ? 'current-speaker' : ''} ${transcription.is_question ? 'question' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transcription-header-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"speaker-name\",\n                  style: {\n                    color: getSpeakerStatusColor(transcription.speaker_id),\n                    fontWeight: isCurrentSpeaker ? 'bold' : 'normal'\n                  },\n                  children: [transcription.speaker_id, isCurrentSpeaker && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"live-indicator\",\n                    children: \"\\uD83D\\uDD34 LIVE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1155,\n                    columnNumber: 48\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"transcription-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"transcription-time\",\n                    children: transcription.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1158,\n                    columnNumber: 27\n                  }, this), transcription.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `confidence-score ${transcription.confidence > 0.9 ? 'very-high' : transcription.confidence > 0.8 ? 'high' : transcription.confidence > 0.6 ? 'medium' : 'low'}`,\n                    children: [Math.round(transcription.confidence * 100), \"% conf\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1160,\n                    columnNumber: 29\n                  }, this), transcription.word_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"word-count\",\n                    children: [transcription.word_count, \" words\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1169,\n                    columnNumber: 29\n                  }, this), transcription.speaking_rate && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"speaking-rate\",\n                    children: [transcription.speaking_rate.toFixed(1), \" wpm\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 29\n                  }, this), profile.voice_consistency && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"voice-consistency\",\n                    children: [\"Voice: \", Math.round(profile.voice_consistency * 100), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1177,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1157,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transcription-text\",\n                children: [transcription.text, transcription.is_question && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"question-indicator\",\n                  children: \"\\u2753\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1185,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1183,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transcription-context\",\n                children: [transcription.sentiment_score !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `sentiment-indicator ${transcription.sentiment_score > 0.1 ? 'positive' : transcription.sentiment_score < -0.1 ? 'negative' : 'neutral'}`,\n                  children: [\"Tone: \", transcription.sentiment_score > 0.1 ? '😊 Positive' : transcription.sentiment_score < -0.1 ? '😔 Negative' : '😐 Neutral']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1191,\n                  columnNumber: 27\n                }, this), index === transcriptions.length - 1 && transcription.conversation_momentum !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"momentum-context\",\n                  style: {\n                    color: getMomentumIndicator().color\n                  },\n                  children: [\"Momentum: \", getMomentumIndicator().text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 27\n                }, this), transcription.text_length > 100 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"length-indicator\",\n                  children: \"Long statement\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 23\n              }, this)]\n            }, transcription.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 11\n      }, this), prompts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Facilitator Prompts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 13\n        }, this), prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prompt ${prompt.prompt_type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [prompt.prompt_type.replace('_', ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prompt.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1226,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dismissPrompt(index),\n            className: \"dismiss-button\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: speakerData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-with-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaker-stats fade-in\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uD83D\\uDCCA Enhanced Multi-Speaker Analytics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-grid\",\n                children: speakerData.map((speaker, index) => {\n                  const profile = speakerProfiles[speaker.speaker_id] || {};\n                  const isActive = activeSpeakers.has(speaker.speaker_id);\n                  const isPrimary = speaker.speaker_id === currentSpeaker;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `speaker-stat ${isActive ? 'currently-speaking' : ''} ${isPrimary ? 'primary-speaker' : ''} ${speaker.speaker_id === dominantSpeaker ? 'dominant-speaker' : ''}`,\n                    style: {\n                      animationDelay: `${index * 0.1}s`,\n                      borderColor: getSpeakerStatusColor(speaker.speaker_id)\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"speaker-name-container\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"speaker-name\",\n                          children: [speaker.speaker_id, isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `speaking-badge animate-pulse ${isPrimary ? 'primary' : 'secondary'}`,\n                            children: [\"\\uD83C\\uDFA4 \", isPrimary ? 'Primary' : 'Active']\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1269,\n                            columnNumber: 35\n                          }, this), speaker.speaker_id === dominantSpeaker && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"dominant-badge\",\n                            children: \"\\uD83D\\uDC51 Most Active\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1274,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1266,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"speaker-details\",\n                          children: [speaker.speech_segments > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"segment-count\",\n                            children: [speaker.speech_segments, \" segments\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1281,\n                            columnNumber: 35\n                          }, this), speaker.confidence_score && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: `confidence-indicator ${speaker.confidence_score > 0.9 ? 'very-high' : speaker.confidence_score > 0.8 ? 'high' : speaker.confidence_score > 0.6 ? 'medium' : 'low'}`,\n                            children: [Math.round(speaker.confidence_score * 100), \"% ID confidence\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1286,\n                            columnNumber: 35\n                          }, this), speaker.voice_consistency && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"voice-consistency-indicator\",\n                            children: [\"Voice: \", Math.round(speaker.voice_consistency * 100), \"%\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1295,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1279,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1265,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"speaker-metrics\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"speaker-time\",\n                          children: formatTimeDetailed(speaker.talk_time_in_seconds)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1302,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"speaker-percentage\",\n                          children: [speaker.percentage.toFixed(1), \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1305,\n                          columnNumber: 31\n                        }, this), speaker.avg_speaking_duration > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"avg-duration\",\n                          children: [\"Avg: \", speaker.avg_speaking_duration.toFixed(1), \"s\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1309,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1301,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1264,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `progress-fill ${isActive ? 'active-speaker' : ''} ${isPrimary ? 'primary' : ''}`,\n                        style: {\n                          width: `${Math.max(speaker.percentage, 2)}%`,\n                          backgroundColor: chartData.datasets[0].backgroundColor[index]\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1316,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1315,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-characteristics\",\n                      children: [(speaker.avg_pitch || speaker.avg_energy) && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"audio-characteristics\",\n                        children: [speaker.avg_pitch && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"pitch-indicator\",\n                          children: [\"\\uD83C\\uDFB5 \", speaker.avg_pitch.toFixed(0), \"Hz\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1330,\n                          columnNumber: 35\n                        }, this), speaker.avg_energy && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"energy-indicator\",\n                          children: [\"\\u26A1 \", (speaker.avg_energy * 1000).toFixed(1)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1335,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1328,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"interaction-metrics\",\n                        children: [speaker.interrupt_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"interrupt-metric negative\",\n                          children: [\"Interrupts: \", speaker.interrupt_count]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1345,\n                          columnNumber: 33\n                        }, this), speaker.interrupted_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"interrupted-metric\",\n                          children: [\"Interrupted: \", speaker.interrupted_count]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1350,\n                          columnNumber: 33\n                        }, this), speaker.speaking_pattern_score && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `pattern-metric ${speaker.speaking_pattern_score > 0.7 ? 'consistent' : speaker.speaking_pattern_score > 0.4 ? 'moderate' : 'varied'}`,\n                          children: [\"Pattern: \", Math.round(speaker.speaking_pattern_score * 100), \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1355,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1343,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1326,\n                      columnNumber: 27\n                    }, this)]\n                  }, speaker.speaker_id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meeting-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Active Speaking\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1372,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: [(totalSpeakingTime / Math.max(meetingDuration, 1) * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1373,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1371,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Silence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1378,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: [(silenceTime / Math.max(meetingDuration, 1) * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1379,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1377,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Participants\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1384,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: speakerData.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1385,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1383,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Currently Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1388,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: activeSpeakers.size\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1389,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1387,\n                  columnNumber: 21\n                }, this), speakerTransitions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Speaker Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1393,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: speakerTransitions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1394,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1392,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Conversation Energy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1398,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    style: {\n                      color: getMomentumIndicator().color\n                    },\n                    children: getMomentumIndicator().text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1399,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1397,\n                  columnNumber: 21\n                }, this), speakerOverlaps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Recent Overlaps\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1405,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: speakerOverlaps.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1406,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1404,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1370,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1243,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFAF Ready for Advanced Multi-Speaker Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isRecording ? 'Advanced AI-powered multi-speaker detection is active. Multiple people can speak simultaneously and will be tracked with enhanced accuracy!' : 'Click \"Start Meeting\" to begin enhanced real-time multi-speaker analysis with comprehensive voice profiling, overlap detection, and conversation flow tracking.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 17\n            }, this), !isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\u26A1 Multi-level voice activity detection with overlap handling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1422,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83E\\uDDE0 Comprehensive voice feature extraction and speaker profiling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1423,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDD04 Advanced conversation flow and transition pattern learning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1424,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDCCA Real-time confidence scoring and voice consistency tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1425,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDCAC Conversation momentum and context-aware processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1426,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDC65 Simultaneous multi-speaker support with primary/secondary detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1427,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83C\\uDFAF Speaker overlap detection and interaction analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1428,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1421,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1413,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCD6 Advanced Multi-Speaker Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Simultaneous Multi-Speaker Support\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Handles multiple people speaking at once with primary/secondary speaker detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1444,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Advanced Voice Activity Detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Multi-level VAD with WebRTC + energy-based backup for robust overlap handling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Comprehensive Voice Profiling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"MFCC, spectral, chroma, and energy features with voice consistency tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Conversation Flow Intelligence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Learns speaker patterns, predicts transitions, and tracks conversation momentum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Adaptive Speaker Recognition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Dynamic thresholds, confidence scoring, and voice consistency monitoring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Enhanced Transcription Quality\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1478,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Improved preprocessing, confidence filtering, and multi-speaker transcription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1479,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1477,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u26A0\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Speaker Overlap Detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1485,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Real-time detection and analysis of simultaneous speech with duration tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1486,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1490,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Interaction Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1492,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tracks interruptions, speaker dominance, and conversation patterns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1493,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"version-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uD83D\\uDD27 Backend Version: \", backendVersion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This advanced version provides significantly enhanced multi-speaker capabilities including: simultaneous speaker detection, voice consistency tracking, speaker overlap analysis, and comprehensive conversation flow intelligence. The system adapts to conversation patterns and becomes more accurate over time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1500,\n            columnNumber: 13\n          }, this), serverFeatures.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"server-features\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Active Features:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: serverFeatures.map((feature, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: feature.replace(/_/g, ' ')\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1511,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 783,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3hfL1PgViY/wo4drJ92Ys8iMpys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","_getSilenceDisplay","_getSilenceDisplay2","isConnected","setIsConnected","isRecording","setIsRecording","speakerData","setSpeakerData","meetingDuration","setMeetingDuration","totalSpeakingTime","setTotalSpeakingTime","silenceTime","setSilenceTime","prompts","setPrompts","agenda","setAgenda","agendaItems","setAgendaItems","currentSpeaker","setCurrentSpeaker","activeSpeakers","setActiveSpeakers","Set","transcriptions","setTranscriptions","lastActivity","setLastActivity","speakerActivity","setSpeakerActivity","realtimeStats","setRealtimeStats","meeting_duration","total_speaking_time","silence_time","conversationMomentum","setConversationMomentum","silenceState","setSilenceState","active","category","duration","speakerTransitions","setSpeakerTransitions","dominantSpeaker","setDominantSpeaker","conversationInsights","setConversationInsights","recentSpeakerSequence","setRecentSpeakerSequence","speakerOverlaps","setSpeakerOverlaps","conversationFlow","setConversationFlow","transitions","patterns","speakerProfiles","setSpeakerProfiles","connectionQuality","setConnectionQuality","lastMessageTime","setLastMessageTime","Date","now","messageCount","setMessageCount","backendVersion","setBackendVersion","serverFeatures","setServerFeatures","ws","reconnectTimeoutRef","isConnectingRef","transcriptionRef","performanceTimerRef","insightsTimerRef","backendUrl","process","env","REACT_APP_BACKEND_URL","current","setInterval","timeSinceLastMessage","clearInterval","response","fetch","ok","insights","json","recent_speaker_sequence","speaker_transitions","conversation_patterns","speaker_dominance","prev","updated","Object","entries","forEach","speakerId","dominance","error","console","warn","connectToWebSocket","clearTimeout","onopen","onmessage","onclose","onerror","readyState","WebSocket","OPEN","CONNECTING","close","scrollTop","scrollHeight","wsUrl","replace","log","send","JSON","stringify","type","event","data","parse","handleWebSocketMessage","code","reason","setTimeout","version","features","message","handleEnhancedSpeakerActivity","handleEnhancedSpeakerStats","handleEnhancedTranscription","handleEnhancedTimerUpdate","handleEnhancedSilenceEvent","handleSpeakerOverlap","speaker_id","action","timestamp","conversation_momentum","overlap_detected","undefined","add","delete","remaining","Array","from","length","newOverlap","id","speakers","overlapping_speakers","overlap_duration","slice","last_action","last_timestamp","is_active","confidence","audio_quality","total_speaker_transitions","dominant_speaker","formattedSpeakers","map","speaker","talk_time_in_seconds","talk_time_seconds","percentage","is_speaking","speech_segments","confidence_score","avg_speaking_duration","avg_pitch","avg_energy","speaking_pattern_score","voice_consistency","interrupt_count","interrupted_count","last_updated","text","word_count","speaking_rate","sentiment_score","newTranscription","Math","random","time","toLocaleTimeString","is_question","trim","endsWith","text_length","active_speakers","total_speakers","silence_ratio","speaking_efficiency","state","silence_category","overlap_type","startMeeting","method","headers","errorData","catch","alert","stopMeeting","setMeetingAgenda","items","split","filter","item","body","dismissPrompt","index","_","i","formatTime","seconds","minutes","floor","remainingSeconds","toString","padStart","formatTimeDetailed","hours","secs","getConnectionStatusIcon","getConnectionStatusText","base","getMomentumIndicator","icon","color","getSilenceDisplay","categories","brief_pause","natural_pause","long_pause","extended_silence","getSpeakerStatusColor","has","chartData","labels","datasets","label","backgroundColor","colors","baseColor","opacity","max","round","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","font","size","tooltip","callbacks","afterLabel","context","dataIndex","lines","push","toFixed","scales","y","beginAtZero","x","animation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","disabled","isPrimary","profile","activity","join","keys","idx","mostCommon","sort","a","b","speakerInfo","find","s","meeting_pace","most_active_speaker","total_transitions","width","overlap","value","onChange","e","target","placeholder","rows","t","ref","transcription","isCurrentSpeaker","fontWeight","prompt","prompt_type","toUpperCase","options","isActive","animationDelay","feature","_c","$RefreshReg$"],"sources":["C:/Personal/Meeting Assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [totalSpeakingTime, setTotalSpeakingTime] = useState(0);\n  const [silenceTime, setSilenceTime] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n  \n  // Enhanced real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [activeSpeakers, setActiveSpeakers] = useState(new Set()); // Track multiple active speakers\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const [speakerActivity, setSpeakerActivity] = useState({});\n  const [realtimeStats, setRealtimeStats] = useState({\n    meeting_duration: 0,\n    total_speaking_time: 0,\n    silence_time: 0\n  });\n  \n  // Enhanced conversation states\n  const [conversationMomentum, setConversationMomentum] = useState(0);\n  const [silenceState, setSilenceState] = useState({ active: false, category: null, duration: 0 });\n  const [speakerTransitions, setSpeakerTransitions] = useState(0);\n  const [dominantSpeaker, setDominantSpeaker] = useState(null);\n  const [conversationInsights, setConversationInsights] = useState({});\n  const [recentSpeakerSequence, setRecentSpeakerSequence] = useState([]);\n  \n  // New multi-speaker overlap detection\n  const [speakerOverlaps, setSpeakerOverlaps] = useState([]);\n  const [conversationFlow, setConversationFlow] = useState({ transitions: {}, patterns: [] });\n  const [speakerProfiles, setSpeakerProfiles] = useState({});\n  \n  // Connection and performance states\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const [lastMessageTime, setLastMessageTime] = useState(Date.now());\n  const [messageCount, setMessageCount] = useState(0);\n  const [backendVersion, setBackendVersion] = useState('2.0.0');\n  const [serverFeatures, setServerFeatures] = useState([]);\n  \n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const performanceTimerRef = useRef(null);\n  const insightsTimerRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  // Enhanced performance monitoring\n  useEffect(() => {\n    performanceTimerRef.current = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastMessage = now - lastMessageTime;\n      \n      if (isRecording && timeSinceLastMessage > 5000) {\n        setConnectionQuality('poor');\n      } else if (isRecording && timeSinceLastMessage > 2000) {\n        setConnectionQuality('fair');\n      } else if (isRecording) {\n        setConnectionQuality('good');\n      }\n    }, 1000);\n\n    return () => {\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n    };\n  }, [lastMessageTime, isRecording]);\n\n  // Enhanced conversation insights fetching\n  useEffect(() => {\n    if (isRecording) {\n      insightsTimerRef.current = setInterval(async () => {\n        try {\n          const response = await fetch(`${backendUrl}/api/meeting/conversation-insights`);\n          if (response.ok) {\n            const insights = await response.json();\n            setConversationInsights(insights);\n            \n            if (insights.recent_speaker_sequence) {\n              setRecentSpeakerSequence(insights.recent_speaker_sequence);\n            }\n            \n            if (insights.speaker_transitions) {\n              setConversationFlow({\n                transitions: insights.speaker_transitions,\n                patterns: insights.conversation_patterns || []\n              });\n            }\n            \n            // Update speaker dominance visualization\n            if (insights.speaker_dominance) {\n              setSpeakerProfiles(prev => {\n                const updated = { ...prev };\n                Object.entries(insights.speaker_dominance).forEach(([speakerId, dominance]) => {\n                  if (!updated[speakerId]) {\n                    updated[speakerId] = {};\n                  }\n                  updated[speakerId].dominance = dominance;\n                });\n                return updated;\n              });\n            }\n          }\n        } catch (error) {\n          console.warn('Failed to fetch conversation insights:', error);\n        }\n      }, 2000); // Every 2 seconds for more responsive updates\n    }\n\n    return () => {\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n    };\n  }, [isRecording, backendUrl]);\n\n  useEffect(() => {\n    connectToWebSocket();\n    \n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        \n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n\n  const connectToWebSocket = useCallback(() => {\n    if (isConnectingRef.current || (ws.current && ws.current.readyState === WebSocket.CONNECTING)) {\n      return;\n    }\n\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    \n    try {\n      console.log('Connecting to Enhanced WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      \n      ws.current.onopen = () => {\n        console.log('Connected to Enhanced WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        setConnectionQuality('good');\n        \n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({ type: 'ping' }));\n        }\n      };\n      \n      ws.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessageTime(Date.now());\n          setMessageCount(prev => prev + 1);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      \n      ws.current.onclose = (event) => {\n        console.log('Enhanced WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n        \n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          \n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      \n      ws.current.onerror = (error) => {\n        console.error('Enhanced WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n      };\n      \n    } catch (error) {\n      console.error('Failed to create Enhanced WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      setConnectionQuality('poor');\n      \n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  }, [backendUrl]);\n\n  const handleWebSocketMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'connection_established':\n        if (data.version) {\n          setBackendVersion(data.version);\n        }\n        if (data.features) {\n          setServerFeatures(data.features);\n        }\n        console.log('Enhanced connection established:', data.message);\n        break;\n        \n      case 'speaker_activity':\n        handleEnhancedSpeakerActivity(data);\n        break;\n        \n      case 'speaker_stats':\n        handleEnhancedSpeakerStats(data);\n        break;\n        \n      case 'transcription':\n        handleEnhancedTranscription(data);\n        break;\n        \n      case 'timer_update':\n        handleEnhancedTimerUpdate(data);\n        break;\n        \n      case 'silence':\n        handleEnhancedSilenceEvent(data);\n        break;\n        \n      case 'speaker_overlap':\n        handleSpeakerOverlap(data);\n        break;\n        \n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n        \n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  }, []);\n\n  const handleEnhancedSpeakerActivity = useCallback((data) => {\n    const { speaker_id, action, timestamp, conversation_momentum, overlap_detected } = data;\n    \n    setLastActivity({ speaker_id, action, timestamp });\n    \n    // Update conversation momentum\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    \n    // Handle multi-speaker scenarios\n    setActiveSpeakers(prev => {\n      const updated = new Set(prev);\n      if (action === 'started') {\n        updated.add(speaker_id);\n        setCurrentSpeaker(speaker_id); // Primary speaker\n      } else if (action === 'stopped') {\n        updated.delete(speaker_id);\n        if (speaker_id === currentSpeaker) {\n          // Set new primary speaker if available\n          const remaining = Array.from(updated);\n          setCurrentSpeaker(remaining.length > 0 ? remaining[0] : null);\n        }\n      }\n      return updated;\n    });\n    \n    // Track speaker overlaps\n    if (overlap_detected) {\n      setSpeakerOverlaps(prev => {\n        const newOverlap = {\n          id: `overlap-${timestamp}`,\n          speakers: data.overlapping_speakers || [speaker_id],\n          timestamp,\n          duration: data.overlap_duration || 0\n        };\n        return [newOverlap, ...prev.slice(0, 19)]; // Keep last 20 overlaps\n      });\n    }\n    \n    // Enhanced speaker activity tracking\n    setSpeakerActivity(prev => ({\n      ...prev,\n      [speaker_id]: {\n        ...prev[speaker_id],\n        last_action: action,\n        last_timestamp: timestamp,\n        is_active: action === 'started',\n        confidence: data.confidence || 1.0,\n        audio_quality: data.audio_quality || 'good'\n      }\n    }));\n  }, [currentSpeaker]);\n\n  const handleEnhancedSpeakerStats = useCallback((data) => {\n    const { \n      speakers, \n      meeting_duration, \n      total_speaking_time, \n      silence_time,\n      conversation_momentum,\n      total_speaker_transitions,\n      dominant_speaker\n    } = data;\n    \n    // Enhanced speaker data processing\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking,\n      speech_segments: speaker.speech_segments || 0,\n      confidence_score: speaker.confidence_score || 1.0,\n      avg_speaking_duration: speaker.avg_speaking_duration || 0,\n      avg_pitch: speaker.avg_pitch,\n      avg_energy: speaker.avg_energy,\n      speaking_pattern_score: speaker.speaking_pattern_score || 0.5,\n      // New enhanced metrics\n      voice_consistency: speaker.voice_consistency || 0.8,\n      interrupt_count: speaker.interrupt_count || 0,\n      interrupted_count: speaker.interrupted_count || 0\n    }));\n    \n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n    setTotalSpeakingTime(total_speaking_time);\n    setSilenceTime(silence_time);\n    \n    // Enhanced metrics\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    if (total_speaker_transitions !== undefined) {\n      setSpeakerTransitions(total_speaker_transitions);\n    }\n    if (dominant_speaker) {\n      setDominantSpeaker(dominant_speaker);\n    }\n    \n    // Update speaker profiles\n    setSpeakerProfiles(prev => {\n      const updated = { ...prev };\n      formattedSpeakers.forEach(speaker => {\n        updated[speaker.speaker_id] = {\n          ...updated[speaker.speaker_id],\n          ...speaker,\n          last_updated: Date.now()\n        };\n      });\n      return updated;\n    });\n    \n    setRealtimeStats({\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    });\n  }, []);\n\n  const handleEnhancedTranscription = useCallback((data) => {\n    const { \n      speaker_id, \n      text, \n      timestamp, \n      confidence,\n      word_count,\n      conversation_momentum,\n      recent_speaker_sequence,\n      speaking_rate,\n      sentiment_score\n    } = data;\n    \n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: `${timestamp}-${Math.random()}`,\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString(),\n        confidence: confidence || 1.0,\n        word_count: word_count || 0,\n        conversation_momentum: conversation_momentum || 0,\n        // Enhanced transcription features\n        speaking_rate: speaking_rate || null,\n        sentiment_score: sentiment_score || null,\n        is_question: text.trim().endsWith('?'),\n        text_length: text.length\n      };\n      \n      // Keep only last 150 transcriptions for better performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-150);\n    });\n\n    // Update conversation momentum\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    \n    // Update recent speaker sequence\n    if (recent_speaker_sequence) {\n      setRecentSpeakerSequence(recent_speaker_sequence);\n    }\n  }, []);\n\n  const handleEnhancedTimerUpdate = useCallback((data) => {\n    const { \n      meeting_duration, \n      active_speakers, \n      total_speakers,\n      conversation_momentum,\n      silence_ratio,\n      speaking_efficiency\n    } = data;\n    \n    setMeetingDuration(meeting_duration);\n    \n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n\n  const handleEnhancedSilenceEvent = useCallback((data) => {\n    const { state, timestamp, duration, silence_category, conversation_momentum } = data;\n    \n    setSilenceState({\n      active: state === 'started',\n      category: silence_category || null,\n      duration: duration || 0,\n      timestamp: timestamp\n    });\n\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n\n  const handleSpeakerOverlap = useCallback((data) => {\n    const { speakers, timestamp, duration, overlap_type } = data;\n    \n    setSpeakerOverlaps(prev => {\n      const newOverlap = {\n        id: `overlap-${timestamp}-${Math.random()}`,\n        speakers: speakers || [],\n        timestamp,\n        duration: duration || 0,\n        type: overlap_type || 'simultaneous',\n        time: new Date(timestamp * 1000).toLocaleTimeString()\n      };\n      return [newOverlap, ...prev.slice(0, 24)]; // Keep last 25 overlaps\n    });\n  }, []);\n\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(true);\n        // Reset all states\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTotalSpeakingTime(0);\n        setSilenceTime(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setActiveSpeakers(new Set());\n        setLastActivity(null);\n        setSpeakerActivity({});\n        setRealtimeStats({ meeting_duration: 0, total_speaking_time: 0, silence_time: 0 });\n        setMessageCount(0);\n        \n        // Reset enhanced states\n        setConversationMomentum(0);\n        setSilenceState({ active: false, category: null, duration: 0 });\n        setSpeakerTransitions(0);\n        setDominantSpeaker(null);\n        setConversationInsights({});\n        setRecentSpeakerSequence([]);\n        setSpeakerOverlaps([]);\n        setConversationFlow({ transitions: {}, patterns: [] });\n        setSpeakerProfiles({});\n        \n        console.log('Enhanced meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Failed to start enhanced meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting enhanced meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the enhanced backend server is running.');\n    }\n  };\n\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        setActiveSpeakers(new Set());\n        setSpeakerActivity({});\n        setSilenceState({ active: false, category: null, duration: 0 });\n        console.log('Enhanced meeting stopped successfully');\n      } else {\n        console.error('Failed to stop enhanced meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping enhanced meeting:', error);\n    }\n  };\n\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    \n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    \n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ items }),\n      });\n      \n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n\n  const dismissPrompt = (index) => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const formatTimeDetailed = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    \n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getConnectionStatusIcon = () => {\n    switch (connectionQuality) {\n      case 'good': return '🟢';\n      case 'fair': return '🟡';\n      case 'poor': return '🔴';\n      default: return '⚫';\n    }\n  };\n\n  const getConnectionStatusText = () => {\n    const base = isConnected ? 'Connected' : 'Disconnected';\n    if (isConnected && isRecording) {\n      return `${base} (${connectionQuality})`;\n    }\n    return base;\n  };\n\n  const getMomentumIndicator = () => {\n    if (conversationMomentum > 0.7) return { text: 'High Energy', icon: '⚡', color: '#10B981' };\n    if (conversationMomentum > 0.4) return { text: 'Active', icon: '🎯', color: '#3B82F6' };\n    if (conversationMomentum > 0.2) return { text: 'Moderate', icon: '💭', color: '#F59E0B' };\n    return { text: 'Quiet', icon: '😴', color: '#6B7280' };\n  };\n\n  const getSilenceDisplay = () => {\n    if (!silenceState.active) return null;\n    \n    const categories = {\n      brief_pause: { text: 'Brief Pause', color: '#10B981' },\n      natural_pause: { text: 'Natural Break', color: '#3B82F6' },\n      long_pause: { text: 'Long Pause', color: '#F59E0B' },\n      extended_silence: { text: 'Extended Silence', color: '#EF4444' }\n    };\n    \n    return categories[silenceState.category] || { text: 'Silence', color: '#6B7280' };\n  };\n\n  const getSpeakerStatusColor = (speakerId) => {\n    if (activeSpeakers.has(speakerId)) {\n      return speakerId === currentSpeaker ? '#10B981' : '#3B82F6'; // Primary vs secondary\n    }\n    return '#6B7280';\n  };\n\n  // Enhanced chart data with multi-speaker support\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [\n      {\n        label: 'Speaking Time (seconds)',\n        data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n        backgroundColor: speakerData.map((speaker, index) => {\n          const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];\n          const baseColor = colors[index % colors.length];\n          \n          // Multi-level visual indicators\n          let opacity = Math.max(0.5, (speaker.confidence_score || 1.0));\n          if (activeSpeakers.has(speaker.speaker_id)) {\n            opacity = 1.0; // Full opacity for active speakers\n          }\n          if (speaker.speaker_id === currentSpeaker) {\n            return baseColor; // Full color for primary speaker\n          }\n          \n          return baseColor + Math.round(opacity * 255).toString(16).padStart(2, '0');\n        }),\n        borderColor: speakerData.map((speaker, index) => {\n          const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED', '#DB2777', '#0891B2'];\n          return colors[index % colors.length];\n        }),\n        borderWidth: speakerData.map(speaker => {\n          if (speaker.speaker_id === currentSpeaker) return 4;\n          if (activeSpeakers.has(speaker.speaker_id)) return 3;\n          return 1;\n        }),\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Enhanced Multi-Speaker Real-Time Analysis',\n        font: {\n          size: 18,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          afterLabel: function(context) {\n            const speaker = speakerData[context.dataIndex];\n            const lines = [];\n            \n            if (speaker.confidence_score) {\n              lines.push(`Voice ID Confidence: ${Math.round(speaker.confidence_score * 100)}%`);\n            }\n            if (speaker.voice_consistency) {\n              lines.push(`Voice Consistency: ${Math.round(speaker.voice_consistency * 100)}%`);\n            }\n            if (speaker.avg_speaking_duration) {\n              lines.push(`Avg Duration: ${speaker.avg_speaking_duration.toFixed(1)}s`);\n            }\n            if (speaker.speech_segments) {\n              lines.push(`Speech Segments: ${speaker.speech_segments}`);\n            }\n            if (speaker.interrupt_count > 0) {\n              lines.push(`Interruptions Made: ${speaker.interrupt_count}`);\n            }\n            if (speaker.interrupted_count > 0) {\n              lines.push(`Times Interrupted: ${speaker.interrupted_count}`);\n            }\n            return lines;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)',\n        },\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers',\n        },\n      },\n    },\n    animation: {\n      duration: 200, // Faster animations for real-time feel\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>🎤 Enhanced Multi-Speaker Meeting Assistant v{backendVersion}</h1>\n        <div className=\"header-info\">\n          <div className=\"connection-status\">\n            <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'} ${connectionQuality}`}>\n              {getConnectionStatusIcon()} {getConnectionStatusText()}\n            </span>\n          </div>\n          {isRecording && (\n            <div className=\"performance-stats\">\n              <span className=\"message-count\">Messages: {messageCount}</span>\n              <span className=\"conversation-momentum\" style={{ color: getMomentumIndicator().color }}>\n                {getMomentumIndicator().icon} {getMomentumIndicator().text}\n              </span>\n              {activeSpeakers.size > 1 && (\n                <span className=\"multi-speaker-indicator\">\n                  👥 {activeSpeakers.size} Active Speakers\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </header>\n\n      <main className=\"main-content\">\n        {/* Enhanced Control Panel */}\n        <div className=\"control-panel\">\n          <div className=\"meeting-controls\">\n            <button\n              onClick={isRecording ? stopMeeting : startMeeting}\n              className={`control-button ${isRecording ? 'stop' : 'start'}`}\n              disabled={!isConnected}\n            >\n              {isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'}\n            </button>\n            \n            <div className=\"meeting-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-label\">Duration:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(meetingDuration)}</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Speaking:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(totalSpeakingTime)}</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Silence:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(silenceTime)}</span>\n              </div>\n              {speakerTransitions > 0 && (\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Transitions:</span>\n                  <span className=\"stat-value\">{speakerTransitions}</span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Enhanced Multi-Speaker Status Panel */}\n          {isRecording && (\n            <div className=\"current-speaker-status\">\n              <h3>🎙️ Enhanced Multi-Speaker Live Status</h3>\n              \n              {/* Active Speakers Display */}\n              <div className=\"active-speakers-panel\">\n                {activeSpeakers.size > 0 ? (\n                  <div className=\"multi-speaker-display\">\n                    <div className=\"speakers-grid\">\n                      {Array.from(activeSpeakers).map(speakerId => {\n                        const isPrimary = speakerId === currentSpeaker;\n                        const profile = speakerProfiles[speakerId] || {};\n                        const activity = speakerActivity[speakerId] || {};\n                        \n                        return (\n                          <div \n                            key={speakerId} \n                            className={`speaker-card ${isPrimary ? 'primary' : 'secondary'}`}\n                            style={{ borderColor: getSpeakerStatusColor(speakerId) }}\n                          >\n                            <div className=\"speaker-header\">\n                              <span className=\"speaker-name\">{speakerId}</span>\n                              {isPrimary && <span className=\"primary-badge\">Primary</span>}\n                              <div className=\"speaker-visual\">\n                                <div className=\"audio-bars\">\n                                  <div className=\"bar\"></div>\n                                  <div className=\"bar\"></div>\n                                  <div className=\"bar\"></div>\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"speaker-metrics\">\n                              {profile.confidence_score && (\n                                <span className=\"confidence-metric\">\n                                  ID: {Math.round(profile.confidence_score * 100)}%\n                                </span>\n                              )}\n                              {profile.voice_consistency && (\n                                <span className=\"consistency-metric\">\n                                  Voice: {Math.round(profile.voice_consistency * 100)}%\n                                </span>\n                              )}\n                              {activity.audio_quality && (\n                                <span className={`quality-metric ${activity.audio_quality}`}>\n                                  {activity.audio_quality}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                    \n                    {/* Overlap Detection Alert */}\n                    {speakerOverlaps.length > 0 && speakerOverlaps[0].timestamp > Date.now() / 1000 - 5 && (\n                      <div className=\"overlap-alert\">\n                        <span className=\"overlap-icon\">⚠️</span>\n                        <span className=\"overlap-text\">\n                          Speaker overlap detected: {speakerOverlaps[0].speakers.join(' & ')}\n                        </span>\n                        <span className=\"overlap-duration\">\n                          ({speakerOverlaps[0].duration.toFixed(1)}s)\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"listening-state\">\n                    <div className=\"listening-icon\">👂</div>\n                    <span className=\"inactive-text\">\n                      {silenceState.active ? (\n                        <span style={{ color: getSilenceDisplay()?.color }}>\n                          {getSilenceDisplay()?.text} {silenceState.duration > 0 && `(${silenceState.duration.toFixed(1)}s)`}\n                        </span>\n                      ) : (\n                        'Enhanced multi-speaker detection active...'\n                      )}\n                    </span>\n                  </div>\n                )}\n              </div>\n              \n              {/* Enhanced Conversation Flow */}\n              {recentSpeakerSequence.length > 0 && (\n                <div className=\"conversation-flow\">\n                  <h4>Recent Speaker Flow</h4>\n                  <div className=\"speaker-sequence\">\n                    {recentSpeakerSequence.map((speaker, index) => (\n                      <span key={index} className={`sequence-item ${activeSpeakers.has(speaker) ? 'active' : ''} ${speaker === currentSpeaker ? 'current' : ''}`}>\n                        {speaker}\n                        {index < recentSpeakerSequence.length - 1 && <span className=\"arrow\">→</span>}\n                      </span>\n                    ))}\n                  </div>\n                  {conversationFlow.transitions && Object.keys(conversationFlow.transitions).length > 0 && (\n                    <div className=\"transition-patterns\">\n                      <span className=\"pattern-label\">Common patterns:</span>\n                      {Object.entries(conversationFlow.transitions).slice(0, 3).map(([from, transitions], idx) => {\n                        const mostCommon = Object.entries(transitions).sort((a, b) => b[1] - a[1])[0];\n                        if (mostCommon) {\n                          return (\n                            <span key={idx} className=\"pattern-item\">\n                              {from} → {mostCommon[0]} ({mostCommon[1]}x)\n                            </span>\n                          );\n                        }\n                        return null;\n                      })}\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              {/* Speaker Activity History with Enhanced Info */}\n              {Object.keys(speakerActivity).length > 0 && (\n                <div className=\"speaker-activity-history\">\n                  <h4>Recent Activity & Quality</h4>\n                  <div className=\"activity-list\">\n                    {Object.entries(speakerActivity)\n                      .sort(([,a], [,b]) => (b.last_timestamp || 0) - (a.last_timestamp || 0))\n                      .slice(0, 4)\n                      .map(([speakerId, activity]) => {\n                        const speakerInfo = speakerData.find(s => s.speaker_id === speakerId);\n                        const profile = speakerProfiles[speakerId] || {};\n                        return (\n                          <div key={speakerId} className={`activity-item ${activity.is_active ? 'active' : 'inactive'}`}>\n                            <div className=\"activity-header\">\n                              <span className=\"speaker-name\">{speakerId}</span>\n                              <span className={`activity-status ${activity.is_active ? 'speaking' : 'silent'}`}>\n                                {activity.is_active ? 'Speaking' : 'Silent'}\n                              </span>\n                            </div>\n                            <div className=\"activity-details\">\n                              <span className=\"activity-time\">\n                                {new Date((activity.last_timestamp || 0) * 1000).toLocaleTimeString()}\n                              </span>\n                              {activity.confidence && (\n                                <span className=\"activity-confidence\">\n                                  {Math.round(activity.confidence * 100)}% conf\n                                </span>\n                              )}\n                              {activity.audio_quality && (\n                                <span className={`audio-quality-badge ${activity.audio_quality}`}>\n                                  {activity.audio_quality}\n                                </span>\n                              )}\n                              {profile.speaking_pattern_score && (\n                                <span className=\"pattern-score\">\n                                  Pattern: {Math.round(profile.speaking_pattern_score * 100)}%\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n              )}\n\n              {/* Enhanced Conversation Insights Panel */}\n              {Object.keys(conversationInsights).length > 0 && (\n                <div className=\"conversation-insights\">\n                  <h4>Advanced Conversation Analysis</h4>\n                  <div className=\"insights-grid\">\n                    {conversationInsights.meeting_pace && (\n                      <div className=\"insight\">\n                        <span className=\"insight-label\">Pace:</span>\n                        <span className={`insight-value pace-${conversationInsights.meeting_pace}`}>\n                          {conversationInsights.meeting_pace}\n                        </span>\n                      </div>\n                    )}\n                    {conversationInsights.most_active_speaker && (\n                      <div className=\"insight\">\n                        <span className=\"insight-label\">Most Active:</span>\n                        <span className=\"insight-value\">{conversationInsights.most_active_speaker}</span>\n                      </div>\n                    )}\n                    {conversationInsights.total_transitions !== undefined && (\n                      <div className=\"insight\">\n                        <span className=\"insight-label\">Transitions:</span>\n                        <span className=\"insight-value\">{conversationInsights.total_transitions}</span>\n                      </div>\n                    )}\n                    {conversationInsights.speaker_dominance && (\n                      <div className=\"insight dominance\">\n                        <span className=\"insight-label\">Dominance:</span>\n                        <div className=\"dominance-bars\">\n                          {Object.entries(conversationInsights.speaker_dominance)\n                            .sort((a, b) => b[1] - a[1])\n                            .slice(0, 3)\n                            .map(([speaker, dominance]) => (\n                              <div key={speaker} className=\"dominance-item\">\n                                <span className=\"dominance-speaker\">{speaker}</span>\n                                <div className=\"dominance-bar\">\n                                  <div \n                                    className=\"dominance-fill\"\n                                    style={{ width: `${dominance * 100}%` }}\n                                  ></div>\n                                </div>\n                                <span className=\"dominance-percent\">{Math.round(dominance * 100)}%</span>\n                              </div>\n                            ))}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              \n              {/* Speaker Overlap History */}\n              {speakerOverlaps.length > 0 && (\n                <div className=\"overlap-history\">\n                  <h4>Recent Speaker Overlaps</h4>\n                  <div className=\"overlap-list\">\n                    {speakerOverlaps.slice(0, 5).map(overlap => (\n                      <div key={overlap.id} className=\"overlap-item\">\n                        <span className=\"overlap-speakers\">\n                          {overlap.speakers.join(' & ')}\n                        </span>\n                        <span className=\"overlap-duration\">\n                          {overlap.duration.toFixed(1)}s\n                        </span>\n                        <span className=\"overlap-time\">\n                          {overlap.time}\n                        </span>\n                        <span className={`overlap-type ${overlap.type}`}>\n                          {overlap.type}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"agenda-section\">\n            <h3>Meeting Agenda</h3>\n            <textarea\n              value={agenda}\n              onChange={(e) => setAgenda(e.target.value)}\n              placeholder=\"Enter agenda items (one per line)\"\n              className=\"agenda-input\"\n              rows=\"4\"\n            />\n            <button onClick={setMeetingAgenda} className=\"set-agenda-button\">\n              Set Agenda\n            </button>\n            {agendaItems.length > 0 && (\n              <div className=\"agenda-items\">\n                <h4>Current Agenda:</h4>\n                <ul>\n                  {agendaItems.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Enhanced Multi-Speaker Transcription */}\n        {isRecording && (\n          <div className=\"transcription-section\">\n            <div className=\"transcription-header\">\n              <h3>📝 Enhanced Multi-Speaker Live Transcription</h3>\n              <div className=\"transcription-stats\">\n                <span className=\"transcript-count\">{transcriptions.length} messages</span>\n                <span className=\"speakers-count\">{new Set(transcriptions.map(t => t.speaker_id)).size} speakers</span>\n                {conversationMomentum > 0 && (\n                  <span className=\"momentum-indicator\" style={{ color: getMomentumIndicator().color }}>\n                    {getMomentumIndicator().icon} {getMomentumIndicator().text}\n                  </span>\n                )}\n                {transcriptions.length > 0 && (\n                  <button \n                    className=\"clear-transcripts\"\n                    onClick={() => setTranscriptions([])}\n                  >\n                    Clear\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"transcription-container\" ref={transcriptionRef}>\n              {transcriptions.length === 0 ? (\n                <div className=\"no-transcription\">\n                  <div className=\"waiting-indicator\">\n                    <div className=\"pulse-ring\"></div>\n                    <span>Advanced multi-speaker transcription active...</span>\n                  </div>\n                </div>\n              ) : (\n                transcriptions.map((transcription, index) => {\n                  const isCurrentSpeaker = transcription.speaker_id === currentSpeaker;\n                  const profile = speakerProfiles[transcription.speaker_id] || {};\n                  \n                  return (\n                    <div \n                      key={transcription.id} \n                      className={`transcription-item ${isCurrentSpeaker ? 'current-speaker' : ''} ${transcription.is_question ? 'question' : ''}`}\n                    >\n                      <div className=\"transcription-header-item\">\n                        <span \n                          className=\"speaker-name\"\n                          style={{ \n                            color: getSpeakerStatusColor(transcription.speaker_id),\n                            fontWeight: isCurrentSpeaker ? 'bold' : 'normal'\n                          }}\n                        >\n                          {transcription.speaker_id}\n                          {isCurrentSpeaker && <span className=\"live-indicator\">🔴 LIVE</span>}\n                        </span>\n                        <div className=\"transcription-meta\">\n                          <span className=\"transcription-time\">{transcription.time}</span>\n                          {transcription.confidence && (\n                            <span className={`confidence-score ${\n                              transcription.confidence > 0.9 ? 'very-high' : \n                              transcription.confidence > 0.8 ? 'high' : \n                              transcription.confidence > 0.6 ? 'medium' : 'low'\n                            }`}>\n                              {Math.round(transcription.confidence * 100)}% conf\n                            </span>\n                          )}\n                          {transcription.word_count > 0 && (\n                            <span className=\"word-count\">{transcription.word_count} words</span>\n                          )}\n                          {transcription.speaking_rate && (\n                            <span className=\"speaking-rate\">\n                              {transcription.speaking_rate.toFixed(1)} wpm\n                            </span>\n                          )}\n                          {profile.voice_consistency && (\n                            <span className=\"voice-consistency\">\n                              Voice: {Math.round(profile.voice_consistency * 100)}%\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"transcription-text\">\n                        {transcription.text}\n                        {transcription.is_question && <span className=\"question-indicator\">❓</span>}\n                      </div>\n                      \n                      {/* Enhanced context information */}\n                      <div className=\"transcription-context\">\n                        {transcription.sentiment_score !== null && (\n                          <span className={`sentiment-indicator ${\n                            transcription.sentiment_score > 0.1 ? 'positive' : \n                            transcription.sentiment_score < -0.1 ? 'negative' : 'neutral'\n                          }`}>\n                            Tone: {\n                              transcription.sentiment_score > 0.1 ? '😊 Positive' : \n                              transcription.sentiment_score < -0.1 ? '😔 Negative' : '😐 Neutral'\n                            }\n                          </span>\n                        )}\n                        {index === transcriptions.length - 1 && transcription.conversation_momentum !== undefined && (\n                          <span className=\"momentum-context\" style={{ color: getMomentumIndicator().color }}>\n                            Momentum: {getMomentumIndicator().text}\n                          </span>\n                        )}\n                        {transcription.text_length > 100 && (\n                          <span className=\"length-indicator\">Long statement</span>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Prompts Section */}\n        {prompts.length > 0 && (\n          <div className=\"prompts-section\">\n            <h3>📋 Facilitator Prompts</h3>\n            {prompts.map((prompt, index) => (\n              <div key={index} className={`prompt ${prompt.prompt_type}`}>\n                <div className=\"prompt-content\">\n                  <strong>{prompt.prompt_type.replace('_', ' ').toUpperCase()}:</strong>\n                  <p>{prompt.message}</p>\n                </div>\n                <button\n                  onClick={() => dismissPrompt(index)}\n                  className=\"dismiss-button\"\n                >\n                  ✕\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Enhanced Multi-Speaker Visualization */}\n        <div className=\"chart-section\">\n          <div className=\"chart-container\">\n            {speakerData.length > 0 ? (\n              <div className=\"chart-with-stats\">\n                <div className=\"chart-wrapper\">\n                  <Bar data={chartData} options={chartOptions} />\n                </div>\n                <div className=\"speaker-stats fade-in\">\n                  <h3>📊 Enhanced Multi-Speaker Analytics</h3>\n                  <div className=\"stats-grid\">\n                    {speakerData.map((speaker, index) => {\n                      const profile = speakerProfiles[speaker.speaker_id] || {};\n                      const isActive = activeSpeakers.has(speaker.speaker_id);\n                      const isPrimary = speaker.speaker_id === currentSpeaker;\n                      \n                      return (\n                        <div \n                          key={speaker.speaker_id} \n                          className={`speaker-stat ${isActive ? 'currently-speaking' : ''} ${isPrimary ? 'primary-speaker' : ''} ${speaker.speaker_id === dominantSpeaker ? 'dominant-speaker' : ''}`}\n                          style={{\n                            animationDelay: `${index * 0.1}s`,\n                            borderColor: getSpeakerStatusColor(speaker.speaker_id)\n                          }}\n                        >\n                          <div className=\"speaker-info\">\n                            <div className=\"speaker-name-container\">\n                              <span className=\"speaker-name\">\n                                {speaker.speaker_id}\n                                {isActive && (\n                                  <span className={`speaking-badge animate-pulse ${isPrimary ? 'primary' : 'secondary'}`}>\n                                    🎤 {isPrimary ? 'Primary' : 'Active'}\n                                  </span>\n                                )}\n                                {speaker.speaker_id === dominantSpeaker && (\n                                  <span className=\"dominant-badge\">\n                                    👑 Most Active\n                                  </span>\n                                )}\n                              </span>\n                              <div className=\"speaker-details\">\n                                {speaker.speech_segments > 0 && (\n                                  <span className=\"segment-count\">\n                                    {speaker.speech_segments} segments\n                                  </span>\n                                )}\n                                {speaker.confidence_score && (\n                                  <span className={`confidence-indicator ${\n                                    speaker.confidence_score > 0.9 ? 'very-high' : \n                                    speaker.confidence_score > 0.8 ? 'high' : \n                                    speaker.confidence_score > 0.6 ? 'medium' : 'low'\n                                  }`}>\n                                    {Math.round(speaker.confidence_score * 100)}% ID confidence\n                                  </span>\n                                )}\n                                {speaker.voice_consistency && (\n                                  <span className=\"voice-consistency-indicator\">\n                                    Voice: {Math.round(speaker.voice_consistency * 100)}%\n                                  </span>\n                                )}\n                              </div>\n                            </div>\n                            <div className=\"speaker-metrics\">\n                              <span className=\"speaker-time\">\n                                {formatTimeDetailed(speaker.talk_time_in_seconds)}\n                              </span>\n                              <span className=\"speaker-percentage\">\n                                {speaker.percentage.toFixed(1)}%\n                              </span>\n                              {speaker.avg_speaking_duration > 0 && (\n                                <span className=\"avg-duration\">\n                                  Avg: {speaker.avg_speaking_duration.toFixed(1)}s\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"progress-bar\">\n                            <div\n                              className={`progress-fill ${isActive ? 'active-speaker' : ''} ${isPrimary ? 'primary' : ''}`}\n                              style={{\n                                width: `${Math.max(speaker.percentage, 2)}%`,\n                                backgroundColor: chartData.datasets[0].backgroundColor[index],\n                              }}\n                            />\n                          </div>\n                          \n                          {/* Enhanced speaker characteristics */}\n                          <div className=\"speaker-characteristics\">\n                            {(speaker.avg_pitch || speaker.avg_energy) && (\n                              <div className=\"audio-characteristics\">\n                                {speaker.avg_pitch && (\n                                  <span className=\"pitch-indicator\">\n                                    🎵 {speaker.avg_pitch.toFixed(0)}Hz\n                                  </span>\n                                )}\n                                {speaker.avg_energy && (\n                                  <span className=\"energy-indicator\">\n                                    ⚡ {(speaker.avg_energy * 1000).toFixed(1)}\n                                  </span>\n                                )}\n                              </div>\n                            )}\n                            \n                            {/* Interaction metrics */}\n                            <div className=\"interaction-metrics\">\n                              {speaker.interrupt_count > 0 && (\n                                <span className=\"interrupt-metric negative\">\n                                  Interrupts: {speaker.interrupt_count}\n                                </span>\n                              )}\n                              {speaker.interrupted_count > 0 && (\n                                <span className=\"interrupted-metric\">\n                                  Interrupted: {speaker.interrupted_count}\n                                </span>\n                              )}\n                              {speaker.speaking_pattern_score && (\n                                <span className={`pattern-metric ${\n                                  speaker.speaking_pattern_score > 0.7 ? 'consistent' : \n                                  speaker.speaking_pattern_score > 0.4 ? 'moderate' : 'varied'\n                                }`}>\n                                  Pattern: {Math.round(speaker.speaking_pattern_score * 100)}%\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                  \n                  {/* Enhanced meeting summary */}\n                  <div className=\"meeting-summary\">\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Active Speaking</span>\n                      <span className=\"summary-value\">\n                        {((totalSpeakingTime / Math.max(meetingDuration, 1)) * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Silence</span>\n                      <span className=\"summary-value\">\n                        {((silenceTime / Math.max(meetingDuration, 1)) * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Participants</span>\n                      <span className=\"summary-value\">{speakerData.length}</span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Currently Active</span>\n                      <span className=\"summary-value\">{activeSpeakers.size}</span>\n                    </div>\n                    {speakerTransitions > 0 && (\n                      <div className=\"summary-stat\">\n                        <span className=\"summary-label\">Speaker Changes</span>\n                        <span className=\"summary-value\">{speakerTransitions}</span>\n                      </div>\n                    )}\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Conversation Energy</span>\n                      <span className=\"summary-value\" style={{ color: getMomentumIndicator().color }}>\n                        {getMomentumIndicator().text}\n                      </span>\n                    </div>\n                    {speakerOverlaps.length > 0 && (\n                      <div className=\"summary-stat\">\n                        <span className=\"summary-label\">Recent Overlaps</span>\n                        <span className=\"summary-value\">{speakerOverlaps.length}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-data\">\n                <h3>🎯 Ready for Advanced Multi-Speaker Analysis</h3>\n                <p>\n                  {isRecording\n                    ? 'Advanced AI-powered multi-speaker detection is active. Multiple people can speak simultaneously and will be tracked with enhanced accuracy!'\n                    : 'Click \"Start Meeting\" to begin enhanced real-time multi-speaker analysis with comprehensive voice profiling, overlap detection, and conversation flow tracking.'}\n                </p>\n                {!isRecording && (\n                  <div className=\"feature-preview\">\n                    <div className=\"preview-item\">⚡ Multi-level voice activity detection with overlap handling</div>\n                    <div className=\"preview-item\">🧠 Comprehensive voice feature extraction and speaker profiling</div>\n                    <div className=\"preview-item\">🔄 Advanced conversation flow and transition pattern learning</div>\n                    <div className=\"preview-item\">📊 Real-time confidence scoring and voice consistency tracking</div>\n                    <div className=\"preview-item\">💬 Conversation momentum and context-aware processing</div>\n                    <div className=\"preview-item\">👥 Simultaneous multi-speaker support with primary/secondary detection</div>\n                    <div className=\"preview-item\">🎯 Speaker overlap detection and interaction analysis</div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Enhanced Instructions */}\n        <div className=\"instructions\">\n          <h3>📖 Advanced Multi-Speaker Features</h3>\n          <div className=\"feature-list\">\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">👥</span>\n              <div className=\"feature-content\">\n                <strong>Simultaneous Multi-Speaker Support</strong>\n                <span>Handles multiple people speaking at once with primary/secondary speaker detection</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">⚡</span>\n              <div className=\"feature-content\">\n                <strong>Advanced Voice Activity Detection</strong>\n                <span>Multi-level VAD with WebRTC + energy-based backup for robust overlap handling</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🧠</span>\n              <div className=\"feature-content\">\n                <strong>Comprehensive Voice Profiling</strong>\n                <span>MFCC, spectral, chroma, and energy features with voice consistency tracking</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🔄</span>\n              <div className=\"feature-content\">\n                <strong>Conversation Flow Intelligence</strong>\n                <span>Learns speaker patterns, predicts transitions, and tracks conversation momentum</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">📊</span>\n              <div className=\"feature-content\">\n                <strong>Adaptive Speaker Recognition</strong>\n                <span>Dynamic thresholds, confidence scoring, and voice consistency monitoring</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🎤</span>\n              <div className=\"feature-content\">\n                <strong>Enhanced Transcription Quality</strong>\n                <span>Improved preprocessing, confidence filtering, and multi-speaker transcription</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">⚠️</span>\n              <div className=\"feature-content\">\n                <strong>Speaker Overlap Detection</strong>\n                <span>Real-time detection and analysis of simultaneous speech with duration tracking</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🎯</span>\n              <div className=\"feature-content\">\n                <strong>Interaction Analysis</strong>\n                <span>Tracks interruptions, speaker dominance, and conversation patterns</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"version-info\">\n            <h4>🔧 Backend Version: {backendVersion}</h4>\n            <p>\n              This advanced version provides significantly enhanced multi-speaker capabilities including:\n              simultaneous speaker detection, voice consistency tracking, speaker overlap analysis,\n              and comprehensive conversation flow intelligence. The system adapts to conversation\n              patterns and becomes more accurate over time.\n            </p>\n            {serverFeatures.length > 0 && (\n              <div className=\"server-features\">\n                <strong>Active Features:</strong>\n                <ul>\n                  {serverFeatures.map((feature, index) => (\n                    <li key={index}>{feature.replace(/_/g, ' ')}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}