{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Meeting Assistant\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n\n  // New real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n  useEffect(() => {\n    connectToWebSocket();\n\n    // Cleanup function\n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n  const connectToWebSocket = () => {\n    if (isConnectingRef.current || ws.current && ws.current.readyState === WebSocket.CONNECTING) {\n      return;\n    }\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    try {\n      console.log('Attempting to connect to WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      ws.current.onopen = () => {\n        console.log('Connected to WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({\n            type: 'ping'\n          }));\n        }\n      };\n      ws.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      ws.current.onclose = event => {\n        console.log('WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      ws.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n      };\n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  };\n  const handleWebSocketMessage = data => {\n    switch (data.type) {\n      case 'speaker_activity':\n        handleSpeakerActivity(data);\n        break;\n      case 'speaker_stats':\n        handleSpeakerStats(data);\n        break;\n      case 'transcription':\n        handleTranscription(data);\n        break;\n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n\n      // Legacy support for old message format\n      case 'speaker_update':\n        setSpeakerData(data.data);\n        setMeetingDuration(data.meeting_duration);\n        break;\n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  };\n  const handleSpeakerActivity = data => {\n    const {\n      speaker_id,\n      action,\n      timestamp\n    } = data;\n    setLastActivity({\n      speaker_id,\n      action,\n      timestamp\n    });\n    if (action === 'started') {\n      setCurrentSpeaker(speaker_id);\n    } else if (action === 'stopped' && currentSpeaker === speaker_id) {\n      setCurrentSpeaker(null);\n    }\n  };\n  const handleSpeakerStats = data => {\n    const {\n      speakers,\n      meeting_duration\n    } = data;\n\n    // Convert to the format expected by the chart\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking\n    }));\n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n  };\n  const handleTranscription = data => {\n    const {\n      speaker_id,\n      text,\n      timestamp\n    } = data;\n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: Date.now() + Math.random(),\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString()\n      };\n\n      // Keep only last 50 transcriptions for performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-50);\n    });\n  };\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(true);\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setLastActivity(null);\n        console.log('Meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Failed to start meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the backend server is running.');\n    }\n  };\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        console.log('Meeting stopped successfully');\n      } else {\n        console.error('Failed to stop meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping meeting:', error);\n    }\n  };\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items\n        })\n      });\n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n  const dismissPrompt = index => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Prepare chart data\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [{\n      label: 'Speaking Time (seconds)',\n      data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n      backgroundColor: speakerData.map((speaker, index) => {\n        const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6'];\n        const baseColor = colors[index % colors.length];\n        // Highlight current speaker\n        return speaker.is_speaking ? baseColor.replace('0.8)', '1)') : baseColor;\n      }),\n      borderColor: speakerData.map((speaker, index) => {\n        const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED'];\n        const baseColor = colors[index % colors.length];\n        return speaker.is_speaking ? baseColor : baseColor + '80';\n      }),\n      borderWidth: speakerData.map(speaker => speaker.is_speaking ? 3 : 1)\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Real-Time Speaking Time Analysis',\n        font: {\n          size: 18\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers'\n        }\n      }\n    },\n    animation: {\n      duration: 200 // Faster animation for real-time updates\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFA4 Real-Time Meeting Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`,\n          children: isConnected ? '🟢 Connected' : '🔴 Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meeting-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopMeeting : startMeeting,\n            className: `control-button ${isRecording ? 'stop' : 'start'}`,\n            disabled: !isConnected,\n            children: isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meeting-duration\",\n            children: [\"Duration: \", formatTime(meetingDuration)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-speaker-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDF99\\uFE0F Live Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `speaker-indicator ${currentSpeaker ? 'active' : 'inactive'}`,\n            children: currentSpeaker ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaking-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"pulse-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"speaker-text\",\n                children: [currentSpeaker, \" is speaking...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inactive-text\",\n              children: \"Listening...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agenda-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Meeting Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: agenda,\n            onChange: e => setAgenda(e.target.value),\n            placeholder: \"Enter agenda items (one per line)\",\n            className: \"agenda-input\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setMeetingAgenda,\n            className: \"set-agenda-button\",\n            children: \"Set Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), agendaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agenda-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Agenda:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: agendaItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), isRecording && transcriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDD Live Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-container\",\n          ref: transcriptionRef,\n          children: transcriptions.map(transcription => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcription-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"speaker-name\",\n                children: transcription.speaker_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"transcription-time\",\n                children: transcription.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-text\",\n              children: transcription.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this)]\n          }, transcription.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), prompts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Facilitator Prompts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prompt ${prompt.prompt_type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [prompt.prompt_type.replace('_', ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prompt.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dismissPrompt(index),\n            className: \"dismiss-button\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: speakerData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-with-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `speaker-stats ${speakerData.length > 0 ? 'fade-in' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uD83D\\uDCCA Speaker Statistics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-grid\",\n                children: speakerData.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `speaker-stat ${speaker.is_speaking ? 'currently-speaking' : ''}`,\n                  style: {\n                    animationDelay: `${index * 0.1}s`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"speaker-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"speaker-name\",\n                      children: [speaker.speaker_id, speaker.is_speaking && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaking-badge\",\n                        children: \"\\uD83C\\uDFA4 Speaking\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"speaker-time\",\n                      children: formatTime(speaker.talk_time_in_seconds)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"speaker-percentage\",\n                      children: [\"(\", speaker.percentage, \"%)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `progress-fill ${speaker.is_speaking ? 'active-speaker' : ''}`,\n                      style: {\n                        width: `${speaker.percentage}%`,\n                        backgroundColor: chartData.datasets[0].backgroundColor[index]\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 25\n                  }, this)]\n                }, speaker.speaker_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFAF Ready to Analyze\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isRecording ? 'Listening for speakers... Start talking to see real-time analysis!' : 'Click \"Start Meeting\" to begin real-time speech analysis.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCD6 How it works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Instant voice detection and speaker switching\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Real-time audio capture and transcription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Live speaker identification and stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u2696\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Participation balance monitoring (60% rule)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u23F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Agenda progress tracking (10-minute alerts)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83E\\uDD2B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Silence detection (30-second alerts)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7v0FnT9oCGr0Ys7cV5SWgTERnSc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","isConnected","setIsConnected","isRecording","setIsRecording","speakerData","setSpeakerData","meetingDuration","setMeetingDuration","prompts","setPrompts","agenda","setAgenda","agendaItems","setAgendaItems","currentSpeaker","setCurrentSpeaker","transcriptions","setTranscriptions","lastActivity","setLastActivity","ws","reconnectTimeoutRef","isConnectingRef","transcriptionRef","backendUrl","process","env","REACT_APP_BACKEND_URL","connectToWebSocket","current","clearTimeout","onopen","onmessage","onclose","onerror","readyState","WebSocket","OPEN","CONNECTING","close","scrollTop","scrollHeight","wsUrl","replace","console","log","send","JSON","stringify","type","event","data","parse","handleWebSocketMessage","error","code","reason","setTimeout","handleSpeakerActivity","handleSpeakerStats","handleTranscription","prev","meeting_duration","speaker_id","action","timestamp","speakers","formattedSpeakers","map","speaker","talk_time_in_seconds","talk_time_seconds","percentage","is_speaking","text","newTranscription","id","Date","now","Math","random","time","toLocaleTimeString","updated","slice","startMeeting","response","fetch","method","headers","ok","errorData","json","catch","message","alert","stopMeeting","setMeetingAgenda","trim","items","split","filter","item","body","dismissPrompt","index","_","i","formatTime","seconds","minutes","floor","remainingSeconds","toString","padStart","chartData","labels","datasets","label","backgroundColor","colors","baseColor","length","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","font","size","scales","y","beginAtZero","x","animation","duration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","onChange","e","target","placeholder","rows","ref","transcription","prompt","prompt_type","toUpperCase","options","style","animationDelay","width","_c","$RefreshReg$"],"sources":["C:/Personal/Meeting Assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n  \n  // New real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  \n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  useEffect(() => {\n    connectToWebSocket();\n    \n    // Cleanup function\n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        \n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n\n  const connectToWebSocket = () => {\n    if (isConnectingRef.current || (ws.current && ws.current.readyState === WebSocket.CONNECTING)) {\n      return;\n    }\n\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    \n    try {\n      console.log('Attempting to connect to WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      \n      ws.current.onopen = () => {\n        console.log('Connected to WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        \n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({ type: 'ping' }));\n        }\n      };\n      \n      ws.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      \n      ws.current.onclose = (event) => {\n        console.log('WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        \n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          \n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      \n      ws.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n      };\n      \n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      \n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  };\n\n  const handleWebSocketMessage = (data) => {\n    switch (data.type) {\n      case 'speaker_activity':\n        handleSpeakerActivity(data);\n        break;\n        \n      case 'speaker_stats':\n        handleSpeakerStats(data);\n        break;\n        \n      case 'transcription':\n        handleTranscription(data);\n        break;\n        \n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n        \n      // Legacy support for old message format\n      case 'speaker_update':\n        setSpeakerData(data.data);\n        setMeetingDuration(data.meeting_duration);\n        break;\n        \n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  };\n\n  const handleSpeakerActivity = (data) => {\n    const { speaker_id, action, timestamp } = data;\n    setLastActivity({ speaker_id, action, timestamp });\n    \n    if (action === 'started') {\n      setCurrentSpeaker(speaker_id);\n    } else if (action === 'stopped' && currentSpeaker === speaker_id) {\n      setCurrentSpeaker(null);\n    }\n  };\n\n  const handleSpeakerStats = (data) => {\n    const { speakers, meeting_duration } = data;\n    \n    // Convert to the format expected by the chart\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking\n    }));\n    \n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n  };\n\n  const handleTranscription = (data) => {\n    const { speaker_id, text, timestamp } = data;\n    \n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: Date.now() + Math.random(),\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString()\n      };\n      \n      // Keep only last 50 transcriptions for performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-50);\n    });\n  };\n\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(true);\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setLastActivity(null);\n        console.log('Meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Failed to start meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the backend server is running.');\n    }\n  };\n\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        console.log('Meeting stopped successfully');\n      } else {\n        console.error('Failed to stop meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping meeting:', error);\n    }\n  };\n\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    \n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    \n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ items }),\n      });\n      \n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n\n  const dismissPrompt = (index) => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // Prepare chart data\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [\n      {\n        label: 'Speaking Time (seconds)',\n        data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n        backgroundColor: speakerData.map((speaker, index) => {\n          const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6'];\n          const baseColor = colors[index % colors.length];\n          // Highlight current speaker\n          return speaker.is_speaking ? baseColor.replace('0.8)', '1)') : baseColor;\n        }),\n        borderColor: speakerData.map((speaker, index) => {\n          const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED'];\n          const baseColor = colors[index % colors.length];\n          return speaker.is_speaking ? baseColor : baseColor + '80';\n        }),\n        borderWidth: speakerData.map(speaker => speaker.is_speaking ? 3 : 1),\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Real-Time Speaking Time Analysis',\n        font: {\n          size: 18,\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)',\n        },\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers',\n        },\n      },\n    },\n    animation: {\n      duration: 200, // Faster animation for real-time updates\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>🎤 Real-Time Meeting Assistant</h1>\n        <div className=\"connection-status\">\n          <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? '🟢 Connected' : '🔴 Disconnected'}\n          </span>\n        </div>\n      </header>\n\n      <main className=\"main-content\">\n        {/* Control Panel */}\n        <div className=\"control-panel\">\n          <div className=\"meeting-controls\">\n            <button\n              onClick={isRecording ? stopMeeting : startMeeting}\n              className={`control-button ${isRecording ? 'stop' : 'start'}`}\n              disabled={!isConnected}\n            >\n              {isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'}\n            </button>\n            <span className=\"meeting-duration\">\n              Duration: {formatTime(meetingDuration)}\n            </span>\n          </div>\n\n          {/* Real-time Speaker Status */}\n          {isRecording && (\n            <div className=\"current-speaker-status\">\n              <h3>🎙️ Live Status</h3>\n              <div className={`speaker-indicator ${currentSpeaker ? 'active' : 'inactive'}`}>\n                {currentSpeaker ? (\n                  <div className=\"speaking-animation\">\n                    <span className=\"pulse-dot\"></span>\n                    <span className=\"speaker-text\">{currentSpeaker} is speaking...</span>\n                  </div>\n                ) : (\n                  <span className=\"inactive-text\">Listening...</span>\n                )}\n              </div>\n            </div>\n          )}\n\n          <div className=\"agenda-section\">\n            <h3>Meeting Agenda</h3>\n            <textarea\n              value={agenda}\n              onChange={(e) => setAgenda(e.target.value)}\n              placeholder=\"Enter agenda items (one per line)\"\n              className=\"agenda-input\"\n              rows=\"4\"\n            />\n            <button onClick={setMeetingAgenda} className=\"set-agenda-button\">\n              Set Agenda\n            </button>\n            {agendaItems.length > 0 && (\n              <div className=\"agenda-items\">\n                <h4>Current Agenda:</h4>\n                <ul>\n                  {agendaItems.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Real-time Transcription */}\n        {isRecording && transcriptions.length > 0 && (\n          <div className=\"transcription-section\">\n            <h3>📝 Live Transcription</h3>\n            <div className=\"transcription-container\" ref={transcriptionRef}>\n              {transcriptions.map((transcription) => (\n                <div key={transcription.id} className=\"transcription-item\">\n                  <div className=\"transcription-header\">\n                    <span className=\"speaker-name\">{transcription.speaker_id}</span>\n                    <span className=\"transcription-time\">{transcription.time}</span>\n                  </div>\n                  <div className=\"transcription-text\">{transcription.text}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Prompts Section */}\n        {prompts.length > 0 && (\n          <div className=\"prompts-section\">\n            <h3>📋 Facilitator Prompts</h3>\n            {prompts.map((prompt, index) => (\n              <div key={index} className={`prompt ${prompt.prompt_type}`}>\n                <div className=\"prompt-content\">\n                  <strong>{prompt.prompt_type.replace('_', ' ').toUpperCase()}:</strong>\n                  <p>{prompt.message}</p>\n                </div>\n                <button\n                  onClick={() => dismissPrompt(index)}\n                  className=\"dismiss-button\"\n                >\n                  ✕\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Speaking Time Visualization */}\n        <div className=\"chart-section\">\n          <div className=\"chart-container\">\n            {speakerData.length > 0 ? (\n              <div className=\"chart-with-stats\">\n                <div className=\"chart-wrapper\">\n                  <Bar data={chartData} options={chartOptions} />\n                </div>\n                <div className={`speaker-stats ${speakerData.length > 0 ? 'fade-in' : ''}`}>\n                  <h3>📊 Speaker Statistics</h3>\n                  <div className=\"stats-grid\">\n                    {speakerData.map((speaker, index) => (\n                      <div \n                        key={speaker.speaker_id} \n                        className={`speaker-stat ${speaker.is_speaking ? 'currently-speaking' : ''}`}\n                        style={{\n                          animationDelay: `${index * 0.1}s`\n                        }}\n                      >\n                        <div className=\"speaker-info\">\n                          <span className=\"speaker-name\">\n                            {speaker.speaker_id}\n                            {speaker.is_speaking && <span className=\"speaking-badge\">🎤 Speaking</span>}\n                          </span>\n                          <span className=\"speaker-time\">\n                            {formatTime(speaker.talk_time_in_seconds)}\n                          </span>\n                          <span className=\"speaker-percentage\">\n                            ({speaker.percentage}%)\n                          </span>\n                        </div>\n                        <div className=\"progress-bar\">\n                          <div\n                            className={`progress-fill ${speaker.is_speaking ? 'active-speaker' : ''}`}\n                            style={{\n                              width: `${speaker.percentage}%`,\n                              backgroundColor: chartData.datasets[0].backgroundColor[index],\n                            }}\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-data\">\n                <h3>🎯 Ready to Analyze</h3>\n                <p>\n                  {isRecording\n                    ? 'Listening for speakers... Start talking to see real-time analysis!'\n                    : 'Click \"Start Meeting\" to begin real-time speech analysis.'}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className=\"instructions\">\n          <h3>📖 How it works</h3>\n          <div className=\"feature-list\">\n            <div className=\"feature\">\n              <span className=\"feature-icon\">⚡</span>\n              <span>Instant voice detection and speaker switching</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"feature-icon\">🎤</span>\n              <span>Real-time audio capture and transcription</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"feature-icon\">👥</span>\n              <span>Live speaker identification and stats</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"feature-icon\">⚖️</span>\n              <span>Participation balance monitoring (60% rule)</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"feature-icon\">⏰</span>\n              <span>Agenda progress tracking (10-minute alerts)</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"feature-icon\">🤫</span>\n              <span>Silence detection (30-second alerts)</span>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}