{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Meeting Assistant\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  var _speakerData$find, _getSilenceDisplay, _getSilenceDisplay2;\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [totalSpeakingTime, setTotalSpeakingTime] = useState(0);\n  const [silenceTime, setSilenceTime] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n\n  // Enhanced real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const [speakerActivity, setSpeakerActivity] = useState({});\n  const [realtimeStats, setRealtimeStats] = useState({\n    meeting_duration: 0,\n    total_speaking_time: 0,\n    silence_time: 0\n  });\n\n  // NEW: Enhanced conversation states\n  const [conversationMomentum, setConversationMomentum] = useState(0);\n  const [silenceState, setSilenceState] = useState({\n    active: false,\n    category: null,\n    duration: 0\n  });\n  const [speakerTransitions, setSpeakerTransitions] = useState(0);\n  const [dominantSpeaker, setDominantSpeaker] = useState(null);\n  const [conversationInsights, setConversationInsights] = useState({});\n  const [recentSpeakerSequence, setRecentSpeakerSequence] = useState([]);\n\n  // Connection and performance states\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const [lastMessageTime, setLastMessageTime] = useState(Date.now());\n  const [messageCount, setMessageCount] = useState(0);\n  const [backendVersion, setBackendVersion] = useState('1.0.0');\n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const performanceTimerRef = useRef(null);\n  const insightsTimerRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  // Performance monitoring\n  useEffect(() => {\n    performanceTimerRef.current = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastMessage = now - lastMessageTime;\n      if (isRecording && timeSinceLastMessage > 5000) {\n        setConnectionQuality('poor');\n      } else if (isRecording && timeSinceLastMessage > 2000) {\n        setConnectionQuality('fair');\n      } else {\n        setConnectionQuality('good');\n      }\n    }, 1000);\n    return () => {\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n    };\n  }, [lastMessageTime, isRecording]);\n\n  // NEW: Fetch conversation insights periodically\n  useEffect(() => {\n    if (isRecording) {\n      insightsTimerRef.current = setInterval(async () => {\n        try {\n          const response = await fetch(`${backendUrl}/api/meeting/conversation-insights`);\n          if (response.ok) {\n            const insights = await response.json();\n            setConversationInsights(insights);\n            if (insights.recent_speaker_sequence) {\n              setRecentSpeakerSequence(insights.recent_speaker_sequence);\n            }\n          }\n        } catch (error) {\n          console.warn('Failed to fetch conversation insights:', error);\n        }\n      }, 3000); // Every 3 seconds\n    }\n    return () => {\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n    };\n  }, [isRecording, backendUrl]);\n  useEffect(() => {\n    connectToWebSocket();\n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n  const connectToWebSocket = useCallback(() => {\n    if (isConnectingRef.current || ws.current && ws.current.readyState === WebSocket.CONNECTING) {\n      return;\n    }\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    try {\n      console.log('Connecting to Enhanced WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      ws.current.onopen = () => {\n        console.log('Connected to Enhanced WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        setConnectionQuality('good');\n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({\n            type: 'ping'\n          }));\n        }\n      };\n      ws.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessageTime(Date.now());\n          setMessageCount(prev => prev + 1);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      ws.current.onclose = event => {\n        console.log('Enhanced WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      ws.current.onerror = error => {\n        console.error('Enhanced WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n      };\n    } catch (error) {\n      console.error('Failed to create Enhanced WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      setConnectionQuality('poor');\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  }, [backendUrl]);\n  const handleWebSocketMessage = useCallback(data => {\n    switch (data.type) {\n      case 'connection_established':\n        // NEW: Handle enhanced connection confirmation\n        if (data.version) {\n          setBackendVersion(data.version);\n        }\n        console.log('Enhanced connection established:', data.message);\n        break;\n      case 'speaker_activity':\n        handleSpeakerActivity(data);\n        break;\n      case 'speaker_stats':\n        handleEnhancedSpeakerStats(data);\n        break;\n      case 'transcription':\n        handleEnhancedTranscription(data);\n        break;\n      case 'timer_update':\n        handleEnhancedTimerUpdate(data);\n        break;\n      case 'silence':\n        // NEW: Handle enhanced silence events\n        handleSilenceEvent(data);\n        break;\n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  }, []);\n  const handleSpeakerActivity = useCallback(data => {\n    const {\n      speaker_id,\n      action,\n      timestamp,\n      conversation_momentum\n    } = data;\n    setLastActivity({\n      speaker_id,\n      action,\n      timestamp\n    });\n\n    // Update conversation momentum if provided\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n\n    // Update speaker activity tracking\n    setSpeakerActivity(prev => ({\n      ...prev,\n      [speaker_id]: {\n        ...prev[speaker_id],\n        last_action: action,\n        last_timestamp: timestamp,\n        is_active: action === 'started'\n      }\n    }));\n    if (action === 'started') {\n      setCurrentSpeaker(speaker_id);\n    } else if (action === 'stopped' && currentSpeaker === speaker_id) {\n      setCurrentSpeaker(null);\n    }\n  }, [currentSpeaker]);\n\n  // NEW: Enhanced speaker stats handler\n  const handleEnhancedSpeakerStats = useCallback(data => {\n    const {\n      speakers,\n      meeting_duration,\n      total_speaking_time,\n      silence_time,\n      conversation_momentum,\n      total_speaker_transitions,\n      dominant_speaker\n    } = data;\n\n    // Convert to the format expected by the chart, including new fields\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking,\n      speech_segments: speaker.speech_segments || 0,\n      confidence_score: speaker.confidence_score || 1.0,\n      avg_speaking_duration: speaker.avg_speaking_duration || 0,\n      avg_pitch: speaker.avg_pitch,\n      avg_energy: speaker.avg_energy\n    }));\n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n    setTotalSpeakingTime(total_speaking_time);\n    setSilenceTime(silence_time);\n\n    // Update enhanced metrics\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    if (total_speaker_transitions !== undefined) {\n      setSpeakerTransitions(total_speaker_transitions);\n    }\n    if (dominant_speaker) {\n      setDominantSpeaker(dominant_speaker);\n    }\n\n    // Update realtime stats\n    setRealtimeStats({\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    });\n  }, []);\n\n  // NEW: Enhanced transcription handler\n  const handleEnhancedTranscription = useCallback(data => {\n    const {\n      speaker_id,\n      text,\n      timestamp,\n      confidence,\n      word_count,\n      conversation_momentum,\n      recent_speaker_sequence\n    } = data;\n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: `${timestamp}-${Math.random()}`,\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString(),\n        confidence: confidence || 1.0,\n        word_count: word_count || 0,\n        conversation_momentum: conversation_momentum || 0\n      };\n\n      // Keep only last 100 transcriptions for performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-100);\n    });\n\n    // Update conversation momentum if provided\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n\n    // Update recent speaker sequence if provided\n    if (recent_speaker_sequence) {\n      setRecentSpeakerSequence(recent_speaker_sequence);\n    }\n  }, []);\n\n  // NEW: Enhanced timer update handler\n  const handleEnhancedTimerUpdate = useCallback(data => {\n    const {\n      meeting_duration,\n      active_speakers,\n      total_speakers,\n      conversation_momentum,\n      silence_ratio\n    } = data;\n    setMeetingDuration(meeting_duration);\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n\n  // NEW: Silence event handler\n  const handleSilenceEvent = useCallback(data => {\n    const {\n      state,\n      timestamp,\n      duration,\n      silence_category,\n      conversation_momentum\n    } = data;\n    setSilenceState({\n      active: state === 'started',\n      category: silence_category || null,\n      duration: duration || 0,\n      timestamp: timestamp\n    });\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(true);\n        // Reset all states including new ones\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTotalSpeakingTime(0);\n        setSilenceTime(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setLastActivity(null);\n        setSpeakerActivity({});\n        setRealtimeStats({\n          meeting_duration: 0,\n          total_speaking_time: 0,\n          silence_time: 0\n        });\n        setMessageCount(0);\n\n        // Reset enhanced states\n        setConversationMomentum(0);\n        setSilenceState({\n          active: false,\n          category: null,\n          duration: 0\n        });\n        setSpeakerTransitions(0);\n        setDominantSpeaker(null);\n        setConversationInsights({});\n        setRecentSpeakerSequence([]);\n        console.log('Enhanced meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Failed to start enhanced meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting enhanced meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the enhanced backend server is running.');\n    }\n  };\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        setSpeakerActivity({});\n        setSilenceState({\n          active: false,\n          category: null,\n          duration: 0\n        });\n        console.log('Enhanced meeting stopped successfully');\n      } else {\n        console.error('Failed to stop enhanced meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping enhanced meeting:', error);\n    }\n  };\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items\n        })\n      });\n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n  const dismissPrompt = index => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const formatTimeDetailed = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getConnectionStatusIcon = () => {\n    switch (connectionQuality) {\n      case 'good':\n        return '🟢';\n      case 'fair':\n        return '🟡';\n      case 'poor':\n        return '🔴';\n      default:\n        return '⚫';\n    }\n  };\n  const getConnectionStatusText = () => {\n    const base = isConnected ? 'Connected' : 'Disconnected';\n    if (isConnected && isRecording) {\n      return `${base} (${connectionQuality})`;\n    }\n    return base;\n  };\n\n  // NEW: Get conversation momentum indicator\n  const getMomentumIndicator = () => {\n    if (conversationMomentum > 0.7) return {\n      text: 'High Energy',\n      icon: '⚡',\n      color: '#10B981'\n    };\n    if (conversationMomentum > 0.4) return {\n      text: 'Active',\n      icon: '🎯',\n      color: '#3B82F6'\n    };\n    if (conversationMomentum > 0.2) return {\n      text: 'Moderate',\n      icon: '💭',\n      color: '#F59E0B'\n    };\n    return {\n      text: 'Quiet',\n      icon: '😴',\n      color: '#6B7280'\n    };\n  };\n\n  // NEW: Get silence category display\n  const getSilenceDisplay = () => {\n    if (!silenceState.active) return null;\n    const categories = {\n      brief_pause: {\n        text: 'Brief Pause',\n        color: '#10B981'\n      },\n      natural_pause: {\n        text: 'Natural Break',\n        color: '#3B82F6'\n      },\n      long_pause: {\n        text: 'Long Pause',\n        color: '#F59E0B'\n      },\n      extended_silence: {\n        text: 'Extended Silence',\n        color: '#EF4444'\n      }\n    };\n    return categories[silenceState.category] || {\n      text: 'Silence',\n      color: '#6B7280'\n    };\n  };\n\n  // Enhanced chart data with confidence scoring\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [{\n      label: 'Speaking Time (seconds)',\n      data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n      backgroundColor: speakerData.map((speaker, index) => {\n        const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];\n        const baseColor = colors[index % colors.length];\n        // Adjust opacity based on confidence score\n        const opacity = Math.max(0.5, speaker.confidence_score || 1.0);\n        return speaker.is_speaking ? baseColor : baseColor + Math.round(opacity * 255).toString(16).padStart(2, '0');\n      }),\n      borderColor: speakerData.map((speaker, index) => {\n        const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED', '#DB2777', '#0891B2'];\n        return colors[index % colors.length];\n      }),\n      borderWidth: speakerData.map(speaker => speaker.is_speaking ? 3 : 1)\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Enhanced Real-Time Speaking Analysis',\n        font: {\n          size: 18\n        }\n      },\n      tooltip: {\n        callbacks: {\n          afterLabel: function (context) {\n            const speaker = speakerData[context.dataIndex];\n            const lines = [];\n            if (speaker.confidence_score) {\n              lines.push(`Confidence: ${Math.round(speaker.confidence_score * 100)}%`);\n            }\n            if (speaker.avg_speaking_duration) {\n              lines.push(`Avg Duration: ${speaker.avg_speaking_duration.toFixed(1)}s`);\n            }\n            if (speaker.speech_segments) {\n              lines.push(`Segments: ${speaker.speech_segments}`);\n            }\n            return lines;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers'\n        }\n      }\n    },\n    animation: {\n      duration: 300\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\uD83C\\uDFA4 Enhanced Real-Time Meeting Assistant v\", backendVersion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'connected' : 'disconnected'} ${connectionQuality}`,\n            children: [getConnectionStatusIcon(), \" \", getConnectionStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-count\",\n            children: [\"Messages: \", messageCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"conversation-momentum\",\n            style: {\n              color: getMomentumIndicator().color\n            },\n            children: [getMomentumIndicator().icon, \" \", getMomentumIndicator().text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meeting-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopMeeting : startMeeting,\n            className: `control-button ${isRecording ? 'stop' : 'start'}`,\n            disabled: !isConnected,\n            children: isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meeting-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(meetingDuration)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Speaking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(totalSpeakingTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Silence:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(silenceTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 15\n            }, this), speakerTransitions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Transitions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: speakerTransitions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-speaker-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDF99\\uFE0F Enhanced Live Audio Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `speaker-indicator ${currentSpeaker ? 'active' : 'inactive'}`,\n            children: currentSpeaker ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaking-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"audio-visualizer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"speaker-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"speaker-text\",\n                  children: currentSpeaker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 723,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-text\",\n                  children: \"is speaking...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 23\n                }, this), ((_speakerData$find = speakerData.find(s => s.speaker_id === currentSpeaker)) === null || _speakerData$find === void 0 ? void 0 : _speakerData$find.confidence_score) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"confidence-indicator\",\n                  children: [Math.round(speakerData.find(s => s.speaker_id === currentSpeaker).confidence_score * 100), \"% confident\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 727,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"listening-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"listening-icon\",\n                children: \"\\uD83D\\uDC42\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inactive-text\",\n                children: silenceState.active ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: (_getSilenceDisplay = getSilenceDisplay()) === null || _getSilenceDisplay === void 0 ? void 0 : _getSilenceDisplay.color\n                  },\n                  children: [(_getSilenceDisplay2 = getSilenceDisplay()) === null || _getSilenceDisplay2 === void 0 ? void 0 : _getSilenceDisplay2.text, \" \", silenceState.duration > 0 && `(${silenceState.duration.toFixed(1)}s)`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 25\n                }, this) : 'Listening for speech...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), recentSpeakerSequence.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-flow\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Speaker Flow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaker-sequence\",\n              children: recentSpeakerSequence.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `sequence-item ${speaker === currentSpeaker ? 'current' : ''}`,\n                children: [speaker, index < recentSpeakerSequence.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"arrow\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 70\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 17\n          }, this), Object.keys(speakerActivity).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speaker-activity-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-list\",\n              children: Object.entries(speakerActivity).sort(([, a], [, b]) => (b.last_timestamp || 0) - (a.last_timestamp || 0)).slice(0, 3).map(([speakerId, activity]) => {\n                const speakerInfo = speakerData.find(s => s.speaker_id === speakerId);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `activity-item ${activity.is_active ? 'active' : 'inactive'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"speaker-name\",\n                    children: speakerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"activity-status\",\n                    children: activity.is_active ? 'Speaking' : 'Silent'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 777,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"activity-time\",\n                    children: new Date((activity.last_timestamp || 0) * 1000).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 780,\n                    columnNumber: 29\n                  }, this), (speakerInfo === null || speakerInfo === void 0 ? void 0 : speakerInfo.confidence_score) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"activity-confidence\",\n                    children: [Math.round(speakerInfo.confidence_score * 100), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 31\n                  }, this)]\n                }, speakerId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 27\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 17\n          }, this), Object.keys(conversationInsights).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-insights\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Conversation Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insights-grid\",\n              children: [conversationInsights.meeting_pace && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Pace:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 803,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `insight-value pace-${conversationInsights.meeting_pace}`,\n                  children: conversationInsights.meeting_pace\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 23\n              }, this), conversationInsights.most_active_speaker && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Most Active:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-value\",\n                  children: conversationInsights.most_active_speaker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 23\n              }, this), conversationInsights.total_transitions !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insight\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-label\",\n                  children: \"Transitions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"insight-value\",\n                  children: conversationInsights.total_transitions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agenda-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Meeting Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: agenda,\n            onChange: e => setAgenda(e.target.value),\n            placeholder: \"Enter agenda items (one per line)\",\n            className: \"agenda-input\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setMeetingAgenda,\n            className: \"set-agenda-button\",\n            children: \"Set Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this), agendaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agenda-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Agenda:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: agendaItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCDD Enhanced Live Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcription-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transcript-count\",\n              children: [transcriptions.length, \" messages\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 17\n            }, this), conversationMomentum > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"momentum-indicator\",\n              style: {\n                color: getMomentumIndicator().color\n              },\n              children: [getMomentumIndicator().icon, \" \", getMomentumIndicator().text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 19\n            }, this), transcriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-transcripts\",\n              onClick: () => setTranscriptions([]),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-container\",\n          ref: transcriptionRef,\n          children: transcriptions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-transcription\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pulse-ring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Enhanced voice detection active...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 17\n          }, this) : transcriptions.map((transcription, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcription-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-header-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"speaker-name\",\n                children: transcription.speaker_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transcription-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"transcription-time\",\n                  children: transcription.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 25\n                }, this), transcription.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `confidence-score ${transcription.confidence > 0.8 ? 'high' : transcription.confidence > 0.6 ? 'medium' : 'low'}`,\n                  children: [Math.round(transcription.confidence * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 27\n                }, this), transcription.word_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"word-count\",\n                  children: [transcription.word_count, \" words\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 895,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-text\",\n              children: transcription.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 21\n            }, this), index === transcriptions.length - 1 && transcription.conversation_momentum !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-context\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"momentum-context\",\n                style: {\n                  color: getMomentumIndicator().color\n                },\n                children: [\"Momentum: \", getMomentumIndicator().text]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 23\n            }, this)]\n          }, transcription.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }, this), prompts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Facilitator Prompts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 13\n        }, this), prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prompt ${prompt.prompt_type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [prompt.prompt_type.replace('_', ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prompt.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dismissPrompt(index),\n            className: \"dismiss-button\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: speakerData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-with-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaker-stats fade-in\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uD83D\\uDCCA Enhanced Real-time Speaker Analytics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-grid\",\n                children: speakerData.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `speaker-stat ${speaker.is_speaking ? 'currently-speaking' : ''} ${speaker.speaker_id === dominantSpeaker ? 'dominant-speaker' : ''}`,\n                  style: {\n                    animationDelay: `${index * 0.1}s`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"speaker-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-name-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-name\",\n                        children: [speaker.speaker_id, speaker.is_speaking && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"speaking-badge animate-pulse\",\n                          children: \"\\uD83C\\uDFA4 Live\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 960,\n                          columnNumber: 33\n                        }, this), speaker.speaker_id === dominantSpeaker && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"dominant-badge\",\n                          children: \"\\uD83D\\uDC51 Most Active\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 965,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"speaker-details\",\n                        children: [speaker.speech_segments > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"segment-count\",\n                          children: [speaker.speech_segments, \" segments\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 972,\n                          columnNumber: 33\n                        }, this), speaker.confidence_score && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `confidence-indicator ${speaker.confidence_score > 0.8 ? 'high' : speaker.confidence_score > 0.6 ? 'medium' : 'low'}`,\n                          children: [Math.round(speaker.confidence_score * 100), \"% ID confidence\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 977,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 970,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 956,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-metrics\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-time\",\n                        children: formatTimeDetailed(speaker.talk_time_in_seconds)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 984,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-percentage\",\n                        children: [speaker.percentage.toFixed(1), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 987,\n                        columnNumber: 29\n                      }, this), speaker.avg_speaking_duration > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"avg-duration\",\n                        children: [\"Avg: \", speaker.avg_speaking_duration.toFixed(1), \"s\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 983,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `progress-fill ${speaker.is_speaking ? 'active-speaker' : ''}`,\n                      style: {\n                        width: `${Math.max(speaker.percentage, 2)}%`,\n                        backgroundColor: chartData.datasets[0].backgroundColor[index]\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 998,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 997,\n                    columnNumber: 25\n                  }, this), (speaker.avg_pitch || speaker.avg_energy) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"audio-characteristics\",\n                    children: [speaker.avg_pitch && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"pitch-indicator\",\n                      children: [\"\\uD83C\\uDFB5 \", speaker.avg_pitch.toFixed(0), \"Hz\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1010,\n                      columnNumber: 31\n                    }, this), speaker.avg_energy && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"energy-indicator\",\n                      children: [\"\\u26A1 \", (speaker.avg_energy * 1000).toFixed(1)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1015,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1008,\n                    columnNumber: 27\n                  }, this)]\n                }, speaker.speaker_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meeting-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Active Speaking\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1028,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: [(totalSpeakingTime / Math.max(meetingDuration, 1) * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Silence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: [(silenceTime / Math.max(meetingDuration, 1) * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Participants\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: speakerData.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1041,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 21\n                }, this), speakerTransitions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Speaker Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: speakerTransitions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Conversation Energy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    style: {\n                      color: getMomentumIndicator().color\n                    },\n                    children: getMomentumIndicator().text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1049,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFAF Ready for Enhanced Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isRecording ? 'Advanced AI-powered voice detection is active. Start speaking to see instant analysis with enhanced speaker identification and conversation flow tracking!' : 'Click \"Start Meeting\" to begin enhanced real-time speech analysis with comprehensive voice embeddings, conversation context awareness, and improved multi-speaker handling.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this), !isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\u26A1 Enhanced voice activity detection with energy backup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83E\\uDDE0 Comprehensive voice feature extraction (MFCC, spectral, chroma)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDD04 Conversation flow and speaker transition tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDCCA Real-time confidence scoring and speaker profiling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDCAC Conversation momentum and context awareness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1072,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCD6 Enhanced Multi-Speaker Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Multi-Level Voice Detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Enhanced VAD with WebRTC + energy-based backup for better overlap handling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1088,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Comprehensive Voice Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"MFCC, spectral, chroma, and energy features for robust speaker identification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Conversation Flow Tracking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Learns speaker transition patterns (A\\u2192B\\u2192A) and conversation momentum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Adaptive Speaker Recognition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Dynamic similarity thresholds and confidence scoring that improve over time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Context-Aware Processing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Uses conversation context to predict likely next speakers and improve accuracy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Smart Conversation Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Real-time momentum tracking, silence categorization, and meeting pace analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"version-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uD83D\\uDD27 Backend Version: \", backendVersion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This enhanced version provides significantly improved handling of multi-speaker scenarios, especially the common pattern where Speaker 1 talks, then Speaker 2 responds, and then Speaker 1 replies back. The system learns from conversation patterns and becomes more accurate over time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 654,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DzqkgV/xQ3jAaxrxMzuIiebwIok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","_speakerData$find","_getSilenceDisplay","_getSilenceDisplay2","isConnected","setIsConnected","isRecording","setIsRecording","speakerData","setSpeakerData","meetingDuration","setMeetingDuration","totalSpeakingTime","setTotalSpeakingTime","silenceTime","setSilenceTime","prompts","setPrompts","agenda","setAgenda","agendaItems","setAgendaItems","currentSpeaker","setCurrentSpeaker","transcriptions","setTranscriptions","lastActivity","setLastActivity","speakerActivity","setSpeakerActivity","realtimeStats","setRealtimeStats","meeting_duration","total_speaking_time","silence_time","conversationMomentum","setConversationMomentum","silenceState","setSilenceState","active","category","duration","speakerTransitions","setSpeakerTransitions","dominantSpeaker","setDominantSpeaker","conversationInsights","setConversationInsights","recentSpeakerSequence","setRecentSpeakerSequence","connectionQuality","setConnectionQuality","lastMessageTime","setLastMessageTime","Date","now","messageCount","setMessageCount","backendVersion","setBackendVersion","ws","reconnectTimeoutRef","isConnectingRef","transcriptionRef","performanceTimerRef","insightsTimerRef","backendUrl","process","env","REACT_APP_BACKEND_URL","current","setInterval","timeSinceLastMessage","clearInterval","response","fetch","ok","insights","json","recent_speaker_sequence","error","console","warn","connectToWebSocket","clearTimeout","onopen","onmessage","onclose","onerror","readyState","WebSocket","OPEN","CONNECTING","close","scrollTop","scrollHeight","wsUrl","replace","log","send","JSON","stringify","type","event","data","parse","prev","handleWebSocketMessage","code","reason","setTimeout","version","message","handleSpeakerActivity","handleEnhancedSpeakerStats","handleEnhancedTranscription","handleEnhancedTimerUpdate","handleSilenceEvent","speaker_id","action","timestamp","conversation_momentum","undefined","last_action","last_timestamp","is_active","speakers","total_speaker_transitions","dominant_speaker","formattedSpeakers","map","speaker","talk_time_in_seconds","talk_time_seconds","percentage","is_speaking","speech_segments","confidence_score","avg_speaking_duration","avg_pitch","avg_energy","text","confidence","word_count","newTranscription","id","Math","random","time","toLocaleTimeString","updated","slice","active_speakers","total_speakers","silence_ratio","state","silence_category","startMeeting","method","headers","errorData","catch","alert","stopMeeting","setMeetingAgenda","trim","items","split","filter","item","body","dismissPrompt","index","_","i","formatTime","seconds","minutes","floor","remainingSeconds","toString","padStart","formatTimeDetailed","hours","secs","getConnectionStatusIcon","getConnectionStatusText","base","getMomentumIndicator","icon","color","getSilenceDisplay","categories","brief_pause","natural_pause","long_pause","extended_silence","chartData","labels","datasets","label","backgroundColor","colors","baseColor","length","opacity","max","round","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","font","size","tooltip","callbacks","afterLabel","context","dataIndex","lines","push","toFixed","scales","y","beginAtZero","x","animation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onClick","disabled","find","s","Object","keys","entries","sort","a","b","speakerId","activity","speakerInfo","meeting_pace","most_active_speaker","total_transitions","value","onChange","e","target","placeholder","rows","ref","transcription","prompt","prompt_type","toUpperCase","options","animationDelay","width","_c","$RefreshReg$"],"sources":["C:/Personal/Meeting Assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [totalSpeakingTime, setTotalSpeakingTime] = useState(0);\n  const [silenceTime, setSilenceTime] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n  \n  // Enhanced real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const [speakerActivity, setSpeakerActivity] = useState({});\n  const [realtimeStats, setRealtimeStats] = useState({\n    meeting_duration: 0,\n    total_speaking_time: 0,\n    silence_time: 0\n  });\n  \n  // NEW: Enhanced conversation states\n  const [conversationMomentum, setConversationMomentum] = useState(0);\n  const [silenceState, setSilenceState] = useState({ active: false, category: null, duration: 0 });\n  const [speakerTransitions, setSpeakerTransitions] = useState(0);\n  const [dominantSpeaker, setDominantSpeaker] = useState(null);\n  const [conversationInsights, setConversationInsights] = useState({});\n  const [recentSpeakerSequence, setRecentSpeakerSequence] = useState([]);\n  \n  // Connection and performance states\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const [lastMessageTime, setLastMessageTime] = useState(Date.now());\n  const [messageCount, setMessageCount] = useState(0);\n  const [backendVersion, setBackendVersion] = useState('1.0.0');\n  \n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const performanceTimerRef = useRef(null);\n  const insightsTimerRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  // Performance monitoring\n  useEffect(() => {\n    performanceTimerRef.current = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastMessage = now - lastMessageTime;\n      \n      if (isRecording && timeSinceLastMessage > 5000) {\n        setConnectionQuality('poor');\n      } else if (isRecording && timeSinceLastMessage > 2000) {\n        setConnectionQuality('fair');\n      } else {\n        setConnectionQuality('good');\n      }\n    }, 1000);\n\n    return () => {\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n    };\n  }, [lastMessageTime, isRecording]);\n\n  // NEW: Fetch conversation insights periodically\n  useEffect(() => {\n    if (isRecording) {\n      insightsTimerRef.current = setInterval(async () => {\n        try {\n          const response = await fetch(`${backendUrl}/api/meeting/conversation-insights`);\n          if (response.ok) {\n            const insights = await response.json();\n            setConversationInsights(insights);\n            if (insights.recent_speaker_sequence) {\n              setRecentSpeakerSequence(insights.recent_speaker_sequence);\n            }\n          }\n        } catch (error) {\n          console.warn('Failed to fetch conversation insights:', error);\n        }\n      }, 3000); // Every 3 seconds\n    }\n\n    return () => {\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n    };\n  }, [isRecording, backendUrl]);\n\n  useEffect(() => {\n    connectToWebSocket();\n    \n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n      if (insightsTimerRef.current) {\n        clearInterval(insightsTimerRef.current);\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        \n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n\n  const connectToWebSocket = useCallback(() => {\n    if (isConnectingRef.current || (ws.current && ws.current.readyState === WebSocket.CONNECTING)) {\n      return;\n    }\n\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    \n    try {\n      console.log('Connecting to Enhanced WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      \n      ws.current.onopen = () => {\n        console.log('Connected to Enhanced WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        setConnectionQuality('good');\n        \n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({ type: 'ping' }));\n        }\n      };\n      \n      ws.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessageTime(Date.now());\n          setMessageCount(prev => prev + 1);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      \n      ws.current.onclose = (event) => {\n        console.log('Enhanced WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n        \n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          \n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      \n      ws.current.onerror = (error) => {\n        console.error('Enhanced WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n      };\n      \n    } catch (error) {\n      console.error('Failed to create Enhanced WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      setConnectionQuality('poor');\n      \n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  }, [backendUrl]);\n\n  const handleWebSocketMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'connection_established':\n        // NEW: Handle enhanced connection confirmation\n        if (data.version) {\n          setBackendVersion(data.version);\n        }\n        console.log('Enhanced connection established:', data.message);\n        break;\n        \n      case 'speaker_activity':\n        handleSpeakerActivity(data);\n        break;\n        \n      case 'speaker_stats':\n        handleEnhancedSpeakerStats(data);\n        break;\n        \n      case 'transcription':\n        handleEnhancedTranscription(data);\n        break;\n        \n      case 'timer_update':\n        handleEnhancedTimerUpdate(data);\n        break;\n        \n      case 'silence':\n        // NEW: Handle enhanced silence events\n        handleSilenceEvent(data);\n        break;\n        \n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n        \n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  }, []);\n\n  const handleSpeakerActivity = useCallback((data) => {\n    const { speaker_id, action, timestamp, conversation_momentum } = data;\n    \n    setLastActivity({ speaker_id, action, timestamp });\n    \n    // Update conversation momentum if provided\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    \n    // Update speaker activity tracking\n    setSpeakerActivity(prev => ({\n      ...prev,\n      [speaker_id]: {\n        ...prev[speaker_id],\n        last_action: action,\n        last_timestamp: timestamp,\n        is_active: action === 'started'\n      }\n    }));\n    \n    if (action === 'started') {\n      setCurrentSpeaker(speaker_id);\n    } else if (action === 'stopped' && currentSpeaker === speaker_id) {\n      setCurrentSpeaker(null);\n    }\n  }, [currentSpeaker]);\n\n  // NEW: Enhanced speaker stats handler\n  const handleEnhancedSpeakerStats = useCallback((data) => {\n    const { \n      speakers, \n      meeting_duration, \n      total_speaking_time, \n      silence_time,\n      conversation_momentum,\n      total_speaker_transitions,\n      dominant_speaker\n    } = data;\n    \n    // Convert to the format expected by the chart, including new fields\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking,\n      speech_segments: speaker.speech_segments || 0,\n      confidence_score: speaker.confidence_score || 1.0,\n      avg_speaking_duration: speaker.avg_speaking_duration || 0,\n      avg_pitch: speaker.avg_pitch,\n      avg_energy: speaker.avg_energy\n    }));\n    \n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n    setTotalSpeakingTime(total_speaking_time);\n    setSilenceTime(silence_time);\n    \n    // Update enhanced metrics\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    if (total_speaker_transitions !== undefined) {\n      setSpeakerTransitions(total_speaker_transitions);\n    }\n    if (dominant_speaker) {\n      setDominantSpeaker(dominant_speaker);\n    }\n    \n    // Update realtime stats\n    setRealtimeStats({\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    });\n  }, []);\n\n  // NEW: Enhanced transcription handler\n  const handleEnhancedTranscription = useCallback((data) => {\n    const { \n      speaker_id, \n      text, \n      timestamp, \n      confidence,\n      word_count,\n      conversation_momentum,\n      recent_speaker_sequence\n    } = data;\n    \n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: `${timestamp}-${Math.random()}`,\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString(),\n        confidence: confidence || 1.0,\n        word_count: word_count || 0,\n        conversation_momentum: conversation_momentum || 0\n      };\n      \n      // Keep only last 100 transcriptions for performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-100);\n    });\n\n    // Update conversation momentum if provided\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n    \n    // Update recent speaker sequence if provided\n    if (recent_speaker_sequence) {\n      setRecentSpeakerSequence(recent_speaker_sequence);\n    }\n  }, []);\n\n  // NEW: Enhanced timer update handler\n  const handleEnhancedTimerUpdate = useCallback((data) => {\n    const { \n      meeting_duration, \n      active_speakers, \n      total_speakers,\n      conversation_momentum,\n      silence_ratio\n    } = data;\n    \n    setMeetingDuration(meeting_duration);\n    \n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n\n  // NEW: Silence event handler\n  const handleSilenceEvent = useCallback((data) => {\n    const { state, timestamp, duration, silence_category, conversation_momentum } = data;\n    \n    setSilenceState({\n      active: state === 'started',\n      category: silence_category || null,\n      duration: duration || 0,\n      timestamp: timestamp\n    });\n\n    if (conversation_momentum !== undefined) {\n      setConversationMomentum(conversation_momentum);\n    }\n  }, []);\n\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(true);\n        // Reset all states including new ones\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTotalSpeakingTime(0);\n        setSilenceTime(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setLastActivity(null);\n        setSpeakerActivity({});\n        setRealtimeStats({ meeting_duration: 0, total_speaking_time: 0, silence_time: 0 });\n        setMessageCount(0);\n        \n        // Reset enhanced states\n        setConversationMomentum(0);\n        setSilenceState({ active: false, category: null, duration: 0 });\n        setSpeakerTransitions(0);\n        setDominantSpeaker(null);\n        setConversationInsights({});\n        setRecentSpeakerSequence([]);\n        \n        console.log('Enhanced meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Failed to start enhanced meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting enhanced meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the enhanced backend server is running.');\n    }\n  };\n\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        setSpeakerActivity({});\n        setSilenceState({ active: false, category: null, duration: 0 });\n        console.log('Enhanced meeting stopped successfully');\n      } else {\n        console.error('Failed to stop enhanced meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping enhanced meeting:', error);\n    }\n  };\n\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    \n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    \n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ items }),\n      });\n      \n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n\n  const dismissPrompt = (index) => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const formatTimeDetailed = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    \n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getConnectionStatusIcon = () => {\n    switch (connectionQuality) {\n      case 'good': return '🟢';\n      case 'fair': return '🟡';\n      case 'poor': return '🔴';\n      default: return '⚫';\n    }\n  };\n\n  const getConnectionStatusText = () => {\n    const base = isConnected ? 'Connected' : 'Disconnected';\n    if (isConnected && isRecording) {\n      return `${base} (${connectionQuality})`;\n    }\n    return base;\n  };\n\n  // NEW: Get conversation momentum indicator\n  const getMomentumIndicator = () => {\n    if (conversationMomentum > 0.7) return { text: 'High Energy', icon: '⚡', color: '#10B981' };\n    if (conversationMomentum > 0.4) return { text: 'Active', icon: '🎯', color: '#3B82F6' };\n    if (conversationMomentum > 0.2) return { text: 'Moderate', icon: '💭', color: '#F59E0B' };\n    return { text: 'Quiet', icon: '😴', color: '#6B7280' };\n  };\n\n  // NEW: Get silence category display\n  const getSilenceDisplay = () => {\n    if (!silenceState.active) return null;\n    \n    const categories = {\n      brief_pause: { text: 'Brief Pause', color: '#10B981' },\n      natural_pause: { text: 'Natural Break', color: '#3B82F6' },\n      long_pause: { text: 'Long Pause', color: '#F59E0B' },\n      extended_silence: { text: 'Extended Silence', color: '#EF4444' }\n    };\n    \n    return categories[silenceState.category] || { text: 'Silence', color: '#6B7280' };\n  };\n\n  // Enhanced chart data with confidence scoring\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [\n      {\n        label: 'Speaking Time (seconds)',\n        data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n        backgroundColor: speakerData.map((speaker, index) => {\n          const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];\n          const baseColor = colors[index % colors.length];\n          // Adjust opacity based on confidence score\n          const opacity = Math.max(0.5, (speaker.confidence_score || 1.0));\n          return speaker.is_speaking ? baseColor : baseColor + Math.round(opacity * 255).toString(16).padStart(2, '0');\n        }),\n        borderColor: speakerData.map((speaker, index) => {\n          const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED', '#DB2777', '#0891B2'];\n          return colors[index % colors.length];\n        }),\n        borderWidth: speakerData.map(speaker => speaker.is_speaking ? 3 : 1),\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Enhanced Real-Time Speaking Analysis',\n        font: {\n          size: 18,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          afterLabel: function(context) {\n            const speaker = speakerData[context.dataIndex];\n            const lines = [];\n            if (speaker.confidence_score) {\n              lines.push(`Confidence: ${Math.round(speaker.confidence_score * 100)}%`);\n            }\n            if (speaker.avg_speaking_duration) {\n              lines.push(`Avg Duration: ${speaker.avg_speaking_duration.toFixed(1)}s`);\n            }\n            if (speaker.speech_segments) {\n              lines.push(`Segments: ${speaker.speech_segments}`);\n            }\n            return lines;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)',\n        },\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers',\n        },\n      },\n    },\n    animation: {\n      duration: 300,\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>🎤 Enhanced Real-Time Meeting Assistant v{backendVersion}</h1>\n        <div className=\"header-info\">\n          <div className=\"connection-status\">\n            <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'} ${connectionQuality}`}>\n              {getConnectionStatusIcon()} {getConnectionStatusText()}\n            </span>\n          </div>\n          {isRecording && (\n            <div className=\"performance-stats\">\n              <span className=\"message-count\">Messages: {messageCount}</span>\n              <span className=\"conversation-momentum\" style={{ color: getMomentumIndicator().color }}>\n                {getMomentumIndicator().icon} {getMomentumIndicator().text}\n              </span>\n            </div>\n          )}\n        </div>\n      </header>\n\n      <main className=\"main-content\">\n        {/* Enhanced Control Panel */}\n        <div className=\"control-panel\">\n          <div className=\"meeting-controls\">\n            <button\n              onClick={isRecording ? stopMeeting : startMeeting}\n              className={`control-button ${isRecording ? 'stop' : 'start'}`}\n              disabled={!isConnected}\n            >\n              {isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'}\n            </button>\n            \n            <div className=\"meeting-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-label\">Duration:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(meetingDuration)}</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Speaking:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(totalSpeakingTime)}</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Silence:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(silenceTime)}</span>\n              </div>\n              {/* NEW: Enhanced stats */}\n              {speakerTransitions > 0 && (\n                <div className=\"stat\">\n                  <span className=\"stat-label\">Transitions:</span>\n                  <span className=\"stat-value\">{speakerTransitions}</span>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Enhanced Real-time Speaker Status */}\n          {isRecording && (\n            <div className=\"current-speaker-status\">\n              <h3>🎙️ Enhanced Live Audio Status</h3>\n              <div className={`speaker-indicator ${currentSpeaker ? 'active' : 'inactive'}`}>\n                {currentSpeaker ? (\n                  <div className=\"speaking-animation\">\n                    <div className=\"audio-visualizer\">\n                      <div className=\"bar\"></div>\n                      <div className=\"bar\"></div>\n                      <div className=\"bar\"></div>\n                      <div className=\"bar\"></div>\n                    </div>\n                    <div className=\"speaker-info\">\n                      <span className=\"speaker-text\">{currentSpeaker}</span>\n                      <span className=\"status-text\">is speaking...</span>\n                      {/* NEW: Show speaker confidence if available */}\n                      {speakerData.find(s => s.speaker_id === currentSpeaker)?.confidence_score && (\n                        <span className=\"confidence-indicator\">\n                          {Math.round(speakerData.find(s => s.speaker_id === currentSpeaker).confidence_score * 100)}% confident\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"listening-state\">\n                    <div className=\"listening-icon\">👂</div>\n                    <span className=\"inactive-text\">\n                      {silenceState.active ? (\n                        <span style={{ color: getSilenceDisplay()?.color }}>\n                          {getSilenceDisplay()?.text} {silenceState.duration > 0 && `(${silenceState.duration.toFixed(1)}s)`}\n                        </span>\n                      ) : (\n                        'Listening for speech...'\n                      )}\n                    </span>\n                  </div>\n                )}\n              </div>\n              \n              {/* Enhanced conversation flow display */}\n              {recentSpeakerSequence.length > 0 && (\n                <div className=\"conversation-flow\">\n                  <h4>Recent Speaker Flow</h4>\n                  <div className=\"speaker-sequence\">\n                    {recentSpeakerSequence.map((speaker, index) => (\n                      <span key={index} className={`sequence-item ${speaker === currentSpeaker ? 'current' : ''}`}>\n                        {speaker}\n                        {index < recentSpeakerSequence.length - 1 && <span className=\"arrow\">→</span>}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              )}\n              \n              {/* Speaker activity history with enhanced info */}\n              {Object.keys(speakerActivity).length > 0 && (\n                <div className=\"speaker-activity-history\">\n                  <h4>Recent Activity</h4>\n                  <div className=\"activity-list\">\n                    {Object.entries(speakerActivity)\n                      .sort(([,a], [,b]) => (b.last_timestamp || 0) - (a.last_timestamp || 0))\n                      .slice(0, 3)\n                      .map(([speakerId, activity]) => {\n                        const speakerInfo = speakerData.find(s => s.speaker_id === speakerId);\n                        return (\n                          <div key={speakerId} className={`activity-item ${activity.is_active ? 'active' : 'inactive'}`}>\n                            <span className=\"speaker-name\">{speakerId}</span>\n                            <span className=\"activity-status\">\n                              {activity.is_active ? 'Speaking' : 'Silent'}\n                            </span>\n                            <span className=\"activity-time\">\n                              {new Date((activity.last_timestamp || 0) * 1000).toLocaleTimeString()}\n                            </span>\n                            {/* NEW: Show confidence score in activity */}\n                            {speakerInfo?.confidence_score && (\n                              <span className=\"activity-confidence\">\n                                {Math.round(speakerInfo.confidence_score * 100)}%\n                              </span>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n              )}\n\n              {/* NEW: Conversation insights panel */}\n              {Object.keys(conversationInsights).length > 0 && (\n                <div className=\"conversation-insights\">\n                  <h4>Conversation Insights</h4>\n                  <div className=\"insights-grid\">\n                    {conversationInsights.meeting_pace && (\n                      <div className=\"insight\">\n                        <span className=\"insight-label\">Pace:</span>\n                        <span className={`insight-value pace-${conversationInsights.meeting_pace}`}>\n                          {conversationInsights.meeting_pace}\n                        </span>\n                      </div>\n                    )}\n                    {conversationInsights.most_active_speaker && (\n                      <div className=\"insight\">\n                        <span className=\"insight-label\">Most Active:</span>\n                        <span className=\"insight-value\">{conversationInsights.most_active_speaker}</span>\n                      </div>\n                    )}\n                    {conversationInsights.total_transitions !== undefined && (\n                      <div className=\"insight\">\n                        <span className=\"insight-label\">Transitions:</span>\n                        <span className=\"insight-value\">{conversationInsights.total_transitions}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"agenda-section\">\n            <h3>Meeting Agenda</h3>\n            <textarea\n              value={agenda}\n              onChange={(e) => setAgenda(e.target.value)}\n              placeholder=\"Enter agenda items (one per line)\"\n              className=\"agenda-input\"\n              rows=\"4\"\n            />\n            <button onClick={setMeetingAgenda} className=\"set-agenda-button\">\n              Set Agenda\n            </button>\n            {agendaItems.length > 0 && (\n              <div className=\"agenda-items\">\n                <h4>Current Agenda:</h4>\n                <ul>\n                  {agendaItems.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Enhanced Real-time Transcription */}\n        {isRecording && (\n          <div className=\"transcription-section\">\n            <div className=\"transcription-header\">\n              <h3>📝 Enhanced Live Transcription</h3>\n              <div className=\"transcription-stats\">\n                <span className=\"transcript-count\">{transcriptions.length} messages</span>\n                {conversationMomentum > 0 && (\n                  <span className=\"momentum-indicator\" style={{ color: getMomentumIndicator().color }}>\n                    {getMomentumIndicator().icon} {getMomentumIndicator().text}\n                  </span>\n                )}\n                {transcriptions.length > 0 && (\n                  <button \n                    className=\"clear-transcripts\"\n                    onClick={() => setTranscriptions([])}\n                  >\n                    Clear\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"transcription-container\" ref={transcriptionRef}>\n              {transcriptions.length === 0 ? (\n                <div className=\"no-transcription\">\n                  <div className=\"waiting-indicator\">\n                    <div className=\"pulse-ring\"></div>\n                    <span>Enhanced voice detection active...</span>\n                  </div>\n                </div>\n              ) : (\n                transcriptions.map((transcription, index) => (\n                  <div key={transcription.id} className=\"transcription-item\">\n                    <div className=\"transcription-header-item\">\n                      <span className=\"speaker-name\">{transcription.speaker_id}</span>\n                      <div className=\"transcription-meta\">\n                        <span className=\"transcription-time\">{transcription.time}</span>\n                        {transcription.confidence && (\n                          <span className={`confidence-score ${transcription.confidence > 0.8 ? 'high' : transcription.confidence > 0.6 ? 'medium' : 'low'}`}>\n                            {Math.round(transcription.confidence * 100)}%\n                          </span>\n                        )}\n                        {transcription.word_count > 0 && (\n                          <span className=\"word-count\">{transcription.word_count} words</span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"transcription-text\">{transcription.text}</div>\n                    {/* Show conversation flow context for recent messages */}\n                    {index === transcriptions.length - 1 && transcription.conversation_momentum !== undefined && (\n                      <div className=\"transcription-context\">\n                        <span className=\"momentum-context\" style={{ color: getMomentumIndicator().color }}>\n                          Momentum: {getMomentumIndicator().text}\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Prompts Section */}\n        {prompts.length > 0 && (\n          <div className=\"prompts-section\">\n            <h3>📋 Facilitator Prompts</h3>\n            {prompts.map((prompt, index) => (\n              <div key={index} className={`prompt ${prompt.prompt_type}`}>\n                <div className=\"prompt-content\">\n                  <strong>{prompt.prompt_type.replace('_', ' ').toUpperCase()}:</strong>\n                  <p>{prompt.message}</p>\n                </div>\n                <button\n                  onClick={() => dismissPrompt(index)}\n                  className=\"dismiss-button\"\n                >\n                  ✕\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Enhanced Speaking Time Visualization */}\n        <div className=\"chart-section\">\n          <div className=\"chart-container\">\n            {speakerData.length > 0 ? (\n              <div className=\"chart-with-stats\">\n                <div className=\"chart-wrapper\">\n                  <Bar data={chartData} options={chartOptions} />\n                </div>\n                <div className=\"speaker-stats fade-in\">\n                  <h3>📊 Enhanced Real-time Speaker Analytics</h3>\n                  <div className=\"stats-grid\">\n                    {speakerData.map((speaker, index) => (\n                      <div \n                        key={speaker.speaker_id} \n                        className={`speaker-stat ${speaker.is_speaking ? 'currently-speaking' : ''} ${speaker.speaker_id === dominantSpeaker ? 'dominant-speaker' : ''}`}\n                        style={{\n                          animationDelay: `${index * 0.1}s`\n                        }}\n                      >\n                        <div className=\"speaker-info\">\n                          <div className=\"speaker-name-container\">\n                            <span className=\"speaker-name\">\n                              {speaker.speaker_id}\n                              {speaker.is_speaking && (\n                                <span className=\"speaking-badge animate-pulse\">\n                                  🎤 Live\n                                </span>\n                              )}\n                              {speaker.speaker_id === dominantSpeaker && (\n                                <span className=\"dominant-badge\">\n                                  👑 Most Active\n                                </span>\n                              )}\n                            </span>\n                            <div className=\"speaker-details\">\n                              {speaker.speech_segments > 0 && (\n                                <span className=\"segment-count\">\n                                  {speaker.speech_segments} segments\n                                </span>\n                              )}\n                              {speaker.confidence_score && (\n                                <span className={`confidence-indicator ${speaker.confidence_score > 0.8 ? 'high' : speaker.confidence_score > 0.6 ? 'medium' : 'low'}`}>\n                                  {Math.round(speaker.confidence_score * 100)}% ID confidence\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"speaker-metrics\">\n                            <span className=\"speaker-time\">\n                              {formatTimeDetailed(speaker.talk_time_in_seconds)}\n                            </span>\n                            <span className=\"speaker-percentage\">\n                              {speaker.percentage.toFixed(1)}%\n                            </span>\n                            {speaker.avg_speaking_duration > 0 && (\n                              <span className=\"avg-duration\">\n                                Avg: {speaker.avg_speaking_duration.toFixed(1)}s\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"progress-bar\">\n                          <div\n                            className={`progress-fill ${speaker.is_speaking ? 'active-speaker' : ''}`}\n                            style={{\n                              width: `${Math.max(speaker.percentage, 2)}%`,\n                              backgroundColor: chartData.datasets[0].backgroundColor[index],\n                            }}\n                          />\n                        </div>\n                        {/* Enhanced audio characteristics display */}\n                        {(speaker.avg_pitch || speaker.avg_energy) && (\n                          <div className=\"audio-characteristics\">\n                            {speaker.avg_pitch && (\n                              <span className=\"pitch-indicator\">\n                                🎵 {speaker.avg_pitch.toFixed(0)}Hz\n                              </span>\n                            )}\n                            {speaker.avg_energy && (\n                              <span className=\"energy-indicator\">\n                                ⚡ {(speaker.avg_energy * 1000).toFixed(1)}\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {/* Enhanced meeting summary stats */}\n                  <div className=\"meeting-summary\">\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Active Speaking</span>\n                      <span className=\"summary-value\">\n                        {((totalSpeakingTime / Math.max(meetingDuration, 1)) * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Silence</span>\n                      <span className=\"summary-value\">\n                        {((silenceTime / Math.max(meetingDuration, 1)) * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Participants</span>\n                      <span className=\"summary-value\">{speakerData.length}</span>\n                    </div>\n                    {speakerTransitions > 0 && (\n                      <div className=\"summary-stat\">\n                        <span className=\"summary-label\">Speaker Changes</span>\n                        <span className=\"summary-value\">{speakerTransitions}</span>\n                      </div>\n                    )}\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Conversation Energy</span>\n                      <span className=\"summary-value\" style={{ color: getMomentumIndicator().color }}>\n                        {getMomentumIndicator().text}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-data\">\n                <h3>🎯 Ready for Enhanced Analysis</h3>\n                <p>\n                  {isRecording\n                    ? 'Advanced AI-powered voice detection is active. Start speaking to see instant analysis with enhanced speaker identification and conversation flow tracking!'\n                    : 'Click \"Start Meeting\" to begin enhanced real-time speech analysis with comprehensive voice embeddings, conversation context awareness, and improved multi-speaker handling.'}\n                </p>\n                {!isRecording && (\n                  <div className=\"feature-preview\">\n                    <div className=\"preview-item\">⚡ Enhanced voice activity detection with energy backup</div>\n                    <div className=\"preview-item\">🧠 Comprehensive voice feature extraction (MFCC, spectral, chroma)</div>\n                    <div className=\"preview-item\">🔄 Conversation flow and speaker transition tracking</div>\n                    <div className=\"preview-item\">📊 Real-time confidence scoring and speaker profiling</div>\n                    <div className=\"preview-item\">💬 Conversation momentum and context awareness</div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Enhanced Instructions */}\n        <div className=\"instructions\">\n          <h3>📖 Enhanced Multi-Speaker Features</h3>\n          <div className=\"feature-list\">\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">⚡</span>\n              <div className=\"feature-content\">\n                <strong>Multi-Level Voice Detection</strong>\n                <span>Enhanced VAD with WebRTC + energy-based backup for better overlap handling</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🧠</span>\n              <div className=\"feature-content\">\n                <strong>Comprehensive Voice Analysis</strong>\n                <span>MFCC, spectral, chroma, and energy features for robust speaker identification</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🔄</span>\n              <div className=\"feature-content\">\n                <strong>Conversation Flow Tracking</strong>\n                <span>Learns speaker transition patterns (A→B→A) and conversation momentum</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">📊</span>\n              <div className=\"feature-content\">\n                <strong>Adaptive Speaker Recognition</strong>\n                <span>Dynamic similarity thresholds and confidence scoring that improve over time</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🎤</span>\n              <div className=\"feature-content\">\n                <strong>Context-Aware Processing</strong>\n                <span>Uses conversation context to predict likely next speakers and improve accuracy</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">💬</span>\n              <div className=\"feature-content\">\n                <strong>Smart Conversation Analysis</strong>\n                <span>Real-time momentum tracking, silence categorization, and meeting pace analysis</span>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"version-info\">\n            <h4>🔧 Backend Version: {backendVersion}</h4>\n            <p>\n              This enhanced version provides significantly improved handling of multi-speaker scenarios,\n              especially the common pattern where Speaker 1 talks, then Speaker 2 responds, and then Speaker 1 replies back.\n              The system learns from conversation patterns and becomes more accurate over time.\n            </p>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,mBAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC6B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACuC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACyC,cAAc,EAAEC,iBAAiB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6C,eAAe,EAAEC,kBAAkB,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC;IACjDiD,gBAAgB,EAAE,CAAC;IACnBC,mBAAmB,EAAE,CAAC;IACtBC,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACsD,YAAY,EAAEC,eAAe,CAAC,GAAGvD,QAAQ,CAAC;IAAEwD,MAAM,EAAE,KAAK;IAAEC,QAAQ,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC;EAChG,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAAC6D,eAAe,EAAEC,kBAAkB,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC+D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhE,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpE,MAAM,CAACiE,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGlE,QAAQ,CAAC,EAAE,CAAC;;EAEtE;EACA,MAAM,CAACmE,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpE,QAAQ,CAAC,MAAM,CAAC;EAClE,MAAM,CAACqE,eAAe,EAAEC,kBAAkB,CAAC,GAAGtE,QAAQ,CAACuE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAClE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1E,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAAC2E,cAAc,EAAEC,iBAAiB,CAAC,GAAG5E,QAAQ,CAAC,OAAO,CAAC;EAE7D,MAAM6E,EAAE,GAAG3E,MAAM,CAAC,IAAI,CAAC;EACvB,MAAM4E,mBAAmB,GAAG5E,MAAM,CAAC,IAAI,CAAC;EACxC,MAAM6E,eAAe,GAAG7E,MAAM,CAAC,KAAK,CAAC;EACrC,MAAM8E,gBAAgB,GAAG9E,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM+E,mBAAmB,GAAG/E,MAAM,CAAC,IAAI,CAAC;EACxC,MAAMgF,gBAAgB,GAAGhF,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMiF,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;;EAE/E;EACArF,SAAS,CAAC,MAAM;IACdgF,mBAAmB,CAACM,OAAO,GAAGC,WAAW,CAAC,MAAM;MAC9C,MAAMhB,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB,MAAMiB,oBAAoB,GAAGjB,GAAG,GAAGH,eAAe;MAElD,IAAI9C,WAAW,IAAIkE,oBAAoB,GAAG,IAAI,EAAE;QAC9CrB,oBAAoB,CAAC,MAAM,CAAC;MAC9B,CAAC,MAAM,IAAI7C,WAAW,IAAIkE,oBAAoB,GAAG,IAAI,EAAE;QACrDrB,oBAAoB,CAAC,MAAM,CAAC;MAC9B,CAAC,MAAM;QACLA,oBAAoB,CAAC,MAAM,CAAC;MAC9B;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACX,IAAIa,mBAAmB,CAACM,OAAO,EAAE;QAC/BG,aAAa,CAACT,mBAAmB,CAACM,OAAO,CAAC;MAC5C;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,eAAe,EAAE9C,WAAW,CAAC,CAAC;;EAElC;EACAtB,SAAS,CAAC,MAAM;IACd,IAAIsB,WAAW,EAAE;MACf2D,gBAAgB,CAACK,OAAO,GAAGC,WAAW,CAAC,YAAY;QACjD,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,UAAU,oCAAoC,CAAC;UAC/E,IAAIQ,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YACtC/B,uBAAuB,CAAC8B,QAAQ,CAAC;YACjC,IAAIA,QAAQ,CAACE,uBAAuB,EAAE;cACpC9B,wBAAwB,CAAC4B,QAAQ,CAACE,uBAAuB,CAAC;YAC5D;UACF;QACF,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACC,IAAI,CAAC,wCAAwC,EAAEF,KAAK,CAAC;QAC/D;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IAEA,OAAO,MAAM;MACX,IAAIf,gBAAgB,CAACK,OAAO,EAAE;QAC5BG,aAAa,CAACR,gBAAgB,CAACK,OAAO,CAAC;MACzC;IACF,CAAC;EACH,CAAC,EAAE,CAAChE,WAAW,EAAE4D,UAAU,CAAC,CAAC;EAE7BlF,SAAS,CAAC,MAAM;IACdmG,kBAAkB,CAAC,CAAC;IAEpB,OAAO,MAAM;MACXrB,eAAe,CAACQ,OAAO,GAAG,KAAK;MAC/B,IAAIT,mBAAmB,CAACS,OAAO,EAAE;QAC/Bc,YAAY,CAACvB,mBAAmB,CAACS,OAAO,CAAC;QACzCT,mBAAmB,CAACS,OAAO,GAAG,IAAI;MACpC;MACA,IAAIN,mBAAmB,CAACM,OAAO,EAAE;QAC/BG,aAAa,CAACT,mBAAmB,CAACM,OAAO,CAAC;MAC5C;MACA,IAAIL,gBAAgB,CAACK,OAAO,EAAE;QAC5BG,aAAa,CAACR,gBAAgB,CAACK,OAAO,CAAC;MACzC;MACA,IAAIV,EAAE,CAACU,OAAO,EAAE;QACdV,EAAE,CAACU,OAAO,CAACe,MAAM,GAAG,IAAI;QACxBzB,EAAE,CAACU,OAAO,CAACgB,SAAS,GAAG,IAAI;QAC3B1B,EAAE,CAACU,OAAO,CAACiB,OAAO,GAAG,IAAI;QACzB3B,EAAE,CAACU,OAAO,CAACkB,OAAO,GAAG,IAAI;QAEzB,IAAI5B,EAAE,CAACU,OAAO,CAACmB,UAAU,KAAKC,SAAS,CAACC,IAAI,IAAI/B,EAAE,CAACU,OAAO,CAACmB,UAAU,KAAKC,SAAS,CAACE,UAAU,EAAE;UAC9FhC,EAAE,CAACU,OAAO,CAACuB,KAAK,CAAC,CAAC;QACpB;QACAjC,EAAE,CAACU,OAAO,GAAG,IAAI;MACnB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtF,SAAS,CAAC,MAAM;IACd,IAAI+E,gBAAgB,CAACO,OAAO,EAAE;MAC5BP,gBAAgB,CAACO,OAAO,CAACwB,SAAS,GAAG/B,gBAAgB,CAACO,OAAO,CAACyB,YAAY;IAC5E;EACF,CAAC,EAAE,CAACvE,cAAc,CAAC,CAAC;EAEpB,MAAM2D,kBAAkB,GAAGjG,WAAW,CAAC,MAAM;IAC3C,IAAI4E,eAAe,CAACQ,OAAO,IAAKV,EAAE,CAACU,OAAO,IAAIV,EAAE,CAACU,OAAO,CAACmB,UAAU,KAAKC,SAAS,CAACE,UAAW,EAAE;MAC7F;IACF;IAEA,IAAIhC,EAAE,CAACU,OAAO,EAAE;MACdV,EAAE,CAACU,OAAO,CAACe,MAAM,GAAG,IAAI;MACxBzB,EAAE,CAACU,OAAO,CAACgB,SAAS,GAAG,IAAI;MAC3B1B,EAAE,CAACU,OAAO,CAACiB,OAAO,GAAG,IAAI;MACzB3B,EAAE,CAACU,OAAO,CAACkB,OAAO,GAAG,IAAI;MACzB,IAAI5B,EAAE,CAACU,OAAO,CAACmB,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;QAC5C/B,EAAE,CAACU,OAAO,CAACuB,KAAK,CAAC,CAAC;MACpB;MACAjC,EAAE,CAACU,OAAO,GAAG,IAAI;IACnB;IAEA,MAAM0B,KAAK,GAAG9B,UAAU,CAAC+B,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,SAAS;IAC1DnC,eAAe,CAACQ,OAAO,GAAG,IAAI;IAE9B,IAAI;MACFW,OAAO,CAACiB,GAAG,CAAC,mCAAmC,EAAEF,KAAK,CAAC;MACvDpC,EAAE,CAACU,OAAO,GAAG,IAAIoB,SAAS,CAACM,KAAK,CAAC;MAEjCpC,EAAE,CAACU,OAAO,CAACe,MAAM,GAAG,MAAM;QACxBJ,OAAO,CAACiB,GAAG,CAAC,iCAAiC,CAAC;QAC9CpC,eAAe,CAACQ,OAAO,GAAG,KAAK;QAC/BjE,cAAc,CAAC,IAAI,CAAC;QACpB8C,oBAAoB,CAAC,MAAM,CAAC;QAE5B,IAAIS,EAAE,CAACU,OAAO,IAAIV,EAAE,CAACU,OAAO,CAACmB,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;UAC1D/B,EAAE,CAACU,OAAO,CAAC6B,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAE;UAAO,CAAC,CAAC,CAAC;QACnD;MACF,CAAC;MAED1C,EAAE,CAACU,OAAO,CAACgB,SAAS,GAAIiB,KAAK,IAAK;QAChC,IAAI;UACF,MAAMC,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;UACnCnD,kBAAkB,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;UAC9BE,eAAe,CAACiD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;UACjCC,sBAAsB,CAACH,IAAI,CAAC;QAC9B,CAAC,CAAC,OAAOxB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;MACF,CAAC;MAEDpB,EAAE,CAACU,OAAO,CAACiB,OAAO,GAAIgB,KAAK,IAAK;QAC9BtB,OAAO,CAACiB,GAAG,CAAC,sCAAsC,EAAEK,KAAK,CAACK,IAAI,EAAEL,KAAK,CAACM,MAAM,CAAC;QAC7E/C,eAAe,CAACQ,OAAO,GAAG,KAAK;QAC/BjE,cAAc,CAAC,KAAK,CAAC;QACrB8C,oBAAoB,CAAC,MAAM,CAAC;QAE5B,IAAIoD,KAAK,CAACK,IAAI,KAAK,IAAI,IAAIL,KAAK,CAACK,IAAI,KAAK,IAAI,EAAE;UAC9C,IAAI/C,mBAAmB,CAACS,OAAO,EAAE;YAC/Bc,YAAY,CAACvB,mBAAmB,CAACS,OAAO,CAAC;UAC3C;UAEAT,mBAAmB,CAACS,OAAO,GAAGwC,UAAU,CAAC,MAAM;YAC7C3B,kBAAkB,CAAC,CAAC;UACtB,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MAEDvB,EAAE,CAACU,OAAO,CAACkB,OAAO,GAAIR,KAAK,IAAK;QAC9BC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDlB,eAAe,CAACQ,OAAO,GAAG,KAAK;QAC/BjE,cAAc,CAAC,KAAK,CAAC;QACrB8C,oBAAoB,CAAC,MAAM,CAAC;MAC9B,CAAC;IAEH,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACvElB,eAAe,CAACQ,OAAO,GAAG,KAAK;MAC/BjE,cAAc,CAAC,KAAK,CAAC;MACrB8C,oBAAoB,CAAC,MAAM,CAAC;MAE5B,IAAIU,mBAAmB,CAACS,OAAO,EAAE;QAC/Bc,YAAY,CAACvB,mBAAmB,CAACS,OAAO,CAAC;MAC3C;MACAT,mBAAmB,CAACS,OAAO,GAAGwC,UAAU,CAAC,MAAM;QAC7C3B,kBAAkB,CAAC,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACjB,UAAU,CAAC,CAAC;EAEhB,MAAMyC,sBAAsB,GAAGzH,WAAW,CAAEsH,IAAI,IAAK;IACnD,QAAQA,IAAI,CAACF,IAAI;MACf,KAAK,wBAAwB;QAC3B;QACA,IAAIE,IAAI,CAACO,OAAO,EAAE;UAChBpD,iBAAiB,CAAC6C,IAAI,CAACO,OAAO,CAAC;QACjC;QACA9B,OAAO,CAACiB,GAAG,CAAC,kCAAkC,EAAEM,IAAI,CAACQ,OAAO,CAAC;QAC7D;MAEF,KAAK,kBAAkB;QACrBC,qBAAqB,CAACT,IAAI,CAAC;QAC3B;MAEF,KAAK,eAAe;QAClBU,0BAA0B,CAACV,IAAI,CAAC;QAChC;MAEF,KAAK,eAAe;QAClBW,2BAA2B,CAACX,IAAI,CAAC;QACjC;MAEF,KAAK,cAAc;QACjBY,yBAAyB,CAACZ,IAAI,CAAC;QAC/B;MAEF,KAAK,SAAS;QACZ;QACAa,kBAAkB,CAACb,IAAI,CAAC;QACxB;MAEF,KAAK,QAAQ;QACXvF,UAAU,CAACyF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEF,IAAI,CAAC,CAAC;QACnC;MAEF;QACEvB,OAAO,CAACiB,GAAG,CAAC,uBAAuB,EAAEM,IAAI,CAACF,IAAI,EAAEE,IAAI,CAAC;IACzD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,qBAAqB,GAAG/H,WAAW,CAAEsH,IAAI,IAAK;IAClD,MAAM;MAAEc,UAAU;MAAEC,MAAM;MAAEC,SAAS;MAAEC;IAAsB,CAAC,GAAGjB,IAAI;IAErE7E,eAAe,CAAC;MAAE2F,UAAU;MAAEC,MAAM;MAAEC;IAAU,CAAC,CAAC;;IAElD;IACA,IAAIC,qBAAqB,KAAKC,SAAS,EAAE;MACvCtF,uBAAuB,CAACqF,qBAAqB,CAAC;IAChD;;IAEA;IACA5F,kBAAkB,CAAC6E,IAAI,KAAK;MAC1B,GAAGA,IAAI;MACP,CAACY,UAAU,GAAG;QACZ,GAAGZ,IAAI,CAACY,UAAU,CAAC;QACnBK,WAAW,EAAEJ,MAAM;QACnBK,cAAc,EAAEJ,SAAS;QACzBK,SAAS,EAAEN,MAAM,KAAK;MACxB;IACF,CAAC,CAAC,CAAC;IAEH,IAAIA,MAAM,KAAK,SAAS,EAAE;MACxBhG,iBAAiB,CAAC+F,UAAU,CAAC;IAC/B,CAAC,MAAM,IAAIC,MAAM,KAAK,SAAS,IAAIjG,cAAc,KAAKgG,UAAU,EAAE;MAChE/F,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACD,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAM4F,0BAA0B,GAAGhI,WAAW,CAAEsH,IAAI,IAAK;IACvD,MAAM;MACJsB,QAAQ;MACR9F,gBAAgB;MAChBC,mBAAmB;MACnBC,YAAY;MACZuF,qBAAqB;MACrBM,yBAAyB;MACzBC;IACF,CAAC,GAAGxB,IAAI;;IAER;IACA,MAAMyB,iBAAiB,GAAGH,QAAQ,CAACI,GAAG,CAACC,OAAO,KAAK;MACjDb,UAAU,EAAEa,OAAO,CAACb,UAAU;MAC9Bc,oBAAoB,EAAED,OAAO,CAACE,iBAAiB;MAC/CC,UAAU,EAAEH,OAAO,CAACG,UAAU;MAC9BC,WAAW,EAAEJ,OAAO,CAACI,WAAW;MAChCC,eAAe,EAAEL,OAAO,CAACK,eAAe,IAAI,CAAC;MAC7CC,gBAAgB,EAAEN,OAAO,CAACM,gBAAgB,IAAI,GAAG;MACjDC,qBAAqB,EAAEP,OAAO,CAACO,qBAAqB,IAAI,CAAC;MACzDC,SAAS,EAAER,OAAO,CAACQ,SAAS;MAC5BC,UAAU,EAAET,OAAO,CAACS;IACtB,CAAC,CAAC,CAAC;IAEHnI,cAAc,CAACwH,iBAAiB,CAAC;IACjCtH,kBAAkB,CAACqB,gBAAgB,CAAC;IACpCnB,oBAAoB,CAACoB,mBAAmB,CAAC;IACzClB,cAAc,CAACmB,YAAY,CAAC;;IAE5B;IACA,IAAIuF,qBAAqB,KAAKC,SAAS,EAAE;MACvCtF,uBAAuB,CAACqF,qBAAqB,CAAC;IAChD;IACA,IAAIM,yBAAyB,KAAKL,SAAS,EAAE;MAC3C/E,qBAAqB,CAACoF,yBAAyB,CAAC;IAClD;IACA,IAAIC,gBAAgB,EAAE;MACpBnF,kBAAkB,CAACmF,gBAAgB,CAAC;IACtC;;IAEA;IACAjG,gBAAgB,CAAC;MACfC,gBAAgB;MAChBC,mBAAmB;MACnBC;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMiF,2BAA2B,GAAGjI,WAAW,CAAEsH,IAAI,IAAK;IACxD,MAAM;MACJc,UAAU;MACVuB,IAAI;MACJrB,SAAS;MACTsB,UAAU;MACVC,UAAU;MACVtB,qBAAqB;MACrB1C;IACF,CAAC,GAAGyB,IAAI;IAER/E,iBAAiB,CAACiF,IAAI,IAAI;MACxB,MAAMsC,gBAAgB,GAAG;QACvBC,EAAE,EAAE,GAAGzB,SAAS,IAAI0B,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE;QACnC7B,UAAU;QACVuB,IAAI;QACJrB,SAAS;QACT4B,IAAI,EAAE,IAAI9F,IAAI,CAACkE,SAAS,GAAG,IAAI,CAAC,CAAC6B,kBAAkB,CAAC,CAAC;QACrDP,UAAU,EAAEA,UAAU,IAAI,GAAG;QAC7BC,UAAU,EAAEA,UAAU,IAAI,CAAC;QAC3BtB,qBAAqB,EAAEA,qBAAqB,IAAI;MAClD,CAAC;;MAED;MACA,MAAM6B,OAAO,GAAG,CAAC,GAAG5C,IAAI,EAAEsC,gBAAgB,CAAC;MAC3C,OAAOM,OAAO,CAACC,KAAK,CAAC,CAAC,GAAG,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,IAAI9B,qBAAqB,KAAKC,SAAS,EAAE;MACvCtF,uBAAuB,CAACqF,qBAAqB,CAAC;IAChD;;IAEA;IACA,IAAI1C,uBAAuB,EAAE;MAC3B9B,wBAAwB,CAAC8B,uBAAuB,CAAC;IACnD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMqC,yBAAyB,GAAGlI,WAAW,CAAEsH,IAAI,IAAK;IACtD,MAAM;MACJxE,gBAAgB;MAChBwH,eAAe;MACfC,cAAc;MACdhC,qBAAqB;MACrBiC;IACF,CAAC,GAAGlD,IAAI;IAER7F,kBAAkB,CAACqB,gBAAgB,CAAC;IAEpC,IAAIyF,qBAAqB,KAAKC,SAAS,EAAE;MACvCtF,uBAAuB,CAACqF,qBAAqB,CAAC;IAChD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMJ,kBAAkB,GAAGnI,WAAW,CAAEsH,IAAI,IAAK;IAC/C,MAAM;MAAEmD,KAAK;MAAEnC,SAAS;MAAE/E,QAAQ;MAAEmH,gBAAgB;MAAEnC;IAAsB,CAAC,GAAGjB,IAAI;IAEpFlE,eAAe,CAAC;MACdC,MAAM,EAAEoH,KAAK,KAAK,SAAS;MAC3BnH,QAAQ,EAAEoH,gBAAgB,IAAI,IAAI;MAClCnH,QAAQ,EAAEA,QAAQ,IAAI,CAAC;MACvB+E,SAAS,EAAEA;IACb,CAAC,CAAC;IAEF,IAAIC,qBAAqB,KAAKC,SAAS,EAAE;MACvCtF,uBAAuB,CAACqF,qBAAqB,CAAC;IAChD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMnF,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,UAAU,oBAAoB,EAAE;QAC9D4F,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIrF,QAAQ,CAACE,EAAE,EAAE;QACfrE,cAAc,CAAC,IAAI,CAAC;QACpB;QACAU,UAAU,CAAC,EAAE,CAAC;QACdR,cAAc,CAAC,EAAE,CAAC;QAClBE,kBAAkB,CAAC,CAAC,CAAC;QACrBE,oBAAoB,CAAC,CAAC,CAAC;QACvBE,cAAc,CAAC,CAAC,CAAC;QACjBU,iBAAiB,CAAC,EAAE,CAAC;QACrBF,iBAAiB,CAAC,IAAI,CAAC;QACvBI,eAAe,CAAC,IAAI,CAAC;QACrBE,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtBE,gBAAgB,CAAC;UAAEC,gBAAgB,EAAE,CAAC;UAAEC,mBAAmB,EAAE,CAAC;UAAEC,YAAY,EAAE;QAAE,CAAC,CAAC;QAClFuB,eAAe,CAAC,CAAC,CAAC;;QAElB;QACArB,uBAAuB,CAAC,CAAC,CAAC;QAC1BE,eAAe,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,QAAQ,EAAE,IAAI;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;QAC/DE,qBAAqB,CAAC,CAAC,CAAC;QACxBE,kBAAkB,CAAC,IAAI,CAAC;QACxBE,uBAAuB,CAAC,CAAC,CAAC,CAAC;QAC3BE,wBAAwB,CAAC,EAAE,CAAC;QAE5BgC,OAAO,CAACiB,GAAG,CAAC,uCAAuC,CAAC;MACtD,CAAC,MAAM;QACL,MAAM8D,SAAS,GAAG,MAAMtF,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACmF,KAAK,CAAC,OAAO;UAAEjD,OAAO,EAAE;QAAgB,CAAC,CAAC,CAAC;QACnF/B,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEgF,SAAS,CAAC;QAC7DE,KAAK,CAAC,4BAA4BF,SAAS,CAAChD,OAAO,IAAI,yCAAyC,EAAE,CAAC;MACrG;IACF,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDkF,KAAK,CAAC,yGAAyG,CAAC;IAClH;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMzF,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,UAAU,mBAAmB,EAAE;QAC7D4F,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIrF,QAAQ,CAACE,EAAE,EAAE;QACfrE,cAAc,CAAC,KAAK,CAAC;QACrBgB,iBAAiB,CAAC,IAAI,CAAC;QACvBM,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtBS,eAAe,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,QAAQ,EAAE,IAAI;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;QAC/DwC,OAAO,CAACiB,GAAG,CAAC,uCAAuC,CAAC;MACtD,CAAC,MAAM;QACLjB,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMoF,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAAClJ,MAAM,CAACmJ,IAAI,CAAC,CAAC,EAAE;IAEpB,MAAMC,KAAK,GAAGpJ,MAAM,CAACqJ,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC,CAACnC,GAAG,CAACuC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAAC,CAAC,CAAC;IAErF,IAAI;MACF,MAAM3F,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,UAAU,qBAAqB,EAAE;QAC/D4F,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDW,IAAI,EAAEtE,IAAI,CAACC,SAAS,CAAC;UAAEiE;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAI5F,QAAQ,CAACE,EAAE,EAAE;QACfvD,cAAc,CAACiJ,KAAK,CAAC;QACrBrF,OAAO,CAACiB,GAAG,CAAC,yBAAyB,CAAC;MACxC,CAAC,MAAM;QACLjB,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAM2F,aAAa,GAAIC,KAAK,IAAK;IAC/B3J,UAAU,CAACyF,IAAI,IAAIA,IAAI,CAAC8D,MAAM,CAAC,CAACK,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKF,KAAK,CAAC,CAAC;EACxD,CAAC;EAED,MAAMG,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAG/B,IAAI,CAACgC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMG,gBAAgB,GAAGjC,IAAI,CAACgC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACjD,OAAO,GAAGC,OAAO,IAAIE,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACrE,CAAC;EAED,MAAMC,kBAAkB,GAAIN,OAAO,IAAK;IACtC,MAAMO,KAAK,GAAGrC,IAAI,CAACgC,KAAK,CAACF,OAAO,GAAG,IAAI,CAAC;IACxC,MAAMC,OAAO,GAAG/B,IAAI,CAACgC,KAAK,CAAEF,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAMQ,IAAI,GAAGtC,IAAI,CAACgC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IAErC,IAAIO,KAAK,GAAG,CAAC,EAAE;MACb,OAAO,GAAGA,KAAK,IAAIN,OAAO,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIG,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAC9F;IACA,OAAO,GAAGJ,OAAO,IAAIO,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACzD,CAAC;EAED,MAAMI,uBAAuB,GAAGA,CAAA,KAAM;IACpC,QAAQvI,iBAAiB;MACvB,KAAK,MAAM;QAAE,OAAO,IAAI;MACxB,KAAK,MAAM;QAAE,OAAO,IAAI;MACxB,KAAK,MAAM;QAAE,OAAO,IAAI;MACxB;QAAS,OAAO,GAAG;IACrB;EACF,CAAC;EAED,MAAMwI,uBAAuB,GAAGA,CAAA,KAAM;IACpC,MAAMC,IAAI,GAAGvL,WAAW,GAAG,WAAW,GAAG,cAAc;IACvD,IAAIA,WAAW,IAAIE,WAAW,EAAE;MAC9B,OAAO,GAAGqL,IAAI,KAAKzI,iBAAiB,GAAG;IACzC;IACA,OAAOyI,IAAI;EACb,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIzJ,oBAAoB,GAAG,GAAG,EAAE,OAAO;MAAE0G,IAAI,EAAE,aAAa;MAAEgD,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAU,CAAC;IAC3F,IAAI3J,oBAAoB,GAAG,GAAG,EAAE,OAAO;MAAE0G,IAAI,EAAE,QAAQ;MAAEgD,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAU,CAAC;IACvF,IAAI3J,oBAAoB,GAAG,GAAG,EAAE,OAAO;MAAE0G,IAAI,EAAE,UAAU;MAAEgD,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAU,CAAC;IACzF,OAAO;MAAEjD,IAAI,EAAE,OAAO;MAAEgD,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAU,CAAC;EACxD,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAAC1J,YAAY,CAACE,MAAM,EAAE,OAAO,IAAI;IAErC,MAAMyJ,UAAU,GAAG;MACjBC,WAAW,EAAE;QAAEpD,IAAI,EAAE,aAAa;QAAEiD,KAAK,EAAE;MAAU,CAAC;MACtDI,aAAa,EAAE;QAAErD,IAAI,EAAE,eAAe;QAAEiD,KAAK,EAAE;MAAU,CAAC;MAC1DK,UAAU,EAAE;QAAEtD,IAAI,EAAE,YAAY;QAAEiD,KAAK,EAAE;MAAU,CAAC;MACpDM,gBAAgB,EAAE;QAAEvD,IAAI,EAAE,kBAAkB;QAAEiD,KAAK,EAAE;MAAU;IACjE,CAAC;IAED,OAAOE,UAAU,CAAC3J,YAAY,CAACG,QAAQ,CAAC,IAAI;MAAEqG,IAAI,EAAE,SAAS;MAAEiD,KAAK,EAAE;IAAU,CAAC;EACnF,CAAC;;EAED;EACA,MAAMO,SAAS,GAAG;IAChBC,MAAM,EAAE9L,WAAW,CAAC0H,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACb,UAAU,CAAC;IACtDiF,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,yBAAyB;MAChChG,IAAI,EAAEhG,WAAW,CAAC0H,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,oBAAoB,CAAC;MAC9DqE,eAAe,EAAEjM,WAAW,CAAC0H,GAAG,CAAC,CAACC,OAAO,EAAEyC,KAAK,KAAK;QACnD,MAAM8B,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC5F,MAAMC,SAAS,GAAGD,MAAM,CAAC9B,KAAK,GAAG8B,MAAM,CAACE,MAAM,CAAC;QAC/C;QACA,MAAMC,OAAO,GAAG3D,IAAI,CAAC4D,GAAG,CAAC,GAAG,EAAG3E,OAAO,CAACM,gBAAgB,IAAI,GAAI,CAAC;QAChE,OAAON,OAAO,CAACI,WAAW,GAAGoE,SAAS,GAAGA,SAAS,GAAGzD,IAAI,CAAC6D,KAAK,CAACF,OAAO,GAAG,GAAG,CAAC,CAACzB,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC9G,CAAC,CAAC;MACF2B,WAAW,EAAExM,WAAW,CAAC0H,GAAG,CAAC,CAACC,OAAO,EAAEyC,KAAK,KAAK;QAC/C,MAAM8B,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC5F,OAAOA,MAAM,CAAC9B,KAAK,GAAG8B,MAAM,CAACE,MAAM,CAAC;MACtC,CAAC,CAAC;MACFK,WAAW,EAAEzM,WAAW,CAAC0H,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACI,WAAW,GAAG,CAAC,GAAG,CAAC;IACrE,CAAC;EAEL,CAAC;EAED,MAAM2E,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACb5E,IAAI,EAAE,sCAAsC;QAC5C6E,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTC,UAAU,EAAE,SAAAA,CAASC,OAAO,EAAE;YAC5B,MAAM5F,OAAO,GAAG3H,WAAW,CAACuN,OAAO,CAACC,SAAS,CAAC;YAC9C,MAAMC,KAAK,GAAG,EAAE;YAChB,IAAI9F,OAAO,CAACM,gBAAgB,EAAE;cAC5BwF,KAAK,CAACC,IAAI,CAAC,eAAehF,IAAI,CAAC6D,KAAK,CAAC5E,OAAO,CAACM,gBAAgB,GAAG,GAAG,CAAC,GAAG,CAAC;YAC1E;YACA,IAAIN,OAAO,CAACO,qBAAqB,EAAE;cACjCuF,KAAK,CAACC,IAAI,CAAC,iBAAiB/F,OAAO,CAACO,qBAAqB,CAACyF,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1E;YACA,IAAIhG,OAAO,CAACK,eAAe,EAAE;cAC3ByF,KAAK,CAACC,IAAI,CAAC,aAAa/F,OAAO,CAACK,eAAe,EAAE,CAAC;YACpD;YACA,OAAOyF,KAAK;UACd;QACF;MACF;IACF,CAAC;IACDG,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBd,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACb5E,IAAI,EAAE;QACR;MACF,CAAC;MACD0F,CAAC,EAAE;QACDf,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACb5E,IAAI,EAAE;QACR;MACF;IACF,CAAC;IACD2F,SAAS,EAAE;MACT/L,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,oBACE5C,OAAA;IAAK4O,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7O,OAAA;MAAQ4O,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B7O,OAAA;QAAA6O,QAAA,GAAI,qDAAyC,EAAChL,cAAc;MAAA;QAAAiL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClEjP,OAAA;QAAK4O,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B7O,OAAA;UAAK4O,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChC7O,OAAA;YAAM4O,SAAS,EAAE,oBAAoBrO,WAAW,GAAG,WAAW,GAAG,cAAc,IAAI8C,iBAAiB,EAAG;YAAAwL,QAAA,GACpGjD,uBAAuB,CAAC,CAAC,EAAC,GAAC,EAACC,uBAAuB,CAAC,CAAC;UAAA;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EACLxO,WAAW,iBACVT,OAAA;UAAK4O,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC7O,OAAA;YAAM4O,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,YAAU,EAAClL,YAAY;UAAA;YAAAmL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DjP,OAAA;YAAM4O,SAAS,EAAC,uBAAuB;YAACM,KAAK,EAAE;cAAEjD,KAAK,EAAEF,oBAAoB,CAAC,CAAC,CAACE;YAAM,CAAE;YAAA4C,QAAA,GACpF9C,oBAAoB,CAAC,CAAC,CAACC,IAAI,EAAC,GAAC,EAACD,oBAAoB,CAAC,CAAC,CAAC/C,IAAI;UAAA;YAAA8F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETjP,OAAA;MAAM4O,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE5B7O,OAAA;QAAK4O,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B7O,OAAA;UAAK4O,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B7O,OAAA;YACEmP,OAAO,EAAE1O,WAAW,GAAG6J,WAAW,GAAGN,YAAa;YAClD4E,SAAS,EAAE,kBAAkBnO,WAAW,GAAG,MAAM,GAAG,OAAO,EAAG;YAC9D2O,QAAQ,EAAE,CAAC7O,WAAY;YAAAsO,QAAA,EAEtBpO,WAAW,GAAG,iBAAiB,GAAG;UAAkB;YAAAqO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eAETjP,OAAA;YAAK4O,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B7O,OAAA;cAAK4O,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB7O,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7CjP,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEpD,kBAAkB,CAAC5K,eAAe;cAAC;gBAAAiO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtE,CAAC,eACNjP,OAAA;cAAK4O,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB7O,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7CjP,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEpD,kBAAkB,CAAC1K,iBAAiB;cAAC;gBAAA+N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,eACNjP,OAAA;cAAK4O,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB7O,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC5CjP,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEpD,kBAAkB,CAACxK,WAAW;cAAC;gBAAA6N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC,EAELpM,kBAAkB,GAAG,CAAC,iBACrB7C,OAAA;cAAK4O,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnB7O,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChDjP,OAAA;gBAAM4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEhM;cAAkB;gBAAAiM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGLxO,WAAW,iBACVT,OAAA;UAAK4O,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrC7O,OAAA;YAAA6O,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCjP,OAAA;YAAK4O,SAAS,EAAE,qBAAqBnN,cAAc,GAAG,QAAQ,GAAG,UAAU,EAAG;YAAAoN,QAAA,EAC3EpN,cAAc,gBACbzB,OAAA;cAAK4O,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjC7O,OAAA;gBAAK4O,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC/B7O,OAAA;kBAAK4O,SAAS,EAAC;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3BjP,OAAA;kBAAK4O,SAAS,EAAC;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3BjP,OAAA;kBAAK4O,SAAS,EAAC;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3BjP,OAAA;kBAAK4O,SAAS,EAAC;gBAAK;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxB,CAAC,eACNjP,OAAA;gBAAK4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B7O,OAAA;kBAAM4O,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAEpN;gBAAc;kBAAAqN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACtDjP,OAAA;kBAAM4O,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAElD,EAAA7O,iBAAA,GAAAO,WAAW,CAAC0O,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7H,UAAU,KAAKhG,cAAc,CAAC,cAAArB,iBAAA,uBAAtDA,iBAAA,CAAwDwI,gBAAgB,kBACvE5I,OAAA;kBAAM4O,SAAS,EAAC,sBAAsB;kBAAAC,QAAA,GACnCxF,IAAI,CAAC6D,KAAK,CAACvM,WAAW,CAAC0O,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7H,UAAU,KAAKhG,cAAc,CAAC,CAACmH,gBAAgB,GAAG,GAAG,CAAC,EAAC,aAC7F;gBAAA;kBAAAkG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACP;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAENjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAK4O,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxCjP,OAAA;gBAAM4O,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAC5BrM,YAAY,CAACE,MAAM,gBAClB1C,OAAA;kBAAMkP,KAAK,EAAE;oBAAEjD,KAAK,GAAA5L,kBAAA,GAAE6L,iBAAiB,CAAC,CAAC,cAAA7L,kBAAA,uBAAnBA,kBAAA,CAAqB4L;kBAAM,CAAE;kBAAA4C,QAAA,IAAAvO,mBAAA,GAChD4L,iBAAiB,CAAC,CAAC,cAAA5L,mBAAA,uBAAnBA,mBAAA,CAAqB0I,IAAI,EAAC,GAAC,EAACxG,YAAY,CAACI,QAAQ,GAAG,CAAC,IAAI,IAAIJ,YAAY,CAACI,QAAQ,CAAC0L,OAAO,CAAC,CAAC,CAAC,IAAI;gBAAA;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9F,CAAC,GAEP;cACD;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAGL9L,qBAAqB,CAAC4J,MAAM,GAAG,CAAC,iBAC/B/M,OAAA;YAAK4O,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC7O,OAAA;cAAA6O,QAAA,EAAI;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5BjP,OAAA;cAAK4O,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAC9B1L,qBAAqB,CAACkF,GAAG,CAAC,CAACC,OAAO,EAAEyC,KAAK,kBACxC/K,OAAA;gBAAkB4O,SAAS,EAAE,iBAAiBtG,OAAO,KAAK7G,cAAc,GAAG,SAAS,GAAG,EAAE,EAAG;gBAAAoN,QAAA,GACzFvG,OAAO,EACPyC,KAAK,GAAG5H,qBAAqB,CAAC4J,MAAM,GAAG,CAAC,iBAAI/M,OAAA;kBAAM4O,SAAS,EAAC,OAAO;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA,GAFpElE,KAAK;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAGAM,MAAM,CAACC,IAAI,CAACzN,eAAe,CAAC,CAACgL,MAAM,GAAG,CAAC,iBACtC/M,OAAA;YAAK4O,SAAS,EAAC,0BAA0B;YAAAC,QAAA,gBACvC7O,OAAA;cAAA6O,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBjP,OAAA;cAAK4O,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC3BU,MAAM,CAACE,OAAO,CAAC1N,eAAe,CAAC,CAC7B2N,IAAI,CAAC,CAAC,GAAEC,CAAC,CAAC,EAAE,GAAEC,CAAC,CAAC,KAAK,CAACA,CAAC,CAAC7H,cAAc,IAAI,CAAC,KAAK4H,CAAC,CAAC5H,cAAc,IAAI,CAAC,CAAC,CAAC,CACvE2B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACXrB,GAAG,CAAC,CAAC,CAACwH,SAAS,EAAEC,QAAQ,CAAC,KAAK;gBAC9B,MAAMC,WAAW,GAAGpP,WAAW,CAAC0O,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC7H,UAAU,KAAKoI,SAAS,CAAC;gBACrE,oBACE7P,OAAA;kBAAqB4O,SAAS,EAAE,iBAAiBkB,QAAQ,CAAC9H,SAAS,GAAG,QAAQ,GAAG,UAAU,EAAG;kBAAA6G,QAAA,gBAC5F7O,OAAA;oBAAM4O,SAAS,EAAC,cAAc;oBAAAC,QAAA,EAAEgB;kBAAS;oBAAAf,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACjDjP,OAAA;oBAAM4O,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,EAC9BiB,QAAQ,CAAC9H,SAAS,GAAG,UAAU,GAAG;kBAAQ;oBAAA8G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvC,CAAC,eACPjP,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAC5B,IAAIpL,IAAI,CAAC,CAACqM,QAAQ,CAAC/H,cAAc,IAAI,CAAC,IAAI,IAAI,CAAC,CAACyB,kBAAkB,CAAC;kBAAC;oBAAAsF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjE,CAAC,EAEN,CAAAc,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEnH,gBAAgB,kBAC5B5I,OAAA;oBAAM4O,SAAS,EAAC,qBAAqB;oBAAAC,QAAA,GAClCxF,IAAI,CAAC6D,KAAK,CAAC6C,WAAW,CAACnH,gBAAgB,GAAG,GAAG,CAAC,EAAC,GAClD;kBAAA;oBAAAkG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CACP;gBAAA,GAbOY,SAAS;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAcd,CAAC;cAEV,CAAC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAGAM,MAAM,CAACC,IAAI,CAACvM,oBAAoB,CAAC,CAAC8J,MAAM,GAAG,CAAC,iBAC3C/M,OAAA;YAAK4O,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpC7O,OAAA;cAAA6O,QAAA,EAAI;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9BjP,OAAA;cAAK4O,SAAS,EAAC,eAAe;cAAAC,QAAA,GAC3B5L,oBAAoB,CAAC+M,YAAY,iBAChChQ,OAAA;gBAAK4O,SAAS,EAAC,SAAS;gBAAAC,QAAA,gBACtB7O,OAAA;kBAAM4O,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC5CjP,OAAA;kBAAM4O,SAAS,EAAE,sBAAsB3L,oBAAoB,CAAC+M,YAAY,EAAG;kBAAAnB,QAAA,EACxE5L,oBAAoB,CAAC+M;gBAAY;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACN,EACAhM,oBAAoB,CAACgN,mBAAmB,iBACvCjQ,OAAA;gBAAK4O,SAAS,EAAC,SAAS;gBAAAC,QAAA,gBACtB7O,OAAA;kBAAM4O,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACnDjP,OAAA;kBAAM4O,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAE5L,oBAAoB,CAACgN;gBAAmB;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9E,CACN,EACAhM,oBAAoB,CAACiN,iBAAiB,KAAKrI,SAAS,iBACnD7H,OAAA;gBAAK4O,SAAS,EAAC,SAAS;gBAAAC,QAAA,gBACtB7O,OAAA;kBAAM4O,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACnDjP,OAAA;kBAAM4O,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAE5L,oBAAoB,CAACiN;gBAAiB;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5E,CACN;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN,eAEDjP,OAAA;UAAK4O,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B7O,OAAA;YAAA6O,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBjP,OAAA;YACEmQ,KAAK,EAAE9O,MAAO;YACd+O,QAAQ,EAAGC,CAAC,IAAK/O,SAAS,CAAC+O,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC3CI,WAAW,EAAC,mCAAmC;YAC/C3B,SAAS,EAAC,cAAc;YACxB4B,IAAI,EAAC;UAAG;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFjP,OAAA;YAAQmP,OAAO,EAAE5E,gBAAiB;YAACqE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAEjE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACR1N,WAAW,CAACwL,MAAM,GAAG,CAAC,iBACrB/M,OAAA;YAAK4O,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B7O,OAAA;cAAA6O,QAAA,EAAI;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBjP,OAAA;cAAA6O,QAAA,EACGtN,WAAW,CAAC8G,GAAG,CAAC,CAACuC,IAAI,EAAEG,KAAK,kBAC3B/K,OAAA;gBAAA6O,QAAA,EAAiBjE;cAAI,GAAZG,KAAK;gBAAA+D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAC3B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLxO,WAAW,iBACVT,OAAA;QAAK4O,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpC7O,OAAA;UAAK4O,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnC7O,OAAA;YAAA6O,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCjP,OAAA;YAAK4O,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClC7O,OAAA;cAAM4O,SAAS,EAAC,kBAAkB;cAAAC,QAAA,GAAElN,cAAc,CAACoL,MAAM,EAAC,WAAS;YAAA;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACzE3M,oBAAoB,GAAG,CAAC,iBACvBtC,OAAA;cAAM4O,SAAS,EAAC,oBAAoB;cAACM,KAAK,EAAE;gBAAEjD,KAAK,EAAEF,oBAAoB,CAAC,CAAC,CAACE;cAAM,CAAE;cAAA4C,QAAA,GACjF9C,oBAAoB,CAAC,CAAC,CAACC,IAAI,EAAC,GAAC,EAACD,oBAAoB,CAAC,CAAC,CAAC/C,IAAI;YAAA;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CACP,EACAtN,cAAc,CAACoL,MAAM,GAAG,CAAC,iBACxB/M,OAAA;cACE4O,SAAS,EAAC,mBAAmB;cAC7BO,OAAO,EAAEA,CAAA,KAAMvN,iBAAiB,CAAC,EAAE,CAAE;cAAAiN,QAAA,EACtC;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNjP,OAAA;UAAK4O,SAAS,EAAC,yBAAyB;UAAC6B,GAAG,EAAEvM,gBAAiB;UAAA2K,QAAA,EAC5DlN,cAAc,CAACoL,MAAM,KAAK,CAAC,gBAC1B/M,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/B7O,OAAA;cAAK4O,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChC7O,OAAA;gBAAK4O,SAAS,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAClCjP,OAAA;gBAAA6O,QAAA,EAAM;cAAkC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,GAENtN,cAAc,CAAC0G,GAAG,CAAC,CAACqI,aAAa,EAAE3F,KAAK,kBACtC/K,OAAA;YAA4B4O,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACxD7O,OAAA;cAAK4O,SAAS,EAAC,2BAA2B;cAAAC,QAAA,gBACxC7O,OAAA;gBAAM4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAE6B,aAAa,CAACjJ;cAAU;gBAAAqH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChEjP,OAAA;gBAAK4O,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjC7O,OAAA;kBAAM4O,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EAAE6B,aAAa,CAACnH;gBAAI;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,EAC/DyB,aAAa,CAACzH,UAAU,iBACvBjJ,OAAA;kBAAM4O,SAAS,EAAE,oBAAoB8B,aAAa,CAACzH,UAAU,GAAG,GAAG,GAAG,MAAM,GAAGyH,aAAa,CAACzH,UAAU,GAAG,GAAG,GAAG,QAAQ,GAAG,KAAK,EAAG;kBAAA4F,QAAA,GAChIxF,IAAI,CAAC6D,KAAK,CAACwD,aAAa,CAACzH,UAAU,GAAG,GAAG,CAAC,EAAC,GAC9C;gBAAA;kBAAA6F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACP,EACAyB,aAAa,CAACxH,UAAU,GAAG,CAAC,iBAC3BlJ,OAAA;kBAAM4O,SAAS,EAAC,YAAY;kBAAAC,QAAA,GAAE6B,aAAa,CAACxH,UAAU,EAAC,QAAM;gBAAA;kBAAA4F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CACpE;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNjP,OAAA;cAAK4O,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAE6B,aAAa,CAAC1H;YAAI;cAAA8F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAE7DlE,KAAK,KAAKpJ,cAAc,CAACoL,MAAM,GAAG,CAAC,IAAI2D,aAAa,CAAC9I,qBAAqB,KAAKC,SAAS,iBACvF7H,OAAA;cAAK4O,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eACpC7O,OAAA;gBAAM4O,SAAS,EAAC,kBAAkB;gBAACM,KAAK,EAAE;kBAAEjD,KAAK,EAAEF,oBAAoB,CAAC,CAAC,CAACE;gBAAM,CAAE;gBAAA4C,QAAA,GAAC,YACvE,EAAC9C,oBAAoB,CAAC,CAAC,CAAC/C,IAAI;cAAA;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACN;UAAA,GAvBOyB,aAAa,CAACtH,EAAE;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAwBrB,CACN;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAGA9N,OAAO,CAAC4L,MAAM,GAAG,CAAC,iBACjB/M,OAAA;QAAK4O,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B7O,OAAA;UAAA6O,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC9B9N,OAAO,CAACkH,GAAG,CAAC,CAACsI,MAAM,EAAE5F,KAAK,kBACzB/K,OAAA;UAAiB4O,SAAS,EAAE,UAAU+B,MAAM,CAACC,WAAW,EAAG;UAAA/B,QAAA,gBACzD7O,OAAA;YAAK4O,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B7O,OAAA;cAAA6O,QAAA,GAAS8B,MAAM,CAACC,WAAW,CAACxK,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAACyK,WAAW,CAAC,CAAC,EAAC,GAAC;YAAA;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtEjP,OAAA;cAAA6O,QAAA,EAAI8B,MAAM,CAACxJ;YAAO;cAAA2H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACNjP,OAAA;YACEmP,OAAO,EAAEA,CAAA,KAAMrE,aAAa,CAACC,KAAK,CAAE;YACpC6D,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC3B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAVDlE,KAAK;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eAGDjP,OAAA;QAAK4O,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B7O,OAAA;UAAK4O,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BlO,WAAW,CAACoM,MAAM,GAAG,CAAC,gBACrB/M,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAK4O,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5B7O,OAAA,CAACF,GAAG;gBAAC6G,IAAI,EAAE6F,SAAU;gBAACsE,OAAO,EAAEzD;cAAa;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,eACNjP,OAAA;cAAK4O,SAAS,EAAC,uBAAuB;cAAAC,QAAA,gBACpC7O,OAAA;gBAAA6O,QAAA,EAAI;cAAuC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChDjP,OAAA;gBAAK4O,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACxBlO,WAAW,CAAC0H,GAAG,CAAC,CAACC,OAAO,EAAEyC,KAAK,kBAC9B/K,OAAA;kBAEE4O,SAAS,EAAE,gBAAgBtG,OAAO,CAACI,WAAW,GAAG,oBAAoB,GAAG,EAAE,IAAIJ,OAAO,CAACb,UAAU,KAAK1E,eAAe,GAAG,kBAAkB,GAAG,EAAE,EAAG;kBACjJmM,KAAK,EAAE;oBACL6B,cAAc,EAAE,GAAGhG,KAAK,GAAG,GAAG;kBAChC,CAAE;kBAAA8D,QAAA,gBAEF7O,OAAA;oBAAK4O,SAAS,EAAC,cAAc;oBAAAC,QAAA,gBAC3B7O,OAAA;sBAAK4O,SAAS,EAAC,wBAAwB;sBAAAC,QAAA,gBACrC7O,OAAA;wBAAM4O,SAAS,EAAC,cAAc;wBAAAC,QAAA,GAC3BvG,OAAO,CAACb,UAAU,EAClBa,OAAO,CAACI,WAAW,iBAClB1I,OAAA;0BAAM4O,SAAS,EAAC,8BAA8B;0BAAAC,QAAA,EAAC;wBAE/C;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CACP,EACA3G,OAAO,CAACb,UAAU,KAAK1E,eAAe,iBACrC/C,OAAA;0BAAM4O,SAAS,EAAC,gBAAgB;0BAAAC,QAAA,EAAC;wBAEjC;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CACP;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACG,CAAC,eACPjP,OAAA;wBAAK4O,SAAS,EAAC,iBAAiB;wBAAAC,QAAA,GAC7BvG,OAAO,CAACK,eAAe,GAAG,CAAC,iBAC1B3I,OAAA;0BAAM4O,SAAS,EAAC,eAAe;0BAAAC,QAAA,GAC5BvG,OAAO,CAACK,eAAe,EAAC,WAC3B;wBAAA;0BAAAmG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CACP,EACA3G,OAAO,CAACM,gBAAgB,iBACvB5I,OAAA;0BAAM4O,SAAS,EAAE,wBAAwBtG,OAAO,CAACM,gBAAgB,GAAG,GAAG,GAAG,MAAM,GAAGN,OAAO,CAACM,gBAAgB,GAAG,GAAG,GAAG,QAAQ,GAAG,KAAK,EAAG;0BAAAiG,QAAA,GACpIxF,IAAI,CAAC6D,KAAK,CAAC5E,OAAO,CAACM,gBAAgB,GAAG,GAAG,CAAC,EAAC,iBAC9C;wBAAA;0BAAAkG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CACP;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACE,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,eACNjP,OAAA;sBAAK4O,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,gBAC9B7O,OAAA;wBAAM4O,SAAS,EAAC,cAAc;wBAAAC,QAAA,EAC3BpD,kBAAkB,CAACnD,OAAO,CAACC,oBAAoB;sBAAC;wBAAAuG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC7C,CAAC,eACPjP,OAAA;wBAAM4O,SAAS,EAAC,oBAAoB;wBAAAC,QAAA,GACjCvG,OAAO,CAACG,UAAU,CAAC6F,OAAO,CAAC,CAAC,CAAC,EAAC,GACjC;sBAAA;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,EACN3G,OAAO,CAACO,qBAAqB,GAAG,CAAC,iBAChC7I,OAAA;wBAAM4O,SAAS,EAAC,cAAc;wBAAAC,QAAA,GAAC,OACxB,EAACvG,OAAO,CAACO,qBAAqB,CAACyF,OAAO,CAAC,CAAC,CAAC,EAAC,GACjD;sBAAA;wBAAAQ,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CACP;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACNjP,OAAA;oBAAK4O,SAAS,EAAC,cAAc;oBAAAC,QAAA,eAC3B7O,OAAA;sBACE4O,SAAS,EAAE,iBAAiBtG,OAAO,CAACI,WAAW,GAAG,gBAAgB,GAAG,EAAE,EAAG;sBAC1EwG,KAAK,EAAE;wBACL8B,KAAK,EAAE,GAAG3H,IAAI,CAAC4D,GAAG,CAAC3E,OAAO,CAACG,UAAU,EAAE,CAAC,CAAC,GAAG;wBAC5CmE,eAAe,EAAEJ,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACE,eAAe,CAAC7B,KAAK;sBAC9D;oBAAE;sBAAA+D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,EAEL,CAAC3G,OAAO,CAACQ,SAAS,IAAIR,OAAO,CAACS,UAAU,kBACvC/I,OAAA;oBAAK4O,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,GACnCvG,OAAO,CAACQ,SAAS,iBAChB9I,OAAA;sBAAM4O,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,GAAC,eAC7B,EAACvG,OAAO,CAACQ,SAAS,CAACwF,OAAO,CAAC,CAAC,CAAC,EAAC,IACnC;oBAAA;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CACP,EACA3G,OAAO,CAACS,UAAU,iBACjB/I,OAAA;sBAAM4O,SAAS,EAAC,kBAAkB;sBAAAC,QAAA,GAAC,SAC/B,EAAC,CAACvG,OAAO,CAACS,UAAU,GAAG,IAAI,EAAEuF,OAAO,CAAC,CAAC,CAAC;oBAAA;sBAAAQ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACrC,CACP;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CACN;gBAAA,GAvEI3G,OAAO,CAACb,UAAU;kBAAAqH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAwEpB,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAGNjP,OAAA;gBAAK4O,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9B7O,OAAA;kBAAK4O,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B7O,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAC;kBAAe;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACtDjP,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,GAC5B,CAAE9N,iBAAiB,GAAGsI,IAAI,CAAC4D,GAAG,CAACpM,eAAe,EAAE,CAAC,CAAC,GAAI,GAAG,EAAEyN,OAAO,CAAC,CAAC,CAAC,EAAC,GACzE;kBAAA;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNjP,OAAA;kBAAK4O,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B7O,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAC;kBAAO;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC9CjP,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,GAC5B,CAAE5N,WAAW,GAAGoI,IAAI,CAAC4D,GAAG,CAACpM,eAAe,EAAE,CAAC,CAAC,GAAI,GAAG,EAAEyN,OAAO,CAAC,CAAC,CAAC,EAAC,GACnE;kBAAA;oBAAAQ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNjP,OAAA;kBAAK4O,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B7O,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAC;kBAAY;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACnDjP,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAElO,WAAW,CAACoM;kBAAM;oBAAA+B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxD,CAAC,EACLpM,kBAAkB,GAAG,CAAC,iBACrB7C,OAAA;kBAAK4O,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B7O,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAC;kBAAe;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACtDjP,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAEhM;kBAAkB;oBAAAiM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACxD,CACN,eACDjP,OAAA;kBAAK4O,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B7O,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAAC;kBAAmB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC1DjP,OAAA;oBAAM4O,SAAS,EAAC,eAAe;oBAACM,KAAK,EAAE;sBAAEjD,KAAK,EAAEF,oBAAoB,CAAC,CAAC,CAACE;oBAAM,CAAE;oBAAA4C,QAAA,EAC5E9C,oBAAoB,CAAC,CAAC,CAAC/C;kBAAI;oBAAA8F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAENjP,OAAA;YAAK4O,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtB7O,OAAA;cAAA6O,QAAA,EAAI;YAA8B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvCjP,OAAA;cAAA6O,QAAA,EACGpO,WAAW,GACR,4JAA4J,GAC5J;YAA6K;cAAAqO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChL,CAAC,EACH,CAACxO,WAAW,iBACXT,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAK4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAsD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1FjP,OAAA;gBAAK4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAkE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtGjP,OAAA;gBAAK4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAoD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxFjP,OAAA;gBAAK4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAqD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzFjP,OAAA;gBAAK4O,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAA8C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/E,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNjP,OAAA;QAAK4O,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B7O,OAAA;UAAA6O,QAAA,EAAI;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3CjP,OAAA;UAAK4O,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B7O,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAM4O,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvCjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAA6O,QAAA,EAAQ;cAA2B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5CjP,OAAA;gBAAA6O,QAAA,EAAM;cAA0E;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNjP,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAM4O,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAA6O,QAAA,EAAQ;cAA4B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC7CjP,OAAA;gBAAA6O,QAAA,EAAM;cAA6E;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNjP,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAM4O,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAA6O,QAAA,EAAQ;cAA0B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC3CjP,OAAA;gBAAA6O,QAAA,EAAM;cAAoE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNjP,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAM4O,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAA6O,QAAA,EAAQ;cAA4B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC7CjP,OAAA;gBAAA6O,QAAA,EAAM;cAA2E;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNjP,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAM4O,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAA6O,QAAA,EAAQ;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACzCjP,OAAA;gBAAA6O,QAAA,EAAM;cAA8E;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNjP,OAAA;YAAK4O,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B7O,OAAA;cAAM4O,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCjP,OAAA;cAAK4O,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B7O,OAAA;gBAAA6O,QAAA,EAAQ;cAA2B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5CjP,OAAA;gBAAA6O,QAAA,EAAM;cAA8E;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENjP,OAAA;UAAK4O,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B7O,OAAA;YAAA6O,QAAA,GAAI,gCAAoB,EAAChL,cAAc;UAAA;YAAAiL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7CjP,OAAA;YAAA6O,QAAA,EAAG;UAIH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9O,EAAA,CA7lCQD,GAAG;AAAA+Q,EAAA,GAAH/Q,GAAG;AA+lCZ,eAAeA,GAAG;AAAC,IAAA+Q,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}