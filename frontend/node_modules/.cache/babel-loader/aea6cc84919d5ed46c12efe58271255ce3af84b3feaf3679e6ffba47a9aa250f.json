{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Meeting Assistant\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [totalSpeakingTime, setTotalSpeakingTime] = useState(0);\n  const [silenceTime, setSilenceTime] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n\n  // Enhanced real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const [speakerActivity, setSpeakerActivity] = useState({});\n  const [realtimeStats, setRealtimeStats] = useState({\n    meeting_duration: 0,\n    total_speaking_time: 0,\n    silence_time: 0\n  });\n\n  // Connection and performance states\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const [lastMessageTime, setLastMessageTime] = useState(Date.now());\n  const [messageCount, setMessageCount] = useState(0);\n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const performanceTimerRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  // Performance monitoring\n  useEffect(() => {\n    performanceTimerRef.current = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastMessage = now - lastMessageTime;\n      if (isRecording && timeSinceLastMessage > 5000) {\n        setConnectionQuality('poor');\n      } else if (isRecording && timeSinceLastMessage > 2000) {\n        setConnectionQuality('fair');\n      } else {\n        setConnectionQuality('good');\n      }\n    }, 1000);\n    return () => {\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n    };\n  }, [lastMessageTime, isRecording]);\n  useEffect(() => {\n    connectToWebSocket();\n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n  const connectToWebSocket = useCallback(() => {\n    if (isConnectingRef.current || ws.current && ws.current.readyState === WebSocket.CONNECTING) {\n      return;\n    }\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    try {\n      console.log('Connecting to WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      ws.current.onopen = () => {\n        console.log('Connected to WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        setConnectionQuality('good');\n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({\n            type: 'ping'\n          }));\n        }\n      };\n      ws.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessageTime(Date.now());\n          setMessageCount(prev => prev + 1);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      ws.current.onclose = event => {\n        console.log('WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      ws.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n      };\n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      setConnectionQuality('poor');\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  }, [backendUrl]);\n  const handleWebSocketMessage = useCallback(data => {\n    switch (data.type) {\n      case 'speaker_activity':\n        handleSpeakerActivity(data);\n        break;\n      case 'speaker_stats':\n        handleSpeakerStats(data);\n        break;\n      case 'transcription':\n        handleTranscription(data);\n        break;\n      case 'timer_update':\n        handleTimerUpdate(data);\n        break;\n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  }, []);\n  const handleSpeakerActivity = useCallback(data => {\n    const {\n      speaker_id,\n      action,\n      timestamp\n    } = data;\n    setLastActivity({\n      speaker_id,\n      action,\n      timestamp\n    });\n\n    // Update speaker activity tracking\n    setSpeakerActivity(prev => ({\n      ...prev,\n      [speaker_id]: {\n        ...prev[speaker_id],\n        last_action: action,\n        last_timestamp: timestamp,\n        is_active: action === 'started'\n      }\n    }));\n    if (action === 'started') {\n      setCurrentSpeaker(speaker_id);\n    } else if (action === 'stopped' && currentSpeaker === speaker_id) {\n      setCurrentSpeaker(null);\n    }\n  }, [currentSpeaker]);\n  const handleSpeakerStats = useCallback(data => {\n    const {\n      speakers,\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    } = data;\n\n    // Convert to the format expected by the chart\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking,\n      speech_segments: speaker.speech_segments || 0\n    }));\n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n    setTotalSpeakingTime(total_speaking_time);\n    setSilenceTime(silence_time);\n\n    // Update realtime stats\n    setRealtimeStats({\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    });\n  }, []);\n  const handleTranscription = useCallback(data => {\n    const {\n      speaker_id,\n      text,\n      timestamp\n    } = data;\n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: `${timestamp}-${Math.random()}`,\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString(),\n        confidence: data.confidence || 1.0 // If confidence is provided by server\n      };\n\n      // Keep only last 100 transcriptions for performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-100);\n    });\n  }, []);\n  const handleTimerUpdate = useCallback(data => {\n    const {\n      meeting_duration\n    } = data;\n    setMeetingDuration(meeting_duration);\n  }, []);\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(true);\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTotalSpeakingTime(0);\n        setSilenceTime(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setLastActivity(null);\n        setSpeakerActivity({});\n        setRealtimeStats({\n          meeting_duration: 0,\n          total_speaking_time: 0,\n          silence_time: 0\n        });\n        setMessageCount(0);\n        console.log('Meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({\n          message: 'Unknown error'\n        }));\n        console.error('Failed to start meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the backend server is running.');\n    }\n  };\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        setSpeakerActivity({});\n        console.log('Meeting stopped successfully');\n      } else {\n        console.error('Failed to stop meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping meeting:', error);\n    }\n  };\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items\n        })\n      });\n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n  const dismissPrompt = index => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const formatTimeDetailed = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = Math.floor(seconds % 60);\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n  const getConnectionStatusIcon = () => {\n    switch (connectionQuality) {\n      case 'good':\n        return '🟢';\n      case 'fair':\n        return '🟡';\n      case 'poor':\n        return '🔴';\n      default:\n        return '⚫';\n    }\n  };\n  const getConnectionStatusText = () => {\n    const base = isConnected ? 'Connected' : 'Disconnected';\n    if (isConnected && isRecording) {\n      return `${base} (${connectionQuality})`;\n    }\n    return base;\n  };\n\n  // Enhanced chart data with better visual feedback\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [{\n      label: 'Speaking Time (seconds)',\n      data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n      backgroundColor: speakerData.map((speaker, index) => {\n        const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];\n        const baseColor = colors[index % colors.length];\n        return speaker.is_speaking ? baseColor : baseColor + '80';\n      }),\n      borderColor: speakerData.map((speaker, index) => {\n        const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED', '#DB2777', '#0891B2'];\n        return colors[index % colors.length];\n      }),\n      borderWidth: speakerData.map(speaker => speaker.is_speaking ? 3 : 1)\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Real-Time Speaking Time Analysis',\n        font: {\n          size: 18\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers'\n        }\n      }\n    },\n    animation: {\n      duration: 300\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFA4 Real-Time Meeting Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `status-indicator ${isConnected ? 'connected' : 'disconnected'} ${connectionQuality}`,\n            children: [getConnectionStatusIcon(), \" \", getConnectionStatusText()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"performance-stats\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-count\",\n            children: [\"Messages: \", messageCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meeting-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopMeeting : startMeeting,\n            className: `control-button ${isRecording ? 'stop' : 'start'}`,\n            disabled: !isConnected,\n            children: isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meeting-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Duration:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(meetingDuration)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Speaking:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(totalSpeakingTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Silence:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTimeDetailed(silenceTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-speaker-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDF99\\uFE0F Live Audio Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `speaker-indicator ${currentSpeaker ? 'active' : 'inactive'}`,\n            children: currentSpeaker ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaking-animation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"audio-visualizer\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"speaker-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"speaker-text\",\n                  children: currentSpeaker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status-text\",\n                  children: \"is speaking...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"listening-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"listening-icon\",\n                children: \"\\uD83D\\uDC42\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"inactive-text\",\n                children: \"Listening for speech...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 15\n          }, this), Object.keys(speakerActivity).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speaker-activity-history\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-list\",\n              children: Object.entries(speakerActivity).sort(([, a], [, b]) => (b.last_timestamp || 0) - (a.last_timestamp || 0)).slice(0, 3).map(([speakerId, activity]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `activity-item ${activity.is_active ? 'active' : 'inactive'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"speaker-name\",\n                  children: speakerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"activity-status\",\n                  children: activity.is_active ? 'Speaking' : 'Silent'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"activity-time\",\n                  children: new Date((activity.last_timestamp || 0) * 1000).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 556,\n                  columnNumber: 27\n                }, this)]\n              }, speakerId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agenda-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Meeting Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: agenda,\n            onChange: e => setAgenda(e.target.value),\n            placeholder: \"Enter agenda items (one per line)\",\n            className: \"agenda-input\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setMeetingAgenda,\n            className: \"set-agenda-button\",\n            children: \"Set Agenda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), agendaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agenda-items\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Agenda:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: agendaItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: item\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcription-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCDD Live Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcription-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"transcript-count\",\n              children: [transcriptions.length, \" messages\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), transcriptions.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-transcripts\",\n              onClick: () => setTranscriptions([]),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcription-container\",\n          ref: transcriptionRef,\n          children: transcriptions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-transcription\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pulse-ring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Waiting for speech...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 17\n          }, this) : transcriptions.map(transcription => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcription-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-header-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"speaker-name\",\n                children: transcription.speaker_id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"transcription-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"transcription-time\",\n                  children: transcription.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 25\n                }, this), transcription.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"confidence-score\",\n                  children: [Math.round(transcription.confidence * 100), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"transcription-text\",\n              children: transcription.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 21\n            }, this)]\n          }, transcription.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this), prompts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompts-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Facilitator Prompts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this), prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prompt ${prompt.prompt_type}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [prompt.prompt_type.replace('_', ' ').toUpperCase(), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: prompt.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dismissPrompt(index),\n            className: \"dismiss-button\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: speakerData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-with-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: chartData,\n                options: chartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"speaker-stats fade-in\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uD83D\\uDCCA Real-time Speaker Analytics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-grid\",\n                children: speakerData.map((speaker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `speaker-stat ${speaker.is_speaking ? 'currently-speaking' : ''}`,\n                  style: {\n                    animationDelay: `${index * 0.1}s`\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"speaker-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-name-container\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-name\",\n                        children: [speaker.speaker_id, speaker.is_speaking && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"speaking-badge animate-pulse\",\n                          children: \"\\uD83C\\uDFA4 Live\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 684,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 681,\n                        columnNumber: 29\n                      }, this), speaker.speech_segments > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"segment-count\",\n                        children: [speaker.speech_segments, \" segments\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 690,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"speaker-metrics\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-time\",\n                        children: formatTimeDetailed(speaker.talk_time_in_seconds)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 696,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"speaker-percentage\",\n                        children: [speaker.percentage.toFixed(1), \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 699,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 679,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `progress-fill ${speaker.is_speaking ? 'active-speaker' : ''}`,\n                      style: {\n                        width: `${Math.max(speaker.percentage, 2)}%`,\n                        backgroundColor: chartData.datasets[0].backgroundColor[index]\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 25\n                  }, this)]\n                }, speaker.speaker_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meeting-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Active Speaking\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: [(totalSpeakingTime / Math.max(meetingDuration, 1) * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Silence\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 726,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: [(silenceTime / Math.max(meetingDuration, 1) * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"summary-stat\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-label\",\n                    children: \"Participants\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"summary-value\",\n                    children: speakerData.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 733,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFAF Ready for Real-time Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isRecording ? 'Advanced voice detection is active. Start speaking to see instant analysis with improved speaker identification!' : 'Click \"Start Meeting\" to begin enhanced real-time speech analysis with voice embeddings and better accuracy.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this), !isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-preview\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\u26A1 Instant voice activity detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83E\\uDDE0 AI-powered speaker identification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: \"\\uD83D\\uDCCA Real-time participation metrics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCD6 Enhanced Real-time Features\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\u26A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Instant Voice Detection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Advanced VAD with 30ms frame processing for immediate response\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"AI Speaker Identification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Voice embeddings using MFCC features for accurate speaker recognition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Real-time Analytics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Live participation metrics with 100ms update intervals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feature enhanced\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feature-icon\",\n              children: \"\\uD83C\\uDFA4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Enhanced Transcription\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Improved Whisper integration with confidence scoring\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 471,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HbaTwY033zwn7kLPPupfO/a/zKY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","isConnected","setIsConnected","isRecording","setIsRecording","speakerData","setSpeakerData","meetingDuration","setMeetingDuration","totalSpeakingTime","setTotalSpeakingTime","silenceTime","setSilenceTime","prompts","setPrompts","agenda","setAgenda","agendaItems","setAgendaItems","currentSpeaker","setCurrentSpeaker","transcriptions","setTranscriptions","lastActivity","setLastActivity","speakerActivity","setSpeakerActivity","realtimeStats","setRealtimeStats","meeting_duration","total_speaking_time","silence_time","connectionQuality","setConnectionQuality","lastMessageTime","setLastMessageTime","Date","now","messageCount","setMessageCount","ws","reconnectTimeoutRef","isConnectingRef","transcriptionRef","performanceTimerRef","backendUrl","process","env","REACT_APP_BACKEND_URL","current","setInterval","timeSinceLastMessage","clearInterval","connectToWebSocket","clearTimeout","onopen","onmessage","onclose","onerror","readyState","WebSocket","OPEN","CONNECTING","close","scrollTop","scrollHeight","wsUrl","replace","console","log","send","JSON","stringify","type","event","data","parse","prev","handleWebSocketMessage","error","code","reason","setTimeout","handleSpeakerActivity","handleSpeakerStats","handleTranscription","handleTimerUpdate","speaker_id","action","timestamp","last_action","last_timestamp","is_active","speakers","formattedSpeakers","map","speaker","talk_time_in_seconds","talk_time_seconds","percentage","is_speaking","speech_segments","text","newTranscription","id","Math","random","time","toLocaleTimeString","confidence","updated","slice","startMeeting","response","fetch","method","headers","ok","errorData","json","catch","message","alert","stopMeeting","setMeetingAgenda","trim","items","split","filter","item","body","dismissPrompt","index","_","i","formatTime","seconds","minutes","floor","remainingSeconds","toString","padStart","formatTimeDetailed","hours","secs","getConnectionStatusIcon","getConnectionStatusText","base","chartData","labels","datasets","label","backgroundColor","colors","baseColor","length","borderColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","font","size","scales","y","beginAtZero","x","animation","duration","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Object","keys","entries","sort","a","b","speakerId","activity","value","onChange","e","target","placeholder","rows","ref","transcription","round","prompt","prompt_type","toUpperCase","options","style","animationDelay","toFixed","width","max","_c","$RefreshReg$"],"sources":["C:/Personal/Meeting Assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [speakerData, setSpeakerData] = useState([]);\n  const [meetingDuration, setMeetingDuration] = useState(0);\n  const [totalSpeakingTime, setTotalSpeakingTime] = useState(0);\n  const [silenceTime, setSilenceTime] = useState(0);\n  const [prompts, setPrompts] = useState([]);\n  const [agenda, setAgenda] = useState('');\n  const [agendaItems, setAgendaItems] = useState([]);\n  \n  // Enhanced real-time states\n  const [currentSpeaker, setCurrentSpeaker] = useState(null);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [lastActivity, setLastActivity] = useState(null);\n  const [speakerActivity, setSpeakerActivity] = useState({});\n  const [realtimeStats, setRealtimeStats] = useState({\n    meeting_duration: 0,\n    total_speaking_time: 0,\n    silence_time: 0\n  });\n  \n  // Connection and performance states\n  const [connectionQuality, setConnectionQuality] = useState('good');\n  const [lastMessageTime, setLastMessageTime] = useState(Date.now());\n  const [messageCount, setMessageCount] = useState(0);\n  \n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const isConnectingRef = useRef(false);\n  const transcriptionRef = useRef(null);\n  const performanceTimerRef = useRef(null);\n  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n  // Performance monitoring\n  useEffect(() => {\n    performanceTimerRef.current = setInterval(() => {\n      const now = Date.now();\n      const timeSinceLastMessage = now - lastMessageTime;\n      \n      if (isRecording && timeSinceLastMessage > 5000) {\n        setConnectionQuality('poor');\n      } else if (isRecording && timeSinceLastMessage > 2000) {\n        setConnectionQuality('fair');\n      } else {\n        setConnectionQuality('good');\n      }\n    }, 1000);\n\n    return () => {\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n    };\n  }, [lastMessageTime, isRecording]);\n\n  useEffect(() => {\n    connectToWebSocket();\n    \n    return () => {\n      isConnectingRef.current = false;\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n        reconnectTimeoutRef.current = null;\n      }\n      if (performanceTimerRef.current) {\n        clearInterval(performanceTimerRef.current);\n      }\n      if (ws.current) {\n        ws.current.onopen = null;\n        ws.current.onmessage = null;\n        ws.current.onclose = null;\n        ws.current.onerror = null;\n        \n        if (ws.current.readyState === WebSocket.OPEN || ws.current.readyState === WebSocket.CONNECTING) {\n          ws.current.close();\n        }\n        ws.current = null;\n      }\n    };\n  }, []);\n\n  // Auto-scroll transcriptions\n  useEffect(() => {\n    if (transcriptionRef.current) {\n      transcriptionRef.current.scrollTop = transcriptionRef.current.scrollHeight;\n    }\n  }, [transcriptions]);\n\n  const connectToWebSocket = useCallback(() => {\n    if (isConnectingRef.current || (ws.current && ws.current.readyState === WebSocket.CONNECTING)) {\n      return;\n    }\n\n    if (ws.current) {\n      ws.current.onopen = null;\n      ws.current.onmessage = null;\n      ws.current.onclose = null;\n      ws.current.onerror = null;\n      if (ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close();\n      }\n      ws.current = null;\n    }\n\n    const wsUrl = backendUrl.replace('http', 'ws') + '/api/ws';\n    isConnectingRef.current = true;\n    \n    try {\n      console.log('Connecting to WebSocket:', wsUrl);\n      ws.current = new WebSocket(wsUrl);\n      \n      ws.current.onopen = () => {\n        console.log('Connected to WebSocket');\n        isConnectingRef.current = false;\n        setIsConnected(true);\n        setConnectionQuality('good');\n        \n        if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n          ws.current.send(JSON.stringify({ type: 'ping' }));\n        }\n      };\n      \n      ws.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessageTime(Date.now());\n          setMessageCount(prev => prev + 1);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      \n      ws.current.onclose = (event) => {\n        console.log('WebSocket connection closed', event.code, event.reason);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n        \n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectTimeoutRef.current) {\n            clearTimeout(reconnectTimeoutRef.current);\n          }\n          \n          reconnectTimeoutRef.current = setTimeout(() => {\n            connectToWebSocket();\n          }, 3000);\n        }\n      };\n      \n      ws.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        isConnectingRef.current = false;\n        setIsConnected(false);\n        setConnectionQuality('poor');\n      };\n      \n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      isConnectingRef.current = false;\n      setIsConnected(false);\n      setConnectionQuality('poor');\n      \n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectToWebSocket();\n      }, 3000);\n    }\n  }, [backendUrl]);\n\n  const handleWebSocketMessage = useCallback((data) => {\n    switch (data.type) {\n      case 'speaker_activity':\n        handleSpeakerActivity(data);\n        break;\n        \n      case 'speaker_stats':\n        handleSpeakerStats(data);\n        break;\n        \n      case 'transcription':\n        handleTranscription(data);\n        break;\n        \n      case 'timer_update':\n        handleTimerUpdate(data);\n        break;\n        \n      case 'prompt':\n        setPrompts(prev => [...prev, data]);\n        break;\n        \n      default:\n        console.log('Unknown message type:', data.type, data);\n    }\n  }, []);\n\n  const handleSpeakerActivity = useCallback((data) => {\n    const { speaker_id, action, timestamp } = data;\n    \n    setLastActivity({ speaker_id, action, timestamp });\n    \n    // Update speaker activity tracking\n    setSpeakerActivity(prev => ({\n      ...prev,\n      [speaker_id]: {\n        ...prev[speaker_id],\n        last_action: action,\n        last_timestamp: timestamp,\n        is_active: action === 'started'\n      }\n    }));\n    \n    if (action === 'started') {\n      setCurrentSpeaker(speaker_id);\n    } else if (action === 'stopped' && currentSpeaker === speaker_id) {\n      setCurrentSpeaker(null);\n    }\n  }, [currentSpeaker]);\n\n  const handleSpeakerStats = useCallback((data) => {\n    const { speakers, meeting_duration, total_speaking_time, silence_time } = data;\n    \n    // Convert to the format expected by the chart\n    const formattedSpeakers = speakers.map(speaker => ({\n      speaker_id: speaker.speaker_id,\n      talk_time_in_seconds: speaker.talk_time_seconds,\n      percentage: speaker.percentage,\n      is_speaking: speaker.is_speaking,\n      speech_segments: speaker.speech_segments || 0\n    }));\n    \n    setSpeakerData(formattedSpeakers);\n    setMeetingDuration(meeting_duration);\n    setTotalSpeakingTime(total_speaking_time);\n    setSilenceTime(silence_time);\n    \n    // Update realtime stats\n    setRealtimeStats({\n      meeting_duration,\n      total_speaking_time,\n      silence_time\n    });\n  }, []);\n\n  const handleTranscription = useCallback((data) => {\n    const { speaker_id, text, timestamp } = data;\n    \n    setTranscriptions(prev => {\n      const newTranscription = {\n        id: `${timestamp}-${Math.random()}`,\n        speaker_id,\n        text,\n        timestamp,\n        time: new Date(timestamp * 1000).toLocaleTimeString(),\n        confidence: data.confidence || 1.0 // If confidence is provided by server\n      };\n      \n      // Keep only last 100 transcriptions for performance\n      const updated = [...prev, newTranscription];\n      return updated.slice(-100);\n    });\n  }, []);\n\n  const handleTimerUpdate = useCallback((data) => {\n    const { meeting_duration } = data;\n    setMeetingDuration(meeting_duration);\n  }, []);\n\n  const startMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/start`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(true);\n        setPrompts([]);\n        setSpeakerData([]);\n        setMeetingDuration(0);\n        setTotalSpeakingTime(0);\n        setSilenceTime(0);\n        setTranscriptions([]);\n        setCurrentSpeaker(null);\n        setLastActivity(null);\n        setSpeakerActivity({});\n        setRealtimeStats({ meeting_duration: 0, total_speaking_time: 0, silence_time: 0 });\n        setMessageCount(0);\n        console.log('Meeting started successfully');\n      } else {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        console.error('Failed to start meeting:', errorData);\n        alert(`Failed to start meeting: ${errorData.message || 'Please check if the backend is running.'}`);\n      }\n    } catch (error) {\n      console.error('Error starting meeting:', error);\n      alert('Error starting meeting. Please check your connection and ensure the backend server is running.');\n    }\n  };\n\n  const stopMeeting = async () => {\n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/stop`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (response.ok) {\n        setIsRecording(false);\n        setCurrentSpeaker(null);\n        setSpeakerActivity({});\n        console.log('Meeting stopped successfully');\n      } else {\n        console.error('Failed to stop meeting');\n      }\n    } catch (error) {\n      console.error('Error stopping meeting:', error);\n    }\n  };\n\n  const setMeetingAgenda = async () => {\n    if (!agenda.trim()) return;\n    \n    const items = agenda.split('\\n').filter(item => item.trim()).map(item => item.trim());\n    \n    try {\n      const response = await fetch(`${backendUrl}/api/meeting/agenda`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ items }),\n      });\n      \n      if (response.ok) {\n        setAgendaItems(items);\n        console.log('Agenda set successfully');\n      } else {\n        console.error('Failed to set agenda');\n      }\n    } catch (error) {\n      console.error('Error setting agenda:', error);\n    }\n  };\n\n  const dismissPrompt = (index) => {\n    setPrompts(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const formatTimeDetailed = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = Math.floor(seconds % 60);\n    \n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getConnectionStatusIcon = () => {\n    switch (connectionQuality) {\n      case 'good': return '🟢';\n      case 'fair': return '🟡';\n      case 'poor': return '🔴';\n      default: return '⚫';\n    }\n  };\n\n  const getConnectionStatusText = () => {\n    const base = isConnected ? 'Connected' : 'Disconnected';\n    if (isConnected && isRecording) {\n      return `${base} (${connectionQuality})`;\n    }\n    return base;\n  };\n\n  // Enhanced chart data with better visual feedback\n  const chartData = {\n    labels: speakerData.map(speaker => speaker.speaker_id),\n    datasets: [\n      {\n        label: 'Speaking Time (seconds)',\n        data: speakerData.map(speaker => speaker.talk_time_in_seconds),\n        backgroundColor: speakerData.map((speaker, index) => {\n          const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#06B6D4'];\n          const baseColor = colors[index % colors.length];\n          return speaker.is_speaking ? baseColor : baseColor + '80';\n        }),\n        borderColor: speakerData.map((speaker, index) => {\n          const colors = ['#2563EB', '#059669', '#D97706', '#DC2626', '#7C3AED', '#DB2777', '#0891B2'];\n          return colors[index % colors.length];\n        }),\n        borderWidth: speakerData.map(speaker => speaker.is_speaking ? 3 : 1),\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Real-Time Speaking Time Analysis',\n        font: {\n          size: 18,\n        },\n      },\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Time (seconds)',\n        },\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Speakers',\n        },\n      },\n    },\n    animation: {\n      duration: 300,\n    },\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>🎤 Real-Time Meeting Assistant</h1>\n        <div className=\"header-info\">\n          <div className=\"connection-status\">\n            <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'} ${connectionQuality}`}>\n              {getConnectionStatusIcon()} {getConnectionStatusText()}\n            </span>\n          </div>\n          {isRecording && (\n            <div className=\"performance-stats\">\n              <span className=\"message-count\">Messages: {messageCount}</span>\n            </div>\n          )}\n        </div>\n      </header>\n\n      <main className=\"main-content\">\n        {/* Enhanced Control Panel */}\n        <div className=\"control-panel\">\n          <div className=\"meeting-controls\">\n            <button\n              onClick={isRecording ? stopMeeting : startMeeting}\n              className={`control-button ${isRecording ? 'stop' : 'start'}`}\n              disabled={!isConnected}\n            >\n              {isRecording ? '⏹️ Stop Meeting' : '▶️ Start Meeting'}\n            </button>\n            \n            <div className=\"meeting-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-label\">Duration:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(meetingDuration)}</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Speaking:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(totalSpeakingTime)}</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-label\">Silence:</span>\n                <span className=\"stat-value\">{formatTimeDetailed(silenceTime)}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Enhanced Real-time Speaker Status */}\n          {isRecording && (\n            <div className=\"current-speaker-status\">\n              <h3>🎙️ Live Audio Status</h3>\n              <div className={`speaker-indicator ${currentSpeaker ? 'active' : 'inactive'}`}>\n                {currentSpeaker ? (\n                  <div className=\"speaking-animation\">\n                    <div className=\"audio-visualizer\">\n                      <div className=\"bar\"></div>\n                      <div className=\"bar\"></div>\n                      <div className=\"bar\"></div>\n                      <div className=\"bar\"></div>\n                    </div>\n                    <div className=\"speaker-info\">\n                      <span className=\"speaker-text\">{currentSpeaker}</span>\n                      <span className=\"status-text\">is speaking...</span>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"listening-state\">\n                    <div className=\"listening-icon\">👂</div>\n                    <span className=\"inactive-text\">Listening for speech...</span>\n                  </div>\n                )}\n              </div>\n              \n              {/* Speaker activity history */}\n              {Object.keys(speakerActivity).length > 0 && (\n                <div className=\"speaker-activity-history\">\n                  <h4>Recent Activity</h4>\n                  <div className=\"activity-list\">\n                    {Object.entries(speakerActivity)\n                      .sort(([,a], [,b]) => (b.last_timestamp || 0) - (a.last_timestamp || 0))\n                      .slice(0, 3)\n                      .map(([speakerId, activity]) => (\n                        <div key={speakerId} className={`activity-item ${activity.is_active ? 'active' : 'inactive'}`}>\n                          <span className=\"speaker-name\">{speakerId}</span>\n                          <span className=\"activity-status\">\n                            {activity.is_active ? 'Speaking' : 'Silent'}\n                          </span>\n                          <span className=\"activity-time\">\n                            {new Date((activity.last_timestamp || 0) * 1000).toLocaleTimeString()}\n                          </span>\n                        </div>\n                      ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"agenda-section\">\n            <h3>Meeting Agenda</h3>\n            <textarea\n              value={agenda}\n              onChange={(e) => setAgenda(e.target.value)}\n              placeholder=\"Enter agenda items (one per line)\"\n              className=\"agenda-input\"\n              rows=\"4\"\n            />\n            <button onClick={setMeetingAgenda} className=\"set-agenda-button\">\n              Set Agenda\n            </button>\n            {agendaItems.length > 0 && (\n              <div className=\"agenda-items\">\n                <h4>Current Agenda:</h4>\n                <ul>\n                  {agendaItems.map((item, index) => (\n                    <li key={index}>{item}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Enhanced Real-time Transcription */}\n        {isRecording && (\n          <div className=\"transcription-section\">\n            <div className=\"transcription-header\">\n              <h3>📝 Live Transcription</h3>\n              <div className=\"transcription-stats\">\n                <span className=\"transcript-count\">{transcriptions.length} messages</span>\n                {transcriptions.length > 0 && (\n                  <button \n                    className=\"clear-transcripts\"\n                    onClick={() => setTranscriptions([])}\n                  >\n                    Clear\n                  </button>\n                )}\n              </div>\n            </div>\n            <div className=\"transcription-container\" ref={transcriptionRef}>\n              {transcriptions.length === 0 ? (\n                <div className=\"no-transcription\">\n                  <div className=\"waiting-indicator\">\n                    <div className=\"pulse-ring\"></div>\n                    <span>Waiting for speech...</span>\n                  </div>\n                </div>\n              ) : (\n                transcriptions.map((transcription) => (\n                  <div key={transcription.id} className=\"transcription-item\">\n                    <div className=\"transcription-header-item\">\n                      <span className=\"speaker-name\">{transcription.speaker_id}</span>\n                      <div className=\"transcription-meta\">\n                        <span className=\"transcription-time\">{transcription.time}</span>\n                        {transcription.confidence && (\n                          <span className=\"confidence-score\">\n                            {Math.round(transcription.confidence * 100)}%\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"transcription-text\">{transcription.text}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Prompts Section */}\n        {prompts.length > 0 && (\n          <div className=\"prompts-section\">\n            <h3>📋 Facilitator Prompts</h3>\n            {prompts.map((prompt, index) => (\n              <div key={index} className={`prompt ${prompt.prompt_type}`}>\n                <div className=\"prompt-content\">\n                  <strong>{prompt.prompt_type.replace('_', ' ').toUpperCase()}:</strong>\n                  <p>{prompt.message}</p>\n                </div>\n                <button\n                  onClick={() => dismissPrompt(index)}\n                  className=\"dismiss-button\"\n                >\n                  ✕\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Enhanced Speaking Time Visualization */}\n        <div className=\"chart-section\">\n          <div className=\"chart-container\">\n            {speakerData.length > 0 ? (\n              <div className=\"chart-with-stats\">\n                <div className=\"chart-wrapper\">\n                  <Bar data={chartData} options={chartOptions} />\n                </div>\n                <div className=\"speaker-stats fade-in\">\n                  <h3>📊 Real-time Speaker Analytics</h3>\n                  <div className=\"stats-grid\">\n                    {speakerData.map((speaker, index) => (\n                      <div \n                        key={speaker.speaker_id} \n                        className={`speaker-stat ${speaker.is_speaking ? 'currently-speaking' : ''}`}\n                        style={{\n                          animationDelay: `${index * 0.1}s`\n                        }}\n                      >\n                        <div className=\"speaker-info\">\n                          <div className=\"speaker-name-container\">\n                            <span className=\"speaker-name\">\n                              {speaker.speaker_id}\n                              {speaker.is_speaking && (\n                                <span className=\"speaking-badge animate-pulse\">\n                                  🎤 Live\n                                </span>\n                              )}\n                            </span>\n                            {speaker.speech_segments > 0 && (\n                              <span className=\"segment-count\">\n                                {speaker.speech_segments} segments\n                              </span>\n                            )}\n                          </div>\n                          <div className=\"speaker-metrics\">\n                            <span className=\"speaker-time\">\n                              {formatTimeDetailed(speaker.talk_time_in_seconds)}\n                            </span>\n                            <span className=\"speaker-percentage\">\n                              {speaker.percentage.toFixed(1)}%\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"progress-bar\">\n                          <div\n                            className={`progress-fill ${speaker.is_speaking ? 'active-speaker' : ''}`}\n                            style={{\n                              width: `${Math.max(speaker.percentage, 2)}%`,\n                              backgroundColor: chartData.datasets[0].backgroundColor[index],\n                            }}\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  \n                  {/* Meeting summary stats */}\n                  <div className=\"meeting-summary\">\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Active Speaking</span>\n                      <span className=\"summary-value\">\n                        {((totalSpeakingTime / Math.max(meetingDuration, 1)) * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Silence</span>\n                      <span className=\"summary-value\">\n                        {((silenceTime / Math.max(meetingDuration, 1)) * 100).toFixed(1)}%\n                      </span>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <span className=\"summary-label\">Participants</span>\n                      <span className=\"summary-value\">{speakerData.length}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"no-data\">\n                <h3>🎯 Ready for Real-time Analysis</h3>\n                <p>\n                  {isRecording\n                    ? 'Advanced voice detection is active. Start speaking to see instant analysis with improved speaker identification!'\n                    : 'Click \"Start Meeting\" to begin enhanced real-time speech analysis with voice embeddings and better accuracy.'}\n                </p>\n                {!isRecording && (\n                  <div className=\"feature-preview\">\n                    <div className=\"preview-item\">⚡ Instant voice activity detection</div>\n                    <div className=\"preview-item\">🧠 AI-powered speaker identification</div>\n                    <div className=\"preview-item\">📊 Real-time participation metrics</div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Enhanced Instructions */}\n        <div className=\"instructions\">\n          <h3>📖 Enhanced Real-time Features</h3>\n          <div className=\"feature-list\">\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">⚡</span>\n              <div className=\"feature-content\">\n                <strong>Instant Voice Detection</strong>\n                <span>Advanced VAD with 30ms frame processing for immediate response</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🧠</span>\n              <div className=\"feature-content\">\n                <strong>AI Speaker Identification</strong>\n                <span>Voice embeddings using MFCC features for accurate speaker recognition</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">📊</span>\n              <div className=\"feature-content\">\n                <strong>Real-time Analytics</strong>\n                <span>Live participation metrics with 100ms update intervals</span>\n              </div>\n            </div>\n            <div className=\"feature enhanced\">\n              <span className=\"feature-icon\">🎤</span>\n              <div className=\"feature-content\">\n                <strong>Enhanced Transcription</strong>\n                <span>Improved Whisper integration with confidence scoring</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}